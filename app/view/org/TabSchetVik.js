/*
 * File: app/view/org/TabSchetVik.js
 * Date: Wed Sep 06 2017 21:00:16 GMT+0300 (EEST)
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Ykis.view.org.TabSchetVik', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.tabschetvik',

    requires: [
        'Ykis.view.org.TabSchetVikViewModel',
        'Ext.grid.Panel',
        'Ext.view.Table',
        'Ext.grid.column.Action',
        'Ext.grid.column.Date',
        'Ext.grid.column.Number',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.toolbar.Separator',
        'Ext.form.field.Date',
        'Ext.toolbar.Spacer',
        'Ext.form.field.Checkbox',
        'Ext.grid.feature.Grouping',
        'Ext.XTemplate',
        'Ext.selection.CheckboxModel'
    ],

    viewModel: {
        type: 'tabschetvik'
    },
    height: 807,
    id: 'tabSchetVik',
    scrollable: true,
    width: 1068,
    layout: 'fit',
    closable: true,
    title: 'Счета',
    defaultListenerScope: true,

    initConfig: function(instanceConfig) {
        var me = this,
            config = {
                items: [
                    {
                        xtype: 'gridpanel',
                        id: 'grSchetVik',
                        scrollable: true,
                        title: '',
                        store: 'StSchetVik',
                        viewConfig: {
                            emptyText: 'Счета за этот период не выписаны'
                        },
                        columns: [
                            {
                                xtype: 'actioncolumn',
                                width: 30,
                                menuDisabled: true,
                                items: [
                                    {
                                        handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                            var winprintschetvik = Ext.ClassManager.instantiateByAlias('widget.winprintschetvik');
                                            var form = winprintschetvik.down('#fmPrintScheVik');
                                            var stUser = Ext.data.StoreManager.get("StUser");
                                            var values =stUser.getAt(0);
                                            var value = record;
                                            //console.log(value);
                                            view.getSelectionModel().select(rowIndex);
                                            form.loadRecord(value);
                                            winprintschetvik.show();
                                        },
                                        getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                            var golovnoe = r.get('golovnoe');
                                            var ind = r.get('ind');


                                            if ((golovnoe) || (ind)) {
                                                metaData = 'x-grid-center-icon';
                                            } else {
                                                metaData = 'x-hide-display';
                                            }
                                            return metaData;
                                        },
                                        icon: 'resources/css/images/ico/printer.png',
                                        tooltip: 'Печать счета'
                                    }
                                ]
                            },
                            {
                                xtype: 'gridcolumn',
                                hidden: true,
                                width: 60,
                                dataIndex: 'rec_id',
                                text: 'rec_id'
                            },
                            {
                                xtype: 'gridcolumn',
                                hidden: true,
                                dataIndex: 'fname',
                                text: 'Орг'
                            },
                            {
                                xtype: 'gridcolumn',
                                hidden: true,
                                width: 60,
                                dataIndex: 'golovnoe',
                                text: 'gol'
                            },
                            {
                                xtype: 'gridcolumn',
                                hidden: true,
                                width: 60,
                                dataIndex: 'nom',
                                text: 'nom'
                            },
                            {
                                xtype: 'gridcolumn',
                                hidden: true,
                                width: 60,
                                dataIndex: 'org_id',
                                text: 'org_id'
                            },
                            {
                                xtype: 'gridcolumn',
                                hidden: true,
                                width: 69,
                                dataIndex: 'filial_id',
                                text: 'filial_id'
                            },
                            {
                                xtype: 'gridcolumn',
                                items: {
                                    xtype: 'textfield',
                                    flex: 1,
                                    margin: 2,
                                    enableKeyEvents: true,
                                    listeners: {
                                        keyup: function() {
                                    var store = this.up('tablepanel').store;
                                    store.clearFilter();
                                    if (this.value) {
                                    store.filter({
                                    property     : 'fname',
                                    value         : this.value,
                                    anyMatch      : true,
                                    caseSensitive : false
                                    });
                                    }
                                    },
                                        buffer: 1000
                                    }
                                },
                                width: 289,
                                dataIndex: 'sname',
                                menuDisabled: true,
                                text: 'Филиал'
                            },
                            {
                                xtype: 'gridcolumn',
                                items: {
                                    xtype: 'textfield',
                                    flex: 1,
                                    margin: 2,
                                    enableKeyEvents: true,
                                    listeners: {
                                        keyup: function() {
                                                        var store = this.up('tablepanel').store;
                                                        store.clearFilter();
                                                        if (this.value) {
                                                            store.filter({
                                                                property     : 'edrpou',
                                                                value         : this.value,
                                                                anyMatch      : true,
                                                                caseSensitive : false
                                                            });
                                                        }
                                                    },
                                        buffer: 1000
                                    }
                                },
                                width: 99,
                                dataIndex: 'edrpou',
                                menuDisabled: true,
                                text: 'ЕДРПУ'
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 50,
                                dataIndex: 'nom',
                                menuDisabled: true,
                                text: '№Сч'
                            },
                            {
                                xtype: 'datecolumn',
                                width: 75,
                                dataIndex: 'data',
                                menuDisabled: true,
                                text: 'Дата',
                                format: 'd-m-y'
                            },
                            {
                                xtype: 'numbercolumn',
                                summaryRenderer: function(val, params, data) {
                                    var n =Ext.util.Format.number(val,'0.00');
                                    if (val >= 0) {
                                        return '<span style="color:#000; ">' + n + '</span>';
                                    } else  {
                                        return '<span style="color:red; ">' + n + '</span>';
                                    }
                                },
                                summaryType: 'sum',
                                width: 80,
                                align: 'right',
                                dataIndex: 'zadol',
                                menuDisabled: true,
                                text: 'Задол',
                                format: '0.00'
                            },
                            {
                                xtype: 'numbercolumn',
                                summaryRenderer: function(val, params, data) {
                                    var n =Ext.util.Format.number(val,'0.00');
                                    if (val >= 0) {
                                        return '<span style="color:#000; ">' + n + '</span>';
                                    } else  {
                                        return '<span style="color:red;;">' + n + '</span>';
                                    }
                                },
                                summaryType: 'sum',
                                width: 72,
                                align: 'right',
                                dataIndex: 'nachisleno',
                                menuDisabled: true,
                                text: 'Начисл',
                                format: '0.00'
                            },
                            {
                                xtype: 'numbercolumn',
                                summaryRenderer: function(val, params, data) {
                                    var n =Ext.util.Format.number(val,'0.00');
                                    if (val >= 0) {
                                        return '<span style="color:#000;">' + n + '</span>';
                                    } else  {
                                        return '<span style="color:red;">' + n + '</span>';
                                    }
                                },
                                summaryType: 'sum',
                                width: 70,
                                align: 'right',
                                dataIndex: 'nds',
                                menuDisabled: true,
                                text: 'НДС',
                                format: '0.00'
                            },
                            {
                                xtype: 'numbercolumn',
                                summaryRenderer: function(val, params, data) {
                                    var n =Ext.util.Format.number(val,'0.00');
                                    if (val >= 0) {
                                        return '<span style="color:#000;">' + n + '</span>';
                                    } else  {
                                        return '<span style="color:red;">' + n + '</span>';
                                    }
                                },
                                summaryType: 'sum',
                                width: 70,
                                align: 'right',
                                dataIndex: 'itogo',
                                menuDisabled: true,
                                text: 'Итого',
                                format: '0.00'
                            },
                            {
                                xtype: 'numbercolumn',
                                summaryRenderer: function(val, params, data) {
                                    var n =Ext.util.Format.number(val,'0.00');
                                    if (val >= 0) {
                                        return '<span style="color:#000; ">' + n + '</span>';
                                    } else  {
                                        return '<span style="color:red;">' + n + '</span>';
                                    }
                                },
                                summaryType: 'sum',
                                width: 80,
                                align: 'right',
                                dataIndex: 'oplacheno',
                                menuDisabled: true,
                                text: 'Оплата',
                                format: '0.00'
                            },
                            {
                                xtype: 'numbercolumn',
                                summaryRenderer: function(val, params, data) {
                                    var n =Ext.util.Format.number(val,'0.00');
                                    if (val >= 0) {
                                        return '<span style="color:#000;">' + n + '</span>';
                                    } else  {
                                        return '<span style="color:red; ">' + n + '</span>';
                                    }
                                },
                                summaryType: 'sum',
                                width: 80,
                                align: 'right',
                                dataIndex: 'dolg',
                                menuDisabled: true,
                                text: 'Долг',
                                format: '0.00'
                            },
                            {
                                xtype: 'numbercolumn',
                                width: 54,
                                dataIndex: 'out',
                                menuDisabled: true,
                                text: 'Выд',
                                format: '0'
                            },
                            {
                                xtype: 'numbercolumn',
                                hidden: true,
                                dataIndex: 'rec_id',
                                text: 'ид',
                                format: '0'
                            },
                            {
                                xtype: 'gridcolumn',
                                dataIndex: 'mfo',
                                text: 'МФО'
                            }
                        ],
                        dockedItems: [
                            {
                                xtype: 'toolbar',
                                dock: 'top',
                                items: [
                                    {
                                        xtype: 'button',
                                        handler: function(button, event) {
                                            var grid = button.findParentByType('grid');
                                            var gr = grid.getView().getFeature('groupSchetVik');
                                            //console.log(gr);
                                            if (gr.isAllCollapsed() ) {

                                                //  gr.expandAll();
                                            } else {
                                                var myMask= Ext.Msg.show({
                                                    title:'Свернуть...',
                                                    msg: 'Свпрачивание таблиці по домам.Ожидайте...',
                                                    buttons: Ext.Msg.CANCEL,
                                                    wait: true,
                                                    modal: true,
                                                    icon: Ext.Msg.INFO
                                                });
                                                gr.collapseAll();
                                                myMask.close();
                                            }

                                        },
                                        width: 23,
                                        icon: 'resources/css/images/ico/sprav.png',
                                        text: '',
                                        tooltip: 'Свернуть Развернуть'
                                    },
                                    {
                                        xtype: 'tbseparator'
                                    },
                                    {
                                        xtype: 'datefield',
                                        id: 'dataNachSchetVik',
                                        width: 209,
                                        fieldLabel: 'Период ',
                                        labelWidth: 60,
                                        altFormats: 'm/d/Y|n/j/Y|n/j/y|m/j/y|n/d/y|m/j/Y|n/d/Y|m-d-y|m-d-Y|m/d|m-d|Ymd|mdy|mdY|d|Y-m-d|n-j|n/j',
                                        format: 'F,Y',
                                        startDay: 1,
                                        submitFormat: 'Ymd',
                                        listeners: {
                                            select: 'onDataNachSchetVikSelect'
                                        }
                                    },
                                    {
                                        xtype: 'tbspacer',
                                        width: 10
                                    },
                                    {
                                        xtype: 'button',
                                        handler: function(button, event) {
                                            var grid = button.findParentByType('grid');
                                            var store = grid.store;
                                            var data =  Ext.getCmp('dataNachSchetVik').getValue();
                                            var firstDay = Ext.Date.getFirstDateOfMonth( data ) ;
                                            //STORE
                                            var stUser = Ext.data.StoreManager.get("StUser");
                                            var values =stUser.getAt(0);

                                            //LOGIKA
                                            var params = {
                                                login:values.get('login'),
                                                password:values.get('password'),
                                                data:data,
                                                what:'vipiskaSchetovVik'
                                            };


                                            //LOGIKA
                                            var myMask= Ext.Msg.show({
                                                title:'Выписка счетов...',
                                                msg: 'Выписка счетов .Ожидайте...',
                                                buttons: Ext.Msg.CANCEL,
                                                wait: true,
                                                modal: true,
                                                icon: Ext.Msg.INFO
                                            });

                                            QueryAddress.updateRecords(params,function(results){
                                                if(results.success==="1"){
                                                    button.setDisabled(true);

                                                    store.load({
                                                        params: {
                                                            what:'getSchetVik',
                                                            data:firstDay,
                                                            login:values.get('login'),
                                                            password:values.get('password')
                                                        }
                                                    });
                                                    myMask.close();
                                                    Ext.MessageBox.show({
                                                        title: 'Выписка счетов',
                                                        msg: results.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.INFO
                                                    });
                                                } else {
                                                    myMask.close();
                                                    Ext.MessageBox.show({
                                                        title: 'Выписка счетов',
                                                        msg: results.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.ERROR
                                                    });

                                                }

                                            });
                                        },
                                        disabled: true,
                                        id: 'vipiskaSchetovVik',
                                        icon: 'resources/css/images/ico/add.png',
                                        text: 'Выписать счета'
                                    },
                                    {
                                        xtype: 'checkboxfield',
                                        handler: function(checkbox, checked) {
                                            var btn = Ext.getCmp("vipiskaSchetovVik");
                                            //console.log(ch);
                                            if(checked){

                                                btn.setDisabled(false);

                                            }else{

                                                btn.setDisabled(true);

                                            }
                                        },
                                        id: 'chVipiskaSchetov',
                                        fieldLabel: '',
                                        boxLabel: ''
                                    },
                                    {
                                        xtype: 'button',
                                        handler: function(button, event) {
                                            var grid = button.findParentByType('grid');
                                            var store = grid.store;
                                            var data =  Ext.getCmp('dataNachSchetVik').getValue();
                                            var firstDay = Ext.Date.getFirstDateOfMonth( data ) ;
                                            //STORE
                                            var stUser = Ext.data.StoreManager.get("StUser");
                                            var values =stUser.getAt(0);

                                            //LOGIKA
                                            var params = {
                                                login:values.get('login'),
                                                password:values.get('password'),
                                                data:firstDay,
                                                what:'updateSchetaVik'
                                            };


                                            //LOGIKA
                                            var myMask= Ext.Msg.show({
                                                title:'Выписка счетов...',
                                                msg: 'Выписка счетов .Ожидайте...',
                                                buttons: Ext.Msg.CANCEL,
                                                wait: true,
                                                modal: true,
                                                icon: Ext.Msg.INFO
                                            });

                                            QueryAddress.updateRecords(params,function(results){
                                                if(results.success==="1"){
                                                    button.setDisabled(true);

                                                    store.load({
                                                        params: {
                                                            what:'getSchetVik',
                                                            data:firstDay,
                                                            login:values.get('login'),
                                                            password:values.get('password')
                                                        }
                                                    });
                                                    myMask.close();
                                                    Ext.MessageBox.show({
                                                        title: 'Выписка счетов',
                                                        msg: results.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.INFO
                                                    });
                                                } else {
                                                    myMask.close();
                                                    Ext.MessageBox.show({
                                                        title: 'Выписка счетов',
                                                        msg: results.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.ERROR
                                                    });

                                                }

                                            });
                                        },
                                        id: 'updateSchetaVik',
                                        icon: 'resources/css/images/ico/yes.png',
                                        text: 'обновить'
                                    },
                                    {
                                        xtype: 'tbspacer',
                                        width: 100
                                    },
                                    {
                                        xtype: 'button',
                                        handler: function(button, event) {
                                            //in use
                                            var me = this;
                                            var StUser = Ext.data.StoreManager.get("StUser");
                                            var values =StUser.getAt(0);

                                            var dataNachSchetVik = Ext.getCmp('dataNachSchetVik').getValue();
                                            // console.log(dataTabLgotnikEnd);


                                            if (dataNachSchetVik) {
                                                var data_from = Ext.Date.getFirstDateOfMonth(dataNachSchetVik);
                                                var data_to = Ext.Date.getLastDateOfMonth(dataNachSchetVik);

                                                var usertype = 1;

                                                var tabPnCenter =  Ext.getCmp('tabPnCenter');//me.getTabPnCenter();

                                                var report = 'reportSchetVik';
                                                var namereport = 'Распечатка счетов';
                                                var value = {
                                                    login:values.get('login'),
                                                    password:values.get('password'),
                                                    report:report,
                                                    what:report,
                                                    date_from:data_from,
                                                    date_to:data_to
                                                };
                                                var tab = tabPnCenter.child('#'+report);
                                                if (!tab) {
                                                    tab  = tabPnCenter.add({
                                                        xtype:'tabreportorg',
                                                        title:namereport,
                                                        id:''+report+''
                                                    });

                                                }
                                                //console.log(value);

                                                tabPnCenter.setActiveTab(tab);
                                                var reppan = tab.getComponent(0);
                                                // Basic mask:
                                                var myMask= Ext.Msg.show({
                                                    title:'Загрузка...',
                                                    msg: 'Загрузка отчета .Ожидайте...',
                                                    buttons: Ext.Msg.CANCEL,
                                                    wait: true,
                                                    modal: true,
                                                    icon: Ext.Msg.INFO
                                                });
                                                QueryReport.getResults(value,function(data){
                                                    if (data){
                                                        reppan.update(data.content);
                                                        Ext.REPORTCONTENT =data.content;
                                                        Ext.REPORTSQL =data.sql;
                                                        Ext.REPORTTITLE =report;
                                                        myMask.close();

                                                    } else {
                                                        myMask.close();
                                                        Ext.MessageBox.show({
                                                            title: 'Ошибка ',
                                                            msg: 'Документ не создан',
                                                            buttons: Ext.MessageBox.OK,
                                                            icon: Ext.MessageBox.ERROR
                                                        });
                                                    }
                                                });

                                            }
                                        },
                                        width: 168,
                                        icon: 'resources/css/images/ico/printer.png',
                                        text: 'распечатка счетов'
                                    }
                                ]
                            }
                        ],
                        features: [
                            {
                                ftype: 'grouping',
                                id: 'groupSchetVik',
                                showSummaryRow: true,
                                groupByText: 'Группировать по этому полю',
                                groupHeaderTpl: [
                                    '{name}'
                                ],
                                showGroupsText: 'Показывать в группе',
                                startCollapsed: true
                            }
                        ],
                        selModel: Ext.create('Ext.selection.CheckboxModel', {
                            selType: 'checkboxmodel',
                            mode: 'SINGLE'
                        })
                    }
                ]
            };
        if (instanceConfig) {
            me.getConfigurator().merge(me, config, instanceConfig);
        }
        return me.callParent([config]);
    },

    onDataNachSchetVikSelect: function(field, value, eOpts) {
        var firstDay = Ext.Date.getFirstDateOfMonth( value ) ;
        var stUser = Ext.data.StoreManager.get("StUser");
        //console.log(dataNachSchetVik.getValue());

        var StSchetVik = Ext.data.StoreManager.get("StSchetVik");

        //LOGIN & PASSWORD
        var values =stUser.getAt(0);

        StSchetVik.load({
            params: {
                what:'getSchetVik',
                data: firstDay,
                login:values.get('login'),
                password:values.get('password')
            },
            scope:this
        });
    }

});