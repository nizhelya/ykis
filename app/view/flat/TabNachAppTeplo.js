/*
 * File: app/view/flat/TabNachAppTeplo.js
 * Date: Mon Oct 19 2020 00:53:27 GMT+0300 (EEST)
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Ykis.view.flat.TabNachAppTeplo', {
    extend: 'Ext.tab.Panel',
    alias: 'widget.tabnachappteplo',

    requires: [
        'Ykis.view.flat.TabNachAppTeploViewModel',
        'Ykis.view.flat.TabNachAppTeploViewController',
        'Ext.form.Panel',
        'Ext.tab.Tab',
        'Ext.form.FieldSet',
        'Ext.form.RadioGroup',
        'Ext.form.field.Radio',
        'Ext.form.field.Display',
        'Ext.form.field.Number',
        'Ext.form.field.Hidden',
        'Ext.grid.Panel',
        'Ext.view.Table',
        'Ext.grid.column.Number',
        'Ext.grid.column.Date',
        'Ext.panel.Tool',
        'Ext.grid.column.Action',
        'Ext.grid.feature.Summary',
        'Ext.form.field.Date'
    ],

    controller: 'tabnachappteplo',
    viewModel: {
        type: 'tabnachappteplo'
    },
    height: 599,
    id: 'tabNachAppTeplo',
    width: 1133,
    activeTab: 0,
    defaultListenerScope: true,

    items: [
        {
            xtype: 'form',
            id: 'tabFmAppTeplo',
            collapseFirst: false,
            title: 'настройка',
            items: [
                {
                    xtype: 'fieldset',
                    formBind: true,
                    height: 232,
                    style: 'background-color: #DCDCDC;',
                    width: 959,
                    layout: 'absolute',
                    title: 'Теплопосточання',
                    items: [
                        {
                            xtype: 'radiogroup',
                            x: 5,
                            y: 40,
                            formBind: true,
                            frame: true,
                            style: 'background-color: #f1eeee;',
                            width: 165,
                            fieldLabel: 'Тип  опалювальне',
                            labelAlign: 'top',
                            layout: {
                                type: 'vbox',
                                align: 'stretch'
                            },
                            items: [
                                {
                                    xtype: 'radiofield',
                                    name: 'type_teplo',
                                    boxLabel: 'опалювальне',
                                    checked: true,
                                    inputValue: '1'
                                },
                                {
                                    xtype: 'radiofield',
                                    name: 'type_teplo',
                                    boxLabel: 'неопалювальне',
                                    inputValue: '0'
                                },
                                {
                                    xtype: 'radiofield',
                                    name: 'type_teplo',
                                    boxLabel: ' індивідуальна',
                                    inputValue: '2'
                                },
                                {
                                    xtype: 'radiofield',
                                    name: 'type_teplo',
                                    boxLabel: 'комбінована система',
                                    inputValue: '3'
                                }
                            ]
                        },
                        {
                            xtype: 'textfield',
                            x: 180,
                            y: 140,
                            style: 'background-color: #f1eeee;',
                            width: 185,
                            fieldLabel: 'S_опалювальне (м&sup2;)',
                            hideEmptyLabel: false,
                            labelSeparator: ' ',
                            labelWidth: 130,
                            name: 'area_otopl',
                            growMin: 35
                        },
                        {
                            xtype: 'button',
                            handler: function(button, event) {
                                //in use
                                var winDogovor = Ext.ClassManager.instantiateByAlias('widget.windogovor');

                                var dt = new Date();

                                var form = winDogovor.down('#fmDogovor');
                                var stUser = Ext.data.StoreManager.get("StUser");
                                var stAppartment = Ext.data.StoreManager.get("StAppartment");

                                var StDogovor = Ext.data.StoreManager.get("StDogovor");

                                var values =stUser.getAt(0);


                                var record_app =stAppartment.getAt(0);
                                //console.log(record_app);
                                var login = values.get('login');
                                var password = values.get('password');
                                var address_id = values.get('address_id');

                                StDogovor.load({
                                    params: {
                                        address_id:  values.get('address_id'),
                                        what:'getDogovorYtke',
                                        login:values.get('login'),
                                        password:values.get('password')
                                    },
                                    callback: function(records,operation,success){


                                        if(success){

                                            if (records.length) {
                                                form.getForm().loadRecord(records[0]);
                                                form.down('#winBtnAddDogovor').setText('Обновить договор');
                                                values.set({'vibor':'editDogovorYtke'});
                                                stUser.sync();
                                            } else {
                                                form.down('#winBtnAddDogovor').setText('Добавить договор');
                                                form.getForm().findField('start').setValue(Ext.Date.format(dt, 'd-m-Y'));
                                                form.getForm().loadRecord(record_app);
                                                values.set({'vibor':'addDogovorYtke'});
                                                stUser.sync();

                                            }

                                        }
                                    },
                                    scope:this
                                });

                                winDogovor.show();
                                //V
                                //var nr =  Ext.getCmp('fldDogVik').getValue();
                                //var data =  Ext.getCmp('fldDogVikData').getValue();




                            },
                            x: 180,
                            y: 5,
                            id: 'btnOpenWinDogovorYtke',
                            width: 155,
                            icon: 'resources/css/images/ico/yes.png',
                            iconAlign: 'right',
                            text: 'Договіра немає&nbsp;&nbsp;&nbsp;',
                            textAlign: 'left'
                        },
                        {
                            xtype: 'displayfield',
                            renderer: function(value, displayField) {
                                var retValue = '';
                                switch (value) {
                                    case 'да':
                                    retValue ='<span><img class="icon" src="resources/css/images/ico/yes.png"/></span>';
                                    break;
                                    case 'нет':
                                    retValue ='<span><img class="icon" src="resources/css/images/ico/no.png"/></span>';
                                    break;
                                }
                                return retValue;
                            },
                            x: 5,
                            y: 5,
                            style: 'background-color: #f1eeee;',
                            width: 165,
                            fieldLabel: 'КП ЮТКЭ',
                            labelSeparator: ' ',
                            labelStyle: 'color: #8A8A8A; text-shadow: -1px -1px white, 1px 1px #333;font-size:12pt;',
                            name: 'aggr_teplo'
                        },
                        {
                            xtype: 'button',
                            handler: function(button, event) {
                                //M
                                var me = this;
                                var StUser = Ext.data.StoreManager.get("StUser");
                                var StReport = Ext.data.StoreManager.get("StReport");
                                var values =StUser.getAt(0);
                                var addr = values.data.address_id;

                                var usertype = 1;

                                //V
                                var tabPnCenter =  Ext.getCmp('tabPnCenter');//me.getTabPnCenter();


                                //C

                                if (addr) {

                                    var report = 'DogovorYtke_flat';
                                    var namereport = 'Договор кв. ЮТКЕ';

                                    var value = {
                                        login:values.get('login'),
                                        password:values.get('password'),
                                        report:report,
                                        what:report,
                                        address_id: addr
                                    };

                                    var tab = tabPnCenter.child('#'+report);

                                    if (!tab) {
                                        tab  = tabPnCenter.add({
                                            xtype:'tabreportorg',
                                            title:namereport,
                                            id:''+report+''
                                        });

                                        tabPnCenter.setActiveTab(tab);

                                    }else{

                                        tabPnCenter.setActiveTab(tab);
                                    }

                                    var reppan = tab.getComponent(0);



                                    // Basic mask:

                                    var myMask =new Ext.LoadMask({
                                        target: reppan ,
                                        msg:"Загрузка..."
                                    });
                                    myMask.show();


                                    QueryReport.getResults(value,function(data){
                                        if (data){

                                            //    reportHead.update(data.head);
                                            reppan.update(data.content);
                                            //      reportFoot.update(data.foot);
                                            Ext.REPORTCONTENT =data.content;
                                            myMask.hide();


                                        } else {
                                            myMask.hide();

                                            Ext.MessageBox.show({
                                                title: 'Ошибка ',
                                                msg: 'Документ не создан',
                                                buttons: Ext.MessageBox.OK,
                                                icon: Ext.MessageBox.ERROR

                                            });

                                        }

                                    });

                                }
                            },
                            x: 340,
                            y: 5,
                            shim: false,
                            icon: 'resources/css/images/ico/printer.png',
                            text: '',
                            tooltip: 'Печать договора ЮТКЕ',
                            tooltipType: 'title'
                        },
                        {
                            xtype: 'fieldset',
                            x: 580,
                            y: 5,
                            height: 115,
                            style: 'background-color: #f1eeee;',
                            width: 165,
                            title: 'Дані трубопроводу',
                            items: [
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    padding: '10 0 0 0',
                                    fieldLabel: 'Довжина',
                                    labelWidth: 70,
                                    name: 'length',
                                    hideTrigger: true
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    fieldLabel: 'Діаметр',
                                    labelWidth: 70,
                                    name: 'diametr',
                                    hideTrigger: true
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            x: 380,
                            y: 5,
                            height: 115,
                            style: 'background-color: #f1eeee;',
                            width: 185,
                            title: '',
                            items: [
                                {
                                    xtype: 'checkboxfield',
                                    anchor: '100%',
                                    padding: '15 0 0 0',
                                    fieldLabel: 'Єнергоаудит',
                                    name: 'enaudit',
                                    boxLabel: 'Ні',
                                    inputValue: '1',
                                    uncheckedValue: '0',
                                    listeners: {
                                        change: 'onCheckboxfieldChange2121'
                                    }
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    fieldLabel: 'ТНЄ (Гкал/м&sup2;)',
                                    labelWidth: 90,
                                    name: 'tne',
                                    hideTrigger: true,
                                    decimalPrecision: 3
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    fieldLabel: 'КТЄ (коеф)',
                                    labelWidth: 90,
                                    name: 'kte',
                                    hideTrigger: true,
                                    decimalPrecision: 3
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            x: 180,
                            y: 40,
                            style: 'background-color: #f1eeee;',
                            width: 185,
                            title: 'Користується послугами',
                            items: [
                                {
                                    xtype: 'checkboxfield',
                                    anchor: '100%',
                                    fieldLabel: 'гвп',
                                    name: 'podogrev',
                                    boxLabel: 'Ні',
                                    inputValue: 'да',
                                    uncheckedValue: 'нет',
                                    listeners: {
                                        change: 'onCheckboxfieldChange9'
                                    }
                                },
                                {
                                    xtype: 'checkboxfield',
                                    anchor: '100%',
                                    fieldLabel: 'опалювальне',
                                    name: 'otoplenie',
                                    boxLabel: 'Ні',
                                    inputValue: 'да',
                                    uncheckedValue: 'нет',
                                    listeners: {
                                        change: 'onCheckboxfieldChange8'
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'hiddenfield',
                            x: 302,
                            y: 207,
                            id: 'fldDogYtke',
                            fieldLabel: 'Label',
                            name: 'dog_ytke'
                        },
                        {
                            xtype: 'button',
                            handler: function(button, event) {
                                //LOGIN & PASSWORD
                                var stUser = Ext.data.StoreManager.get("StUser");
                                var pvalues =stUser.getAt(0);
                                var login = pvalues.get('login');
                                var password = pvalues.get('password');

                                var form = Ext.getCmp('tabFmAppTeplo');

                                var stAppartment = Ext.data.StoreManager.get("StAppartment");//QueryAddress.getResults <Appartment>

                                var values=form.getValues();

                                var address_id = values.address_id;
                                var params = {
                                    login:login,
                                    password:password,
                                    what:'AppartmentUpdateTeplo',
                                    what_id:address_id
                                };
                                // console.log(values.address_id);
                                Ext.Object.merge(values, params);

                                // СОХРАНИТЬ ИЗМЕНЕНИЯ

                                QueryAddress.updateRecords(values,function(result){

                                    if (result.success){

                                        Ext.MessageBox.show({
                                            title: 'Оновити дані по квартирі!',
                                            msg: result.msg,
                                            buttons: Ext.MessageBox.OK,
                                            icon: Ext.MessageBox.INFO,
                                            buttonText:{
                                                ok: "Закрыть!"
                                            }
                                        });

                                        stAppartment.load({
                                            params: {
                                                what_id:address_id,
                                                address_id: address_id,
                                                what:'Appartment',
                                                login:login,
                                                password:password
                                            },
                                            callback: function(records,operation,success){
                                                var rec = records[0];

                                                if(success){

                                                    form.getForm().loadRecord(rec);

                                                }
                                            },
                                            scope:this
                                        });



                                    }else{
                                        Ext.MessageBox.show({
                                            title: 'Внесение изменений',
                                            msg: 'Произошла ошибка',
                                            buttons: Ext.MessageBox.OK,
                                            buttonText:{
                                                ok: "Закрыть!"
                                            },
                                            icon: Ext.MessageBox.WARNING
                                        });
                                    }
                                });

                            },
                            x: 590,
                            y: 135,
                            formBind: true,
                            id: 'btnBtiTeplo',
                            width: 150,
                            icon: 'resources/css/images/ico/xsldbg_refresh.png',
                            scale: 'medium',
                            text: 'Оновить  дані'
                        },
                        {
                            xtype: 'fieldset',
                            x: 755,
                            y: 5,
                            height: 165,
                            style: 'background-color: #f1eeee;',
                            width: 180,
                            title: 'прилади обліку (техніка)',
                            items: [
                                {
                                    xtype: 'checkboxfield',
                                    anchor: '100%',
                                    fieldLabel: 'Тепломір',
                                    labelWidth: 110,
                                    name: 'teplomer',
                                    boxLabel: 'Ні',
                                    inputValue: 'да',
                                    uncheckedValue: 'нет',
                                    listeners: {
                                        change: 'onCheckboxfieldChange612'
                                    }
                                },
                                {
                                    xtype: 'checkboxfield',
                                    anchor: '100%',
                                    fieldLabel: 'Бойлер',
                                    labelWidth: 110,
                                    name: 'boiler',
                                    boxLabel: 'Ні',
                                    inputValue: 'да',
                                    uncheckedValue: 'нет',
                                    listeners: {
                                        change: 'onCheckboxfieldChange212'
                                    }
                                },
                                {
                                    xtype: 'checkboxfield',
                                    anchor: '100%',
                                    fieldLabel: 'Рушникосушарка',
                                    labelWidth: 110,
                                    name: 'heated',
                                    boxLabel: 'Ні',
                                    inputValue: '1',
                                    uncheckedValue: '0',
                                    listeners: {
                                        change: 'onCheckboxfieldChange2111'
                                    }
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 170,
                                    fieldLabel: 'ДТепломір_ид',
                                    name: 'dteplomer_id',
                                    hideTrigger: true,
                                    allowDecimals: false,
                                    decimalPrecision: 0
                                }
                            ]
                        },
                        {
                            xtype: 'button',
                            x: 380,
                            y: 135,
                            id: 'printRaspechatakaYtke',
                            width: 185,
                            icon: 'resources/css/images/ico/printer24.png',
                            scale: 'medium',
                            text: 'інформаційний листок',
                            tooltip: 'Печать расчетного листка'
                        }
                    ]
                },
                {
                    xtype: 'hiddenfield',
                    fieldLabel: 'Label',
                    name: 'address_id'
                }
            ]
        },
        {
            xtype: 'form',
            id: 'tabFmAppPtn',
            layout: 'absolute',
            title: 'ПТН',
            items: [
                {
                    xtype: 'gridpanel',
                    x: 0,
                    y: 0,
                    height: 490,
                    id: 'grNachPtn',
                    scrollable: true,
                    width: 225,
                    title: 'Период начисления',
                    store: 'StTekNachApp',
                    viewConfig: {
                        height: 438,
                        emptyText: 'нет начислений'
                    },
                    columns: [
                        {
                            xtype: 'numbercolumn',
                            hidden: true,
                            dataIndex: 'address_id',
                            text: 'Address_id'
                        },
                        {
                            xtype: 'numbercolumn',
                            width: 50,
                            dataIndex: 'god',
                            menuDisabled: true,
                            text: 'год',
                            format: '0'
                        },
                        {
                            xtype: 'datecolumn',
                            width: 74,
                            dataIndex: 'data',
                            menuDisabled: true,
                            text: 'месяц',
                            format: 'F'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if (value < 0) {
                                    metaData.style = 'color:red';
                                }
                                return value;

                            },
                            hidden: true,
                            width: 70,
                            align: 'right',
                            dataIndex: 'zadol',
                            menuDisabled: true,
                            text: 'задол'
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            width: 49,
                            dataIndex: 'mec',
                            menuDisabled: true,
                            text: 'мес'
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            width: 62,
                            dataIndex: 'period',
                            menuDisabled: true,
                            text: 'Период'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if (value < 0) {
                                    metaData.style = 'color:red';
                                }
                                return value;

                            },
                            hidden: true,
                            width: 70,
                            align: 'right',
                            dataIndex: 'nachisleno',
                            menuDisabled: true,
                            text: 'начисл'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if (value < 0) {
                                    metaData.style = 'color:red';
                                }
                                return value;

                            },
                            hidden: true,
                            width: 70,
                            align: 'right',
                            dataIndex: 'oplacheno',
                            menuDisabled: true,
                            text: 'оплач'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if (value < 0) {
                                    metaData.style = 'color:red';
                                }
                                return value;

                            },
                            width: 80,
                            align: 'right',
                            dataIndex: 'dolg',
                            menuDisabled: true,
                            text: 'Долг'
                        }
                    ],
                    tools: [
                        {
                            xtype: 'tool',
                            callback: function(owner, tool, event) {
                                //STORE
                                var stUser = Ext.data.StoreManager.get("StUser");
                                var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                //LOGIN & PASSWORD
                                var values =stUser.getAt(0);
                                // FORM
                                var form = tool.findParentByType('form');
                                // DATA

                                //LOGIKA
                                StTekNachApp.load({
                                    params: {
                                        what:'PtnAppAll',
                                        address_id: values.get('address_id'),
                                        login:values.get('login'),
                                        password:values.get('password')
                                    },
                                    callback: function(records,operation,success){
                                        if(success){
                                            form.getForm().reset();
                                            form.getForm().loadRecord(records[0]);
                                        }else{
                                            form.getForm().reset();
                                        }
                                    },
                                    scope:this
                                });
                            },
                            tooltip: 'выбрать все записи',
                            type: 'plus'
                        }
                    ]
                },
                {
                    xtype: 'gridpanel',
                    x: 235,
                    y: 240,
                    height: 260,
                    id: 'grLgotaNachPtn',
                    scrollable: true,
                    width: 825,
                    title: 'нарахування на бюджет',
                    store: 'StLgotaNachVoda',
                    viewConfig: {
                        emptyText: 'Начислений по льготе нет'
                    },
                    columns: [
                        {
                            xtype: 'actioncolumn',
                            width: 30,
                            menuDisabled: true,
                            items: [
                                {
                                    getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                        var pr = r.get('pr');
                                        if (pr === 0 ) {
                                            metaData = 'x-grid-center-icon';
                                        } else if (pr === 1   ){
                                            metaData = 'x-hide-display';
                                        }
                                        return metaData;
                                    },
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        var dt = new Date();
                                        var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                        var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);
                                        var value = record;

                                        view.getSelectionModel().select(rowIndex);
                                        values.set({'vibor':'addLgotaPtnPerer'});
                                        stUser.sync();
                                        form.loadRecord(value);
                                        form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                        form.getForm().findField('summa').setValue(value.get('budjet'));
                                        form.getForm().findField('m2').hide();
                                        form.getForm().findField('gkm2').hide();
                                        form.getForm().findField('gkal').hide();

                                        winAddLgotaPerer.show();
                                    },
                                    icon: 'resources/css/images/ico/add.png',
                                    tooltip: 'Добавить перерасчет по льготе'
                                },
                                {
                                    getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                        var tekd = r.get('data');
                                        var dt = new Date();
                                        var check_date=Ext.Date.format(dt, 'Y-m');
                                        var tek_date=Ext.Date.format(tekd, 'Y-m');
                                        var pr = r.get('pr');

                                        if (pr === 0 ) {
                                            metaData = 'x-hide-display';
                                        } else if ((pr === 1) && (check_date === tek_date) ){
                                            metaData = 'x-grid-center-icon';
                                        }
                                        return metaData;
                                    },
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        // in use
                                        var me = this;
                                        //STORE

                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");

                                        var form = Ext.getCmp('tabFmAppPtn');

                                        //LOGIN & PASSWORD
                                        var values =stUser.getAt(0);
                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            address_id:values.get('address_id'),
                                            address:values.get('address'),
                                            what:"delLgotaPtnPerer"
                                        };

                                        //GRID
                                        var store = view.getStore();
                                        var value = store.getAt(rowIndex).data;
                                        // FORM

                                        //GRID
                                        var grNach = Ext.getCmp('grNachPtn');
                                        var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];
                                        var ind  = grNach.getView().getStore().indexOf(valueNachisl);

                                        //LOGIKA


                                        Ext.Object.merge(value, params);
                                        //console.log(value);

                                        Ext.MessageBox.confirm({
                                            title: 'Удаление записи из базы льгот',
                                            msg: 'Вы удаляете перерасчет по птн на бюджет <br> Подтвердите или отмените свои действия.',
                                            buttons: Ext.MessageBox.OKCANCEL,
                                            icon: Ext.MessageBox.ERROR,
                                            buttonText:{
                                                ok:'подтвеждаю',
                                                cancel:'отмена'
                                            },
                                            fn:function(btn,newValue){
                                                if(btn=='ok'){
                                                    QueryAddress.updateRecords(value,function(results){
                                                        if(results.success==="1"){
                                                            Ext.MessageBox.show({
                                                                title: 'Удаление перерасчета по птн на бюджет',
                                                                msg: results.msg,
                                                                buttons: Ext.MessageBox.OK,
                                                                icon: Ext.MessageBox.INFO
                                                            });
                                                            StTekNachApp.load({
                                                                params: {
                                                                    what:'PtnApp',
                                                                    address_id: values.get('address_id'),
                                                                    login:values.get('login'),
                                                                    password:values.get('password')
                                                                },
                                                                callback: function(records,operation,success){
                                                                    if(success){
                                                                        grNach.getView().getSelectionModel().select(ind);
                                                                    }else{
                                                                        form.getForm().reset();
                                                                    }
                                                                },
                                                                scope:this
                                                            });

                                                        } else {
                                                            Ext.MessageBox.show({
                                                                title: 'Удаление перерасчета по птн на бюджет',
                                                                msg: results.msg,
                                                                buttons: Ext.MessageBox.OK,
                                                                icon: Ext.MessageBox.ERROR
                                                            });
                                                        }
                                                    });
                                                }
                                            }
                                        });
                                    },
                                    icon: 'resources/css/images/ico/delete.png',
                                    tooltip: 'Удалить перерасчет по льготе'
                                }
                            ]
                        },
                        {
                            xtype: 'datecolumn',
                            width: 75,
                            dataIndex: 'sdata',
                            menuDisabled: true,
                            text: 'дата с',
                            format: 'd-m-y'
                        },
                        {
                            xtype: 'datecolumn',
                            width: 75,
                            dataIndex: 'fdata',
                            menuDisabled: true,
                            text: 'дата по',
                            format: 'd-m-y'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 120,
                            dataIndex: 'fio',
                            menuDisabled: true,
                            text: 'Ф.И.О'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 130,
                            dataIndex: 'lgota',
                            menuDisabled: true,
                            text: 'Льгота',
                            tooltip: 'name'
                        },
                        {
                            xtype: 'numbercolumn',
                            width: 35,
                            align: 'center',
                            dataIndex: 'percent',
                            menuDisabled: true,
                            text: '%',
                            format: '0'
                        },
                        {
                            xtype: 'numbercolumn',
                            width: 44,
                            align: 'center',
                            dataIndex: 'people',
                            menuDisabled: true,
                            text: 'чел',
                            format: '0'
                        },
                        {
                            xtype: 'numbercolumn',
                            width: 81,
                            align: 'right',
                            dataIndex: 'tarif',
                            menuDisabled: true,
                            text: 'тариф',
                            format: '0.000'
                        },
                        {
                            xtype: 'numbercolumn',
                            summaryType: 'sum',
                            width: 74,
                            align: 'right',
                            dataIndex: 'qty',
                            menuDisabled: true,
                            text: 'S (м&sup2;)',
                            format: '0.000'
                        },
                        {
                            xtype: 'numbercolumn',
                            summaryType: 'sum',
                            width: 74,
                            align: 'right',
                            dataIndex: 'budjet',
                            menuDisabled: true,
                            text: 'бюджет'
                        },
                        {
                            xtype: 'numbercolumn',
                            width: 40,
                            dataIndex: 'pr',
                            menuDisabled: true,
                            text: 'пр',
                            format: '0'
                        },
                        {
                            xtype: 'actioncolumn',
                            width: 30,
                            menuDisabled: true,
                            items: [
                                {
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        var dt = new Date();
                                        var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                        var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);
                                        var value = record;

                                        view.getSelectionModel().select(rowIndex);
                                        values.set({'vibor':'editLgotaPtn'});
                                        stUser.sync();

                                        form.down('#btAddLgotaPerer').setText('Обновить запись');
                                        form.loadRecord(value);
                                        form.getForm().findField('summa').setValue(value.get('budjet'));
                                        form.getForm().findField('m2').hide();
                                        form.getForm().findField('gkm2').hide();
                                        form.getForm().findField('gkal').hide();

                                        winAddLgotaPerer.setTitle('Редактирование записи на бюджет');

                                        winAddLgotaPerer.show();
                                    },
                                    icon: 'resources/css/images/ico/edit.png',
                                    tooltip: 'Редактировать запись'
                                }
                            ]
                        },
                        {
                            xtype: 'actioncolumn',
                            width: 30,
                            menuDisabled: true,
                            items: [
                                {
                                    getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                        var tekd = r.get('data');
                                        var dt = new Date();
                                        var check_date=Ext.Date.format(dt, 'Y-m');
                                        var tek_date=Ext.Date.format(tekd, 'Y-m');
                                        var pr = r.get('pr');
                                        if (pr === 1 ) {
                                            metaData = 'x-hide-display';
                                        } else if ( (pr === 0)  ){
                                            metaData = 'x-grid-center-icon';
                                        }
                                        return metaData;
                                    },
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        // in use
                                        var me = this;
                                        //STORE

                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");

                                        var form = Ext.getCmp('tabFmAppPtn');

                                        //LOGIN & PASSWORD
                                        var values =stUser.getAt(0);
                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            address_id:values.get('address_id'),
                                            address:values.get('address'),
                                            what:"delLgotaPtn"
                                        };

                                        //GRID
                                        var store = view.getStore();
                                        var value = store.getAt(rowIndex).data;
                                        // FORM

                                        //GRID
                                        var grNach = Ext.getCmp('grNachPtn');
                                        var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];
                                        var ind  = grNach.getView().getStore().indexOf(valueNachisl);

                                        //LOGIKA


                                        Ext.Object.merge(value, params);
                                        //console.log(value);

                                        Ext.MessageBox.confirm({
                                            title: 'Удаление записи из базы льгот',
                                            msg: 'Вы удаляете начисление на бюджет <br> Подтвердите или отмените свои действия.',
                                            buttons: Ext.MessageBox.OKCANCEL,
                                            icon: Ext.MessageBox.ERROR,
                                            buttonText:{
                                                ok:'подтвеждаю',
                                                cancel:'отмена'
                                            },
                                            fn:function(btn,newValue){
                                                if(btn=='ok'){
                                                    QueryAddress.updateRecords(value,function(results){
                                                        if(results.success==="1"){
                                                            Ext.MessageBox.show({
                                                                title: 'Удаление начисления по птн на бюджет',
                                                                msg: results.msg,
                                                                buttons: Ext.MessageBox.OK,
                                                                icon: Ext.MessageBox.INFO
                                                            });
                                                            StTekNachApp.load({
                                                                params: {
                                                                    what:'PtnApp',
                                                                    address_id: values.get('address_id'),
                                                                    login:values.get('login'),
                                                                    password:values.get('password')
                                                                },
                                                                callback: function(records,operation,success){
                                                                    if(success){
                                                                        grNach.getView().getSelectionModel().select(ind);
                                                                    }else{
                                                                        form.getForm().reset();
                                                                    }
                                                                },
                                                                scope:this
                                                            });

                                                        } else {
                                                            Ext.MessageBox.show({
                                                                title: 'Удаление начисления  на бюджет',
                                                                msg: results.msg,
                                                                buttons: Ext.MessageBox.OK,
                                                                icon: Ext.MessageBox.ERROR
                                                            });
                                                        }
                                                    });
                                                }
                                            }
                                        });
                                    },
                                    icon: 'resources/css/images/ico/no.png',
                                    tooltip: 'Удалить  запись '
                                }
                            ]
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            dataIndex: 'info',
                            menuDisabled: true,
                            text: 'инфо',
                            tooltip: 'name'
                        }
                    ],
                    features: [
                        {
                            ftype: 'summary'
                        }
                    ],
                    tools: [
                        {
                            xtype: 'tool',
                            callback: function(owner, tool, event) {
                                var gridLgotnik = Ext.getCmp('grLgotnikNachApp');
                                var gridNachisl = Ext.getCmp('grNachPtn');

                                var stUser = Ext.data.StoreManager.get("StUser");
                                var values =stUser.getAt(0);

                                var value  = gridLgotnik.getView().getSelectionModel().getSelection()[0];
                                var valueNachisl  = gridNachisl.getView().getSelectionModel().getSelection()[0];
                                var ind  = gridNachisl.getView().getStore().indexOf(valueNachisl);

                                if (value !==undefined && valueNachisl !==undefined ){
                                    var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                    var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                    var dt = new Date();
                                    var dt_nach = new Date(valueNachisl.get('data'));
                                    var check_date = Ext.Date.format(dt, 'Y-m');
                                    var date_check = Ext.Date.format(dt_nach, 'Y-m');
                                    form.getForm().findField('m2').hide();
                                    form.getForm().findField('gkm2').hide();
                                    form.getForm().findField('gkal').hide();

                                    winAddLgotaPerer.setTitle('Добавление записи на бюджет');

                                    var pr = form.getForm().findField('checkType').getValue();
                                    //console.log(pr);

                                    if (pr === true ) {

                                        values.set({'vibor':'addLgotaPtn'});
                                        stUser.sync();
                                        form.loadRecord(value);
                                        form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                        form.getForm().findField('sdata').setValue(Ext.Date.getFirstDateOfMonth(dt) );
                                        form.getForm().findField('fdata').setValue(Ext.Date.getLastDateOfMonth(dt) );
                                        form.getForm().findField('tarif').setValue(valueNachisl.get('tarif_m2'));
                                        form.getForm().findField('qty').setValue(valueNachisl.get('square_lg'));
                                        form.getForm().findField('summa').setValue(valueNachisl.get('budjet'));
                                        form.getForm().findField('checkType').setValue("0");
                                        form.getForm().findField('info').setValue('Добавление записи начисления на бюджет в ручном режиме');
                                        form.getForm().findField('ind').setValue(ind);
                                        winAddLgotaPerer.show();

                                    } else {

                                        values.set({'vibor':'addLgotaPtnPerer'});
                                        stUser.sync();
                                        form.loadRecord(value);
                                        form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                        form.getForm().findField('sdata').setValue(Ext.Date.getFirstDateOfMonth(dt_nach) );
                                        form.getForm().findField('fdata').setValue(Ext.Date.getLastDateOfMonth(dt_nach) );
                                        form.getForm().findField('tarif').setValue(valueNachisl.get('tarif_m2'));
                                        form.getForm().findField('qty').setValue(valueNachisl.get('square_lg'));
                                        form.getForm().findField('summa').setValue(valueNachisl.get('budjet'));
                                        form.getForm().findField('checkType').setValue("1");
                                        form.getForm().findField('info').setValue('Добавление записи перерасчета на бюджет в ручном режиме');
                                        form.getForm().findField('ind').setValue(ind);
                                        winAddLgotaPerer.show();

                                    }


                                } else{
                                    Ext.MessageBox.show({
                                        title: 'Добавлениезаписи начисления  на бюджет',
                                        msg: 'Не выбран льготчик',
                                        buttons: Ext.MessageBox.OK,
                                        icon: Ext.MessageBox.INFO
                                    });
                                }
                            },
                            tooltip: 'добавить начисление по льготнику',
                            type: 'plus'
                        }
                    ]
                },
                {
                    xtype: 'datefield',
                    x: 240,
                    y: 0,
                    border: '0px',
                    margin: '10 0 10 0',
                    width: 150,
                    fieldLabel: 'Период начислен',
                    hideLabel: true,
                    labelAlign: 'top',
                    labelWidth: 50,
                    name: 'data',
                    fieldStyle: 'color: #1791e6; text-shadow: -1px -1px white, 1px 1px #333;font-size:14pt;text-align:center',
                    hideTrigger: true,
                    format: 'F,Y',
                    startDay: 1,
                    submitFormat: 'Ymd'
                },
                {
                    xtype: 'fieldset',
                    x: 240,
                    y: 45,
                    height: 175,
                    style: 'background-color: #DCDCDC;',
                    width: 150,
                    title: 'Сальдо',
                    items: [
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            width: 119,
                            fieldLabel: 'Сальдо на початок',
                            labelAlign: 'top',
                            labelWidth: 55,
                            name: 'zadol',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            width: 119,
                            fieldLabel: 'Сальдо на конец',
                            labelAlign: 'top',
                            labelWidth: 55,
                            name: 'dolg',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                // in use
                                var me = this;

                                //STORE
                                var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                var stUser = Ext.data.StoreManager.get("StUser");
                                var values =stUser.getAt(0);
                                var params = {
                                    login:values.get('login'),
                                    password:values.get('password'),
                                    address_id:values.get('address_id'),
                                    what:'AppPtnIns'
                                };
                                //FORMA
                                var form = button.findParentByType('form').getForm();
                                var value = form.getValues();
                                var grNach = Ext.getCmp('grNachPtn');
                                var record = grNach.getSelectionModel().getSelection()[0];
                                var ind  = grNach.getView().getStore().indexOf(record);
                                //LOGIKA
                                Ext.Object.merge(value, params);

                                QueryAddress.updateRecords(value,function(results){

                                    StTekNachApp.load({
                                        params: {
                                            what:'PtnApp',
                                            address_id: values.get('address_id'),
                                            login:values.get('login'),
                                            password:values.get('password')
                                        },
                                        callback: function(records,operation,success){
                                            if(success){
                                                grNach.getView().getSelectionModel().select(ind);
                                            }else{
                                                form.reset();
                                            }
                                        },
                                        scope:this
                                    });
                                });

                            },
                            anchor: '100%',
                            formBind: true,
                            height: 30,
                            id: 'btnPtnAppIns',
                            margin: '10 0 0 0',
                            width: 90,
                            icon: 'resources/css/images/ico/yes22.png',
                            text: 'Записати'
                        }
                    ]
                },
                {
                    xtype: 'fieldset',
                    x: 400,
                    y: 5,
                    height: 225,
                    style: 'background-color: #DCDCDC;',
                    width: 660,
                    layout: 'absolute',
                    title: 'Начислено, грн',
                    items: [
                        {
                            xtype: 'numberfield',
                            width: 195,
                            fieldLabel: 'тариф',
                            name: 'tarif',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            x: 0,
                            y: 30,
                            width: 195,
                            fieldLabel: 'тариф  (м&sup2;)',
                            name: 'tarif_m2',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true,
                            decimalPrecision: 4
                        },
                        {
                            xtype: 'numberfield',
                            x: 0,
                            y: 60,
                            width: 195,
                            fieldLabel: 'Площадь (м&sup2;)',
                            name: 'square',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            x: 0,
                            y: 120,
                            width: 230,
                            fieldLabel: 'Q квартиры',
                            name: 'gkal',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true,
                            decimalPrecision: 6
                        },
                        {
                            xtype: 'numberfield',
                            x: 475,
                            y: 35,
                            width: 155,
                            fieldLabel: 'Начислено',
                            labelWidth: 70,
                            name: 'nachisleno',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            x: 475,
                            y: 65,
                            width: 155,
                            fieldLabel: 'Оплачено',
                            labelWidth: 70,
                            name: 'oplacheno',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            x: 0,
                            y: 90,
                            width: 230,
                            fieldLabel: 'Гкал/час (м&sup2;)',
                            name: 'gkm2',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true,
                            decimalPrecision: 13
                        },
                        {
                            xtype: 'numberfield',
                            x: 0,
                            y: 150,
                            width: 195,
                            fieldLabel: 'П.Т.Н.',
                            name: 'ptn',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            x: 470,
                            y: 5,
                            width: 160,
                            fieldLabel: 'Перер',
                            labelWidth: 75,
                            name: 'perer',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'fieldset',
                            x: 245,
                            y: 0,
                            height: 115,
                            style: 'background-color: #f1eeee;',
                            width: 185,
                            title: 'Бюджет',
                            items: [
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 124,
                                    fieldLabel: 'Sльг (м&sup2;)',
                                    labelWidth: 80,
                                    name: 'square_lg',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 0
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 125,
                                    fieldLabel: 'Бюджет',
                                    labelWidth: 80,
                                    name: 'budjet',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 125,
                                    fieldLabel: 'Перер',
                                    labelWidth: 80,
                                    name: 'pbudjet',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                }
                            ]
                        },
                        {
                            xtype: 'textfield',
                            x: 250,
                            y: 170,
                            width: 380,
                            fieldLabel: 'инфо перер',
                            name: 'info',
                            fieldStyle: 'background-color:#F0F8FF;'
                        },
                        {
                            xtype: 'textfield',
                            x: 250,
                            y: 140,
                            width: 380,
                            fieldLabel: 'инфо бюджет',
                            name: 'msq_lgota',
                            fieldStyle: 'background-color:#F0F8FF;'
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                var form = button.findParentByType('form').getForm();
                                var grNach = Ext.getCmp('grNachPtn');
                                var record = grNach.getSelectionModel().getSelection()[0];
                                var ind  = grNach.getView().getStore().indexOf(record);
                                grNach.getView().getSelectionModel().clearSelections();
                                grNach.getView().getSelectionModel().select(ind);
                            },
                            x: 515,
                            y: 100,
                            formBind: true,
                            height: 30,
                            id: 'btnaAppPtnReset',
                            width: 30,
                            icon: 'resources/css/images/ico/refresh.png',
                            scale: 'medium',
                            text: '',
                            tooltip: 'Восстановить'
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                //this.up('#winAddVodomer').close();
                                var form = button.findParentByType('form').getForm();
                                //form.reset();
                                var zadol = form.findField('zadol').getValue();
                                var tarif = form.findField('tarif').getValue();
                                var gkm2 = form.findField('gkm2').getValue();
                                var square = form.findField('square').getValue();
                                var perer = form.findField('perer').getValue();
                                var budjet = form.findField('budjet').getValue();
                                var pbudjet = form.findField('pbudjet').getValue();
                                var oplacheno = form.findField('oplacheno').getValue();

                                var nachisleno =0;
                                var ptn = 0;
                                var tarif_m2 = 0;

                                if ((tarif===0)  &&  (square > 0 || gkm2 > 0)) {
                                    Ext.MessageBox.show({
                                        title: 'Проверка тарифа',
                                        msg: 'Введите тариф по услуге',
                                        buttons: Ext.MessageBox.OK,
                                        icon: Ext.MessageBox.INFO
                                    });
                                } else {
                                    ptn = gkm2 * tarif * square ;
                                    tarif_m2 = gkm2 * tarif ;

                                    nachisleno = ptn + perer- budjet + pbudjet;
                                    form.findField('ptn').setValue(ptn);
                                    form.findField('tarif_m2').setValue(tarif_m2);
                                    form.findField('nachisleno').setValue(nachisleno);
                                    form.findField('dolg').setValue(zadol + nachisleno - oplacheno);
                                }
                            },
                            x: 575,
                            y: 100,
                            formBind: true,
                            height: 30,
                            id: 'btnPtnAppPerer',
                            width: 30,
                            icon: 'resources/css/images/ico/schet.png',
                            scale: 'medium',
                            text: '',
                            tooltip: 'Просчитать'
                        }
                    ]
                }
            ]
        },
        {
            xtype: 'form',
            id: 'tabFmAppOtoplenie',
            width: 1096,
            layout: 'absolute',
            title: 'Опалення',
            items: [
                {
                    xtype: 'fieldset',
                    x: 365,
                    y: 10,
                    height: 320,
                    style: 'background-color: #DCDCDC;',
                    width: 195,
                    title: 'Начислено, грн',
                    items: [
                        {
                            xtype: 'textfield',
                            anchor: '100%',
                            fieldLabel: 'метод',
                            labelWidth: 50,
                            name: 'metod'
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            width: 135,
                            fieldLabel: 'тариф   (м&sup2;)',
                            labelWidth: 90,
                            name: 'tarif',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true,
                            decimalPrecision: 3
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            width: 133,
                            fieldLabel: 'Площадь (м&sup2;)',
                            labelWidth: 90,
                            name: 'square',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            fieldLabel: 'Гкал (м&sup2;)',
                            labelWidth: 90,
                            name: 'gkalm2',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true,
                            decimalPrecision: 7
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            width: 136,
                            fieldLabel: 'Начисл (м&sup2;)',
                            labelWidth: 90,
                            name: 'otoplenie',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            width: 135,
                            fieldLabel: 'тариф (гкал)',
                            labelWidth: 90,
                            name: 'tarif_gkal',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true,
                            decimalPrecision: 3
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            fieldLabel: 'Начисл (гкал)',
                            labelWidth: 90,
                            name: 'otoplenie_gkal',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            fieldLabel: 'Гкал /м&sup2;',
                            labelWidth: 90,
                            name: 'gkm2',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true,
                            decimalPrecision: 7
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            fieldLabel: 'Гкал',
                            labelWidth: 90,
                            name: 'gkal',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true,
                            decimalPrecision: 6
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            width: 125,
                            fieldLabel: 'Начислено',
                            labelWidth: 90,
                            name: 'nachisleno',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        }
                    ]
                },
                {
                    xtype: 'gridpanel',
                    x: 0,
                    y: 0,
                    height: 330,
                    id: 'grNachOtoplenie',
                    scrollable: true,
                    width: 210,
                    title: 'Период начисления',
                    store: 'StTekNachApp',
                    viewConfig: {
                        height: 458,
                        emptyText: 'нет начислений'
                    },
                    columns: [
                        {
                            xtype: 'numbercolumn',
                            hidden: true,
                            dataIndex: 'address_id',
                            text: 'Address_id'
                        },
                        {
                            xtype: 'numbercolumn',
                            width: 50,
                            dataIndex: 'god',
                            menuDisabled: true,
                            text: 'год',
                            format: '0'
                        },
                        {
                            xtype: 'datecolumn',
                            width: 75,
                            dataIndex: 'data',
                            menuDisabled: true,
                            text: 'месяц',
                            format: 'F'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if (value < 0) {
                                    metaData.style = 'color:red';
                                }
                                return value;

                            },
                            hidden: true,
                            width: 70,
                            align: 'right',
                            dataIndex: 'zadol',
                            menuDisabled: true,
                            text: 'задол'
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            width: 49,
                            dataIndex: 'mec',
                            menuDisabled: true,
                            text: 'мес'
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            width: 62,
                            dataIndex: 'period',
                            menuDisabled: true,
                            text: 'Период'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if (value < 0) {
                                    metaData.style = 'color:red';
                                }
                                return value;

                            },
                            hidden: true,
                            width: 70,
                            align: 'right',
                            dataIndex: 'nachisleno',
                            menuDisabled: true,
                            text: 'начисл'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if (value < 0) {
                                    metaData.style = 'color:red';
                                }
                                return value;

                            },
                            hidden: true,
                            width: 70,
                            align: 'right',
                            dataIndex: 'oplacheno',
                            menuDisabled: true,
                            text: 'оплач'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if (value < 0) {
                                    metaData.style = 'color:red';
                                }
                                return value;

                            },
                            width: 75,
                            align: 'right',
                            dataIndex: 'dolg',
                            menuDisabled: true,
                            text: 'Долг'
                        }
                    ],
                    tools: [
                        {
                            xtype: 'tool',
                            callback: function(owner, tool, event) {
                                //STORE
                                var stUser = Ext.data.StoreManager.get("StUser");
                                var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                //LOGIN & PASSWORD
                                var values =stUser.getAt(0);
                                // FORM
                                var form = tool.findParentByType('form');
                                // DATA

                                //LOGIKA
                                StTekNachApp.load({
                                    params: {
                                        what:'OtoplenieAppAll',
                                        address_id: values.get('address_id'),
                                        login:values.get('login'),
                                        password:values.get('password')
                                    },
                                    callback: function(records,operation,success){
                                        if(success){
                                            form.getForm().reset();
                                            form.getForm().loadRecord(records[0]);
                                        }else{
                                            form.getForm().reset();
                                        }
                                    },
                                    scope:this
                                });
                            },
                            tooltip: 'выбрать все записи',
                            type: 'plus'
                        }
                    ]
                },
                {
                    xtype: 'gridpanel',
                    x: 5,
                    y: 340,
                    height: 185,
                    id: 'grLgotaNachOtoplenie',
                    scrollable: true,
                    width: 1095,
                    title: 'нарахування на бюджет',
                    store: 'StLgotaNachVoda',
                    viewConfig: {
                        emptyText: 'Начислений по льготе нет'
                    },
                    columns: [
                        {
                            xtype: 'actioncolumn',
                            width: 30,
                            menuDisabled: true,
                            items: [
                                {
                                    getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                        var tekd = r.get('data');
                                        var dt = new Date();
                                        var check_date=Ext.Date.format(dt, 'Y-m');
                                        var tek_date=Ext.Date.format(tekd, 'Y-m');
                                        var pr = r.get('pr');

                                        if (pr === 0 ) {
                                            metaData = 'x-grid-center-icon';
                                        } else if (pr === 1 ){
                                            metaData = 'x-hide-display';
                                        }
                                        return metaData;
                                    },
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        var dt = new Date();
                                        var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                        var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);
                                        var value = record;
                                        var rbgTypeNachVoda = winAddLgotaPerer.down('#rbgTypeNachVoda');
                                        rbgTypeNachVoda.hide();
                                        view.getSelectionModel().select(rowIndex);
                                        values.set({'vibor':'addLgotaOtopleniePerer'});
                                        stUser.sync();
                                        form.loadRecord(value);
                                        form.getForm().findField('summa').setValue(value.get('budjet'));
                                        form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                        winAddLgotaPerer.show();
                                    },
                                    icon: 'resources/css/images/ico/add.png',
                                    tooltip: 'Добавить перерасчет по льготе'
                                },
                                {
                                    getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                        var tekd = r.get('data');
                                        var dt = new Date();
                                        var check_date=Ext.Date.format(dt, 'Y-m');
                                        var tek_date=Ext.Date.format(tekd, 'Y-m');
                                        var pr = r.get('pr');

                                        if (pr === 0 ) {
                                            metaData = 'x-hide-display';
                                        } else if ((pr === 1) && (check_date === tek_date) ){
                                            metaData = 'x-grid-center-icon';
                                        }
                                        return metaData;
                                    },
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        // in use
                                        var me = this;
                                        //STORE

                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");

                                        var form = Ext.getCmp('tabFmAppOtoplenie');

                                        //LOGIN & PASSWORD
                                        var values =stUser.getAt(0);
                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            address_id:values.get('address_id'),
                                            address:values.get('address'),
                                            what:"delLgotaOtopleniePerer"
                                        };

                                        //GRID
                                        var store = view.getStore();
                                        var value = store.getAt(rowIndex).data;
                                        // FORM

                                        //GRID
                                        var grNachOtoplenie = Ext.getCmp('grNachOtoplenie');
                                        var valueNachisl  = grNachOtoplenie.getView().getSelectionModel().getSelection()[0];
                                        var ind  = grNachOtoplenie.getView().getStore().indexOf(valueNachisl);

                                        //LOGIKA


                                        Ext.Object.merge(value, params);
                                        //console.log(value);

                                        Ext.MessageBox.confirm({
                                            title: 'Удаление записи из базы льгот',
                                            msg: 'Вы удаляете перерасчет по отоплению на бюджет <br> Подтвердите или отмените свои действия.',
                                            buttons: Ext.MessageBox.OKCANCEL,
                                            icon: Ext.MessageBox.ERROR,
                                            buttonText:{
                                                ok:'подтвеждаю',
                                                cancel:'отмена'
                                            },
                                            fn:function(btn,newValue){
                                                if(btn=='ok'){
                                                    QueryAddress.updateRecords(value,function(results){
                                                        if(results.success==="1"){
                                                            Ext.MessageBox.show({
                                                                title: 'Удаление перерасчета по отоплению на бюджет',
                                                                msg: results.msg,
                                                                buttons: Ext.MessageBox.OK,
                                                                icon: Ext.MessageBox.INFO
                                                            });
                                                            StTekNachApp.load({
                                                                params: {
                                                                    what:'OtoplenieApp',
                                                                    address_id: values.get('address_id'),
                                                                    login:values.get('login'),
                                                                    password:values.get('password')
                                                                },
                                                                callback: function(records,operation,success){
                                                                    if(success){
                                                                        grNachOtoplenie.getView().getSelectionModel().select(ind);
                                                                    }else{
                                                                        form.getForm().reset();
                                                                    }
                                                                },
                                                                scope:this
                                                            });

                                                        } else {
                                                            Ext.MessageBox.show({
                                                                title: 'Удаление перерасчета по отоплению на бюджет',
                                                                msg: results.msg,
                                                                buttons: Ext.MessageBox.OK,
                                                                icon: Ext.MessageBox.ERROR
                                                            });
                                                        }
                                                    });
                                                }
                                            }
                                        });
                                    },
                                    icon: 'resources/css/images/ico/delete.png',
                                    tooltip: 'Удалить перерасчет по льготе'
                                }
                            ]
                        },
                        {
                            xtype: 'datecolumn',
                            width: 75,
                            dataIndex: 'sdata',
                            menuDisabled: true,
                            text: 'дата с',
                            format: 'd-m-y'
                        },
                        {
                            xtype: 'datecolumn',
                            width: 75,
                            dataIndex: 'fdata',
                            menuDisabled: true,
                            text: 'дата по',
                            format: 'd-m-y'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 100,
                            dataIndex: 'fio',
                            menuDisabled: true,
                            text: 'Ф.И.О'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 110,
                            dataIndex: 'lgota',
                            menuDisabled: true,
                            text: 'Льгота',
                            tooltip: 'name'
                        },
                        {
                            xtype: 'numbercolumn',
                            width: 45,
                            align: 'center',
                            dataIndex: 'percent',
                            menuDisabled: true,
                            text: '%',
                            format: '0'
                        },
                        {
                            xtype: 'numbercolumn',
                            width: 45,
                            align: 'center',
                            dataIndex: 'people',
                            menuDisabled: true,
                            text: 'чел',
                            format: '0'
                        },
                        {
                            xtype: 'numbercolumn',
                            width: 80,
                            align: 'right',
                            dataIndex: 'tarif',
                            menuDisabled: true,
                            text: 'тариф',
                            format: '0.000'
                        },
                        {
                            xtype: 'numbercolumn',
                            width: 90,
                            align: 'right',
                            dataIndex: 'gkal',
                            menuDisabled: true,
                            text: 'Гк_пред',
                            format: '0.000000'
                        },
                        {
                            xtype: 'numbercolumn',
                            width: 90,
                            align: 'right',
                            dataIndex: 'qty',
                            menuDisabled: true,
                            text: 'Гкал',
                            format: '0.000000'
                        },
                        {
                            xtype: 'numbercolumn',
                            width: 60,
                            align: 'right',
                            dataIndex: 'm2',
                            menuDisabled: true,
                            text: 'Sм&sup2;',
                            format: '0.00'
                        },
                        {
                            xtype: 'numbercolumn',
                            width: 85,
                            align: 'right',
                            dataIndex: 'gkm2',
                            menuDisabled: true,
                            text: 'Гк_м&sup2;',
                            format: '0.0000000'
                        },
                        {
                            xtype: 'numbercolumn',
                            summaryType: 'sum',
                            width: 80,
                            align: 'right',
                            dataIndex: 'budjet',
                            menuDisabled: true,
                            text: 'бюджет'
                        },
                        {
                            xtype: 'numbercolumn',
                            width: 40,
                            dataIndex: 'pr',
                            menuDisabled: true,
                            text: 'пр',
                            format: '0'
                        },
                        {
                            xtype: 'actioncolumn',
                            width: 30,
                            menuDisabled: true,
                            items: [
                                {
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                        var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);
                                        var value = record;
                                        var metod =value.get('metod') ;

                                        view.getSelectionModel().select(rowIndex);
                                        values.set({'vibor':'editLgotaOtoplenie'});
                                        stUser.sync();

                                        form.down('#btAddLgotaPerer').setText('Обновить запись');
                                        form.loadRecord(value);
                                        form.getForm().findField('summa').setValue(value.get('budjet'));

                                        winAddLgotaPerer.setTitle('Редактирование записи на бюджет');

                                        winAddLgotaPerer.show();
                                    },
                                    icon: 'resources/css/images/ico/edit.png',
                                    tooltip: 'Редактировать запись'
                                }
                            ]
                        },
                        {
                            xtype: 'actioncolumn',
                            width: 35,
                            menuDisabled: true,
                            items: [
                                {
                                    getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                        var tekd = r.get('data');
                                        var dt = new Date();
                                        var check_date=Ext.Date.format(dt, 'Y-m');
                                        var tek_date=Ext.Date.format(tekd, 'Y-m');
                                        var pr = r.get('pr');
                                        if (pr === 1 ) {
                                            metaData = 'x-hide-display';
                                        } else if ( (pr === 0)    ){
                                            metaData = 'x-grid-center-icon';
                                        }
                                        return metaData;
                                    },
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        // in use
                                        var me = this;
                                        //STORE

                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");

                                        var form = Ext.getCmp('tabFmAppOtoplenie');

                                        //LOGIN & PASSWORD
                                        var values =stUser.getAt(0);
                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            address_id:values.get('address_id'),
                                            address:values.get('address'),
                                            what:"delLgotaOtoplenie"
                                        };

                                        //GRID
                                        var store = view.getStore();
                                        var value = store.getAt(rowIndex).data;
                                        // FORM

                                        //GRID
                                        var grNach = Ext.getCmp('grNachOtoplenie');
                                        var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];
                                        var ind  = grNach.getView().getStore().indexOf(valueNachisl);

                                        //LOGIKA


                                        Ext.Object.merge(value, params);
                                        //console.log(value);

                                        Ext.MessageBox.confirm({
                                            title: 'Удаление записи из базы льгот',
                                            msg: 'Вы удаляете начисление на бюджет <br> Подтвердите или отмените свои действия.',
                                            buttons: Ext.MessageBox.OKCANCEL,
                                            icon: Ext.MessageBox.ERROR,
                                            buttonText:{
                                                ok:'подтвеждаю',
                                                cancel:'отмена'
                                            },
                                            fn:function(btn,newValue){
                                                if(btn=='ok'){
                                                    QueryAddress.updateRecords(value,function(results){
                                                        if(results.success==="1"){
                                                            Ext.MessageBox.show({
                                                                title: 'Удаление записи по отоплению на бюджет',
                                                                msg: results.msg,
                                                                buttons: Ext.MessageBox.OK,
                                                                icon: Ext.MessageBox.INFO
                                                            });
                                                            StTekNachApp.load({
                                                                params: {
                                                                    what:'OtoplenieApp',
                                                                    address_id: values.get('address_id'),
                                                                    login:values.get('login'),
                                                                    password:values.get('password')
                                                                },
                                                                callback: function(records,operation,success){
                                                                    if(success){
                                                                        grNach.getView().getSelectionModel().select(ind);
                                                                    }else{
                                                                        form.getForm().reset();
                                                                    }
                                                                },
                                                                scope:this
                                                            });

                                                        } else {
                                                            Ext.MessageBox.show({
                                                                title: 'Удаление начисления на бюджет',
                                                                msg: results.msg,
                                                                buttons: Ext.MessageBox.OK,
                                                                icon: Ext.MessageBox.ERROR
                                                            });
                                                        }
                                                    });
                                                }
                                            }
                                        });
                                    },
                                    icon: 'resources/css/images/ico/no.png',
                                    tooltip: 'Удалить  запись '
                                }
                            ]
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            dataIndex: 'info',
                            menuDisabled: true,
                            text: 'инфо',
                            tooltip: 'name'
                        }
                    ],
                    features: [
                        {
                            ftype: 'summary'
                        }
                    ],
                    tools: [
                        {
                            xtype: 'tool',
                            callback: function(owner, tool, event) {
                                var gridLgotnik = Ext.getCmp('grLgotnikNachApp');
                                var gridNachisl = Ext.getCmp('grNachOtoplenie');
                                var stUser = Ext.data.StoreManager.get("StUser");
                                var values =stUser.getAt(0);
                                var value  = gridLgotnik.getView().getSelectionModel().getSelection()[0];
                                var valueNachisl  = gridNachisl.getView().getSelectionModel().getSelection()[0];
                                var ind  = gridNachisl.getView().getStore().indexOf(valueNachisl);



                                //console.log(valueNachisl.index);
                                if (value !==undefined && valueNachisl !==undefined ){
                                    var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                    var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                    var rbgTypeNachVoda = winAddLgotaPerer.down('#rbgTypeNachVoda');
                                    var dt = new Date();
                                    var dt_nach = new Date(valueNachisl.get('data'));
                                    var check_date = Ext.Date.format(dt, 'Y-m');
                                    var date_check = Ext.Date.format(dt_nach, 'Y-m');
                                    rbgTypeNachVoda.hide();
                                    winAddLgotaPerer.setTitle('Добавление записи на бюджет');

                                    var pr = form.getForm().findField('checkType').getValue();
                                    //console.log(pr);

                                    if (pr === true ) {
                                        values.set({'vibor':'addLgotaOtoplenie'});
                                        stUser.sync();
                                        form.loadRecord(value);
                                        form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                        form.getForm().findField('sdata').setValue(Ext.Date.getFirstDateOfMonth(dt) );
                                        form.getForm().findField('fdata').setValue(Ext.Date.getLastDateOfMonth(dt) );
                                        form.getForm().findField('tarif').setValue(valueNachisl.get('tarif_gkal')) ;
                                        form.getForm().findField('m2').setValue("31.5");
                                        form.getForm().findField('gkm2').setValue(valueNachisl.get('gkm2'));
                                        form.getForm().findField('gkal').setValue(valueNachisl.get('gkal'));

                                        form.getForm().findField('qty').setValue(31.5 * valueNachisl.get('gkm2'));
                                        form.getForm().findField('summa').setValue((value.get('percent')/100)*31.5 * valueNachisl.get('tarif_gkal')* valueNachisl.get('gkm2'));
                                        form.getForm().findField('checkType').setValue("0");
                                        form.getForm().findField('info').setValue('Добавление записи начисления на бюджет в ручном режиме');
                                        form.getForm().findField('ind').setValue(ind);
                                        winAddLgotaPerer.show();

                                    } else {

                                        values.set({'vibor':'addLgotaOtopleniePerer'});
                                        stUser.sync();
                                        form.loadRecord(value);
                                        form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                        form.getForm().findField('sdata').setValue(Ext.Date.getFirstDateOfMonth(dt_nach) );
                                        form.getForm().findField('fdata').setValue(Ext.Date.getLastDateOfMonth(dt_nach) );
                                        form.getForm().findField('tarif').setValue(valueNachisl.get('tarif_gkal')) ;
                                        form.getForm().findField('m2').setValue("31.5");
                                        form.getForm().findField('gkm2').setValue(valueNachisl.get('gkm2'));
                                        form.getForm().findField('gkal').setValue(valueNachisl.get('gkal'));
                                        form.getForm().findField('qty').setValue(31.5 * valueNachisl.get('gkm2'));
                                        form.getForm().findField('summa').setValue((value.get('percent')/100)*31.5 * valueNachisl.get('tarif_gkal')* valueNachisl.get('gkm2'));
                                        form.getForm().findField('checkType').setValue("1");
                                        form.getForm().findField('info').setValue('Добавление записи перерасчета на бюджет в ручном режиме');
                                        form.getForm().findField('ind').setValue(ind);
                                        winAddLgotaPerer.show();

                                    }


                                } else{
                                    Ext.MessageBox.show({
                                        title: 'Добавлениезаписи начисления  на бюджет',
                                        msg: 'Не выбран льготчик',
                                        buttons: Ext.MessageBox.OK,
                                        icon: Ext.MessageBox.INFO
                                    });
                                }
                            },
                            tooltip: 'добавить начисление по льготнику',
                            type: 'plus'
                        }
                    ]
                },
                {
                    xtype: 'fieldset',
                    x: 215,
                    y: 50,
                    height: 280,
                    style: 'background-color: #DCDCDC;',
                    width: 145,
                    title: '',
                    toggleOnTitleClick: false,
                    items: [
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            padding: '10 0 0 0',
                            fieldLabel: 'Сальдо на початок',
                            labelAlign: 'top',
                            name: 'zadol',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            fieldLabel: 'Оплачено',
                            labelAlign: 'top',
                            name: 'oplacheno',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            fieldLabel: 'опл долг',
                            labelWidth: 60,
                            name: 'foplacheno',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            fieldLabel: 'остаток',
                            labelWidth: 60,
                            name: 'fdolg',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            fieldLabel: 'Сальдо на конец',
                            labelAlign: 'top',
                            labelWidth: 55,
                            name: 'dolg',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                // in use
                                var me = this;

                                //STORE
                                var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                var stUser = Ext.data.StoreManager.get("StUser");
                                var values =stUser.getAt(0);
                                var params = {
                                    login:values.get('login'),
                                    password:values.get('password'),
                                    address_id:values.get('address_id'),
                                    what:'AppOtoplenieIns'
                                };
                                //FORMA
                                var form = button.findParentByType('form').getForm();
                                var value = form.getValues();
                                var grNach = Ext.getCmp('grNachOtoplenie');
                                var record = grNach.getSelectionModel().getSelection()[0];
                                var ind  = grNach.getView().getStore().indexOf(record);
                                //console.log();

                                //LOGIKA
                                Ext.Object.merge(value, params);

                                QueryAddress.updateRecords(value,function(results){

                                    StTekNachApp.load({
                                        params: {
                                            what:'OtoplenieApp',
                                            address_id: values.get('address_id'),
                                            login:values.get('login'),
                                            password:values.get('password')
                                        },
                                        callback: function(records,operation,success){
                                            if(success){
                                                grNach.getView().getSelectionModel().select(ind);
                                            }else{
                                                form.reset();
                                            }
                                        },
                                        scope:this
                                    });
                                });
                            },
                            anchor: '100%',
                            formBind: true,
                            id: 'btnOtoplenieAppIns',
                            icon: 'resources/css/images/ico/yes22.png',
                            text: 'Записати'
                        }
                    ]
                },
                {
                    xtype: 'datefield',
                    x: 215,
                    y: 0,
                    border: '0px',
                    margin: '10 0 10 0',
                    width: 145,
                    fieldLabel: 'Период начислен',
                    hideLabel: true,
                    labelAlign: 'top',
                    labelWidth: 50,
                    name: 'data',
                    fieldStyle: 'color: #1791e6; text-shadow: -1px -1px white, 1px 1px #333;font-size:14pt;text-align:center',
                    hideTrigger: true,
                    format: 'F,Y',
                    startDay: 1,
                    submitFormat: 'Ymd'
                },
                {
                    xtype: 'fieldset',
                    x: 565,
                    y: 10,
                    height: 110,
                    style: 'background-color: #DCDCDC;',
                    width: 160,
                    title: 'МОП',
                    items: [
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            width: 125,
                            fieldLabel: 'Гк/м&sup2;',
                            labelWidth: 40,
                            name: 'gkm2_mop',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true,
                            decimalPrecision: 7
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            width: 125,
                            fieldLabel: 'Гкал',
                            labelWidth: 40,
                            name: 'gkal_mop',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true,
                            decimalPrecision: 6
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            width: 125,
                            fieldLabel: 'Моп',
                            labelWidth: 40,
                            name: 'mop',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        }
                    ]
                },
                {
                    xtype: 'fieldset',
                    x: 565,
                    y: 120,
                    height: 210,
                    style: 'background-color: #DCDCDC;',
                    width: 160,
                    title: 'Рассрочка оплаты',
                    items: [
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            fieldLabel: 'Задол',
                            labelWidth: 60,
                            name: 'kzadol',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true,
                            decimalPrecision: 7
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            fieldLabel: 'начисл',
                            labelWidth: 60,
                            name: 'knachisleno',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true,
                            decimalPrecision: 7
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            fieldLabel: 'Платеж',
                            labelWidth: 60,
                            name: 'koplata',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true,
                            decimalPrecision: 7
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            fieldLabel: 'Оплата',
                            labelWidth: 60,
                            name: 'koplacheno',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true,
                            decimalPrecision: 6
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            fieldLabel: 'Долг',
                            labelWidth: 60,
                            name: 'kdolg',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                // in use
                                var me = this;

                                //STORE
                                var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                var stUser = Ext.data.StoreManager.get("StUser");
                                var values =stUser.getAt(0);
                                var params = {
                                    login:values.get('login'),
                                    password:values.get('password'),
                                    address_id:values.get('address_id'),
                                    what:'NachOplataKreditAddress'
                                };
                                //FORMA
                                var form = button.findParentByType('form').getForm();
                                var value = form.getValues();
                                var grNach = Ext.getCmp('grNachOtoplenie');
                                var record = grNach.getSelectionModel().getSelection()[0];
                                var ind  = grNach.getView().getStore().indexOf(record);
                                //console.log();
                                //LOGIKA
                                Ext.Object.merge(value, params);

                                Ext.MessageBox.confirm({
                                    title: 'Начислить оплату по рассрочке',
                                    msg: 'Начислить оплату по рассрочке <br>Вы желаете продолжать.',
                                    buttons: Ext.MessageBox.OKCANCEL,
                                    icon: Ext.MessageBox.ERROR,
                                    buttonText:{
                                        ok:'Да',
                                        cancel:'отмена'
                                    },
                                    fn:function(btn,newValue){
                                        if(btn=='ok'){
                                            QueryTeplomer.newPokTeplomera(value,function(data){
                                                if (data.success !=='0'){
                                                    Ext.MessageBox.confirm({
                                                        title: 'Проверка вводимых данных',
                                                        msg: data.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.INFO
                                                    });
                                                    StTekNachApp.load({
                                                        params: {
                                                            what:'OtoplenieApp',
                                                            address_id: values.get('address_id'),
                                                            login:values.get('login'),
                                                            password:values.get('password')
                                                        },
                                                        callback: function(records,operation,success){
                                                            if(success){
                                                                grNach.getView().getSelectionModel().select(ind);
                                                            }else{
                                                                form.reset();
                                                            }
                                                        },
                                                        scope:this
                                                    });
                                                }else {
                                                    Ext.MessageBox.confirm({
                                                        title: 'Проверка вводимых данных',
                                                        msg: data.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.INFO
                                                    });
                                                }
                                            });
                                        }
                                    }
                                });

                            },
                            anchor: '100%',
                            formBind: true,
                            disabled: true,
                            height: 30,
                            id: 'btnOplataKredit',
                            width: 95,
                            icon: 'resources/css/images/ico/yes22.png',
                            text: 'Начислить'
                        }
                    ]
                },
                {
                    xtype: 'fieldset',
                    x: 730,
                    y: 10,
                    height: 260,
                    style: 'background-color: #DCDCDC;',
                    width: 195,
                    title: 'перерасчет',
                    items: [
                        {
                            xtype: 'datefield',
                            anchor: '100%',
                            width: 150,
                            fieldLabel: 'дата',
                            labelWidth: 35,
                            name: 'data_perer',
                            format: 'F,Y',
                            startDay: 1,
                            submitFormat: 'Ymd',
                            listeners: {
                                select: {
                                    fn: 'onDatefieldSelectPerer',
                                    scope: 'controller'
                                }
                            }
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            width: 150,
                            fieldLabel: 'Тариф_перер',
                            labelWidth: 85,
                            name: 'tarif_perer',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true,
                            decimalPrecision: 3
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            width: 125,
                            fieldLabel: 'Гкал_предыд',
                            labelWidth: 85,
                            name: 'gkal_old',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true,
                            decimalPrecision: 6
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            width: 125,
                            fieldLabel: 'Гкал_новые',
                            labelWidth: 85,
                            name: 'gkal_new',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true,
                            decimalPrecision: 6
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            width: 125,
                            fieldLabel: 'Гкал_перер',
                            labelWidth: 85,
                            name: 'perer_gkal',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true,
                            decimalPrecision: 6
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            width: 125,
                            fieldLabel: 'Гкал/м&sup2;_пер',
                            labelWidth: 85,
                            name: 'gkm2_perer',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true,
                            decimalPrecision: 7
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            fieldLabel: 'Сумма_перер',
                            labelWidth: 85,
                            name: 'perer',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                // in use
                                var me = this;

                                //STORE
                                var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                var stUser = Ext.data.StoreManager.get("StUser");
                                var values =stUser.getAt(0);
                                var params = {
                                    login:values.get('login'),
                                    password:values.get('password'),
                                    address_id:values.get('address_id'),
                                    what:'AppOtopleniePererIns'
                                };
                                //FORMA
                                var form = button.findParentByType('form').getForm();
                                var value = form.getValues();
                                var grNach = Ext.getCmp('grNachOtoplenie');
                                var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];
                                var ind = parseInt(valueNachisl.index,0);
                                //console.log();

                                //LOGIKA
                                Ext.Object.merge(value, params);

                                var newValue = value.perer_gkal;
                                if (newValue !== 0){
                                    Ext.MessageBox.confirm({
                                        title: 'Перерасчет по квартире',
                                        msg: 'Перерасчет по отоплениию <br>Вы желаете продолжать.',
                                        buttons: Ext.MessageBox.OKCANCEL,
                                        icon: Ext.MessageBox.ERROR,
                                        buttonText:{
                                            ok:'Да',
                                            cancel:'отмена'
                                        },
                                        fn:function(btn,newValue){
                                            if(btn=='ok'){
                                                var myMask= Ext.Msg.show({
                                                    title:'Перерасчет...',
                                                    msg: 'Перерасчет по отоплению.Ожидайте...',
                                                    buttons: Ext.Msg.CANCEL,
                                                    wait: true,
                                                    modal: true,
                                                    icon: Ext.Msg.INFO
                                                });
                                                QueryTeplomer.newPokTeplomera(value,function(data){
                                                    if (data.success !=='0'){
                                                        StTekNachApp.load({
                                                            params: {
                                                                what:'OtoplenieApp',
                                                                address_id: values.get('address_id'),
                                                                login:values.get('login'),
                                                                password:values.get('password')
                                                            },
                                                            callback: function(records,operation,success){
                                                                if(success){
                                                                    grNach.getView().getSelectionModel().select(ind);
                                                                }else{
                                                                    form.reset();
                                                                }
                                                            },
                                                            scope:this
                                                        });
                                                        myMask.close();
                                                        Ext.MessageBox.confirm({
                                                            title: 'Проверка вводимых данных',
                                                            msg: data.msg,
                                                            buttons: Ext.MessageBox.OK,
                                                            icon: Ext.MessageBox.INFO
                                                        });
                                                    }else{
                                                        myMask.close();
                                                    }
                                                });
                                            }
                                        }
                                    });
                                }

                            },
                            anchor: '100%',
                            formBind: true,
                            disabled: true,
                            height: 30,
                            id: 'btnOtopleniePererIns',
                            width: 95,
                            icon: 'resources/css/images/ico/yes22.png',
                            text: 'Выполнить перерасч'
                        }
                    ]
                },
                {
                    xtype: 'fieldset',
                    x: 930,
                    y: 10,
                    height: 225,
                    style: 'background-color: #DCDCDC;',
                    width: 170,
                    title: 'По льготе',
                    items: [
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            width: 125,
                            fieldLabel: 'S_льг (м&sup2;)',
                            labelWidth: 65,
                            name: 'square_lg',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            width: 125,
                            fieldLabel: 'Гкал (1м&sup2;)',
                            labelWidth: 65,
                            name: 'gkm2_lg',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true,
                            decimalPrecision: 7
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            width: 140,
                            fieldLabel: 'Бюд (м&sup2;)',
                            labelWidth: 65,
                            name: 'budjet_m2',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            width: 140,
                            fieldLabel: 'Бюд гкал',
                            labelWidth: 65,
                            name: 'budjet_gkal',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            width: 140,
                            fieldLabel: 'Бюд моп',
                            labelWidth: 65,
                            name: 'budjet_mop',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            width: 140,
                            fieldLabel: 'Бюджет',
                            labelWidth: 65,
                            name: 'budjet',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            width: 140,
                            fieldLabel: 'Перер',
                            labelWidth: 65,
                            name: 'pbudjet',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        }
                    ]
                },
                {
                    xtype: 'textfield',
                    x: 730,
                    y: 305,
                    style: 'background-color: #f3f3f3;',
                    width: 355,
                    fieldLabel: 'инфо бюджет',
                    name: 'msq_lgota'
                },
                {
                    xtype: 'button',
                    handler: function(button, e) {
                        var form = button.findParentByType('form').getForm();
                        var grNach = Ext.getCmp('grNachOtoplenie');
                        var record = grNach.getSelectionModel().getSelection()[0];
                        var ind  = grNach.getView().getStore().indexOf(record);
                        grNach.getView().getSelectionModel().clearSelections();
                        grNach.getView().getSelectionModel().select(ind);
                    },
                    x: 1050,
                    y: 240,
                    formBind: true,
                    height: 30,
                    id: 'btnOtoplenieAppReset',
                    width: 30,
                    icon: 'resources/css/images/ico/refresh.png',
                    scale: 'medium',
                    text: '',
                    tooltip: 'Восстановить'
                },
                {
                    xtype: 'button',
                    handler: function(button, e) {
                        //this.up('#winAddVodomer').close();
                        var form = button.findParentByType('form').getForm();
                        //form.reset();
                        var zadol = form.findField('zadol').getValue();
                        var tarif = form.findField('tarif_gkal').getValue();

                        var gkal = form.findField('gkal').getValue();
                        var gkal_mop = form.findField('gkal_mop').getValue();
                        var square = form.findField('square').getValue();
                        var square_lg = form.findField('square_lg').getValue();
                        var perer = form.findField('perer').getValue();
                        var budjet = form.findField('budjet').getValue();
                        var budjet_mop = form.findField('budjet_mop').getValue();
                        var pbudjet = form.findField('pbudjet').getValue();
                        var oplacheno = form.findField('oplacheno').getValue();

                        var gkm2_mop =0;
                        var gkm2 = 0;
                        var otoplenie = 0;
                        var mop = 0;
                        var nacisleno = 0;


                        if (tarif===0)  {

                            Ext.MessageBox.show({
                                title: 'Проверка тарифа',
                                msg: 'Введите тариф по услуге',
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.INFO
                            });
                        } else {
                            otoplenie = gkal * tarif - budjet ;
                            mop = gkal_mop * tarif - budjet_mop;
                            gkm2 = gkal / square;
                            gkm2_mop = gkal_mop / square;
                            nachisleno =otoplenie + mop + perer - pbudjet ;
                            form.findField('gkm2').setValue(gkm2);
                            form.findField('gkm2_mop').setValue(gkm2_mop);
                            form.findField('otoplenie').setValue(otoplenie);
                            form.findField('mop').setValue(mop);
                            form.findField('nachisleno').setValue(nachisleno);
                            form.findField('dolg').setValue(zadol + nachisleno - oplacheno);

                        }

                    },
                    x: 1010,
                    y: 240,
                    formBind: true,
                    height: 30,
                    id: 'btnOtoplenieAppPerer',
                    width: 30,
                    icon: 'resources/css/images/ico/schet.png',
                    scale: 'medium',
                    text: '',
                    tooltip: 'Просчитать'
                },
                {
                    xtype: 'textfield',
                    x: 730,
                    y: 275,
                    style: 'background-color: #f3f3f3;',
                    width: 355,
                    fieldLabel: 'инфо перер',
                    name: 'info'
                }
            ]
        },
        {
            xtype: 'form',
            id: 'tabFmAppPodogrev',
            layout: 'absolute',
            title: 'Підігрів',
            items: [
                {
                    xtype: 'gridpanel',
                    x: 0,
                    y: 0,
                    height: 490,
                    id: 'grNachPodogrev',
                    scrollable: true,
                    width: 225,
                    title: 'Период начисления',
                    store: 'StTekNachApp',
                    viewConfig: {
                        emptyText: 'нет начислений'
                    },
                    columns: [
                        {
                            xtype: 'numbercolumn',
                            hidden: true,
                            dataIndex: 'address_id',
                            text: 'Address_id'
                        },
                        {
                            xtype: 'numbercolumn',
                            width: 50,
                            dataIndex: 'god',
                            menuDisabled: true,
                            text: 'год',
                            format: '0'
                        },
                        {
                            xtype: 'datecolumn',
                            width: 80,
                            dataIndex: 'data',
                            menuDisabled: true,
                            text: 'месяц',
                            format: 'F'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if (value < 0) {
                                    metaData.style = 'color:red';
                                }
                                return value;

                            },
                            hidden: true,
                            width: 70,
                            align: 'right',
                            dataIndex: 'zadol',
                            menuDisabled: true,
                            text: 'задол'
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            width: 49,
                            dataIndex: 'mec',
                            menuDisabled: true,
                            text: 'мес'
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            width: 62,
                            dataIndex: 'period',
                            menuDisabled: true,
                            text: 'Период'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if (value < 0) {
                                    metaData.style = 'color:red';
                                }
                                return value;

                            },
                            hidden: true,
                            width: 70,
                            align: 'right',
                            dataIndex: 'nachisleno',
                            menuDisabled: true,
                            text: 'начисл'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if (value < 0) {
                                    metaData.style = 'color:red';
                                }
                                return value;

                            },
                            hidden: true,
                            width: 70,
                            align: 'right',
                            dataIndex: 'oplacheno',
                            menuDisabled: true,
                            text: 'оплач'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if (value < 0) {
                                    metaData.style = 'color:red';
                                }
                                return value;

                            },
                            width: 80,
                            align: 'right',
                            dataIndex: 'dolg',
                            menuDisabled: true,
                            text: 'Долг'
                        }
                    ],
                    tools: [
                        {
                            xtype: 'tool',
                            callback: function(owner, tool, event) {
                                //STORE
                                var stUser = Ext.data.StoreManager.get("StUser");
                                var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                //LOGIN & PASSWORD
                                var values =stUser.getAt(0);
                                // FORM
                                var form = tool.findParentByType('form');
                                // DATA

                                //LOGIKA
                                StTekNachApp.load({
                                    params: {
                                        what:'PodogrevAppAll',
                                        address_id: values.get('address_id'),
                                        login:values.get('login'),
                                        password:values.get('password')
                                    },
                                    callback: function(records,operation,success){
                                        if(success){
                                            form.getForm().reset();
                                            form.getForm().loadRecord(records[0]);
                                        }else{
                                            form.getForm().reset();
                                        }
                                    },
                                    scope:this
                                });
                            },
                            tooltip: 'выбрать все записи',
                            type: 'plus'
                        }
                    ]
                },
                {
                    xtype: 'gridpanel',
                    x: 240,
                    y: 230,
                    height: 260,
                    id: 'grLgotaNachPodogrev',
                    scrollable: true,
                    width: 810,
                    title: 'нарахування на бюджет',
                    store: 'StLgotaNachVoda',
                    viewConfig: {
                        emptyText: 'Начислений по льготе нет'
                    },
                    columns: [
                        {
                            xtype: 'actioncolumn',
                            width: 30,
                            menuDisabled: true,
                            items: [
                                {
                                    getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                        var pr = r.get('pr');
                                        if (pr === 0 ) {
                                            metaData = 'x-grid-center-icon';
                                        } else if (pr === 1   ){
                                            metaData = 'x-hide-display';
                                        }
                                        return metaData;
                                    },
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        var dt = new Date();
                                        var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                        var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);
                                        var value = record;

                                        view.getSelectionModel().select(rowIndex);
                                        values.set({'vibor':'addLgotaPodogrevPerer'});
                                        stUser.sync();
                                        form.loadRecord(value);
                                        form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                        form.getForm().findField('summa').setValue(value.get('budjet'));
                                        form.getForm().findField('m2').hide();
                                        form.getForm().findField('gkm2').hide();
                                        form.getForm().findField('gkal').hide();

                                        winAddLgotaPerer.show();
                                    },
                                    icon: 'resources/css/images/ico/add.png',
                                    tooltip: 'Добавить перерасчет по льготе'
                                },
                                {
                                    getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                        var tekd = r.get('data');
                                        var dt = new Date();
                                        var check_date=Ext.Date.format(dt, 'Y-m');
                                        var tek_date=Ext.Date.format(tekd, 'Y-m');
                                        var pr = r.get('pr');

                                        if (pr === 0 ) {
                                            metaData = 'x-hide-display';
                                        } else if ((pr === 1) && (check_date === tek_date) ){
                                            metaData = 'x-grid-center-icon';
                                        }
                                        return metaData;
                                    },
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        // in use
                                        var me = this;
                                        //STORE

                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");

                                        var form = Ext.getCmp('tabFmAppPodogrev');

                                        //LOGIN & PASSWORD
                                        var values =stUser.getAt(0);
                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            address_id:values.get('address_id'),
                                            address:values.get('address'),
                                            what:"delLgotaPodogrevPerer"
                                        };

                                        //GRID
                                        var store = view.getStore();
                                        var value = store.getAt(rowIndex).data;
                                        // FORM

                                        //GRID
                                        var grNach = Ext.getCmp('grNachPodogrev');
                                        var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];
                                        var ind  = grNach.getView().getStore().indexOf(valueNachisl);

                                        //LOGIKA


                                        Ext.Object.merge(value, params);
                                        //console.log(value);

                                        Ext.MessageBox.confirm({
                                            title: 'Удаление записи из базы льгот',
                                            msg: 'Вы удаляете перерасчет по подогреву на бюджет <br> Подтвердите или отмените свои действия.',
                                            buttons: Ext.MessageBox.OKCANCEL,
                                            icon: Ext.MessageBox.ERROR,
                                            buttonText:{
                                                ok:'подтвеждаю',
                                                cancel:'отмена'
                                            },
                                            fn:function(btn,newValue){
                                                if(btn=='ok'){
                                                    QueryAddress.updateRecords(value,function(results){
                                                        if(results.success==="1"){
                                                            Ext.MessageBox.show({
                                                                title: 'Удаление перерасчета по подогреву на бюджет',
                                                                msg: results.msg,
                                                                buttons: Ext.MessageBox.OK,
                                                                icon: Ext.MessageBox.INFO
                                                            });
                                                            StTekNachApp.load({
                                                                params: {
                                                                    what:'PodogrevApp',
                                                                    address_id: values.get('address_id'),
                                                                    login:values.get('login'),
                                                                    password:values.get('password')
                                                                },
                                                                callback: function(records,operation,success){
                                                                    if(success){
                                                                        grNach.getView().getSelectionModel().select(ind);
                                                                    }else{
                                                                        form.getForm().reset();
                                                                    }
                                                                },
                                                                scope:this
                                                            });

                                                        } else {
                                                            Ext.MessageBox.show({
                                                                title: 'Удаление перерасчета по подогреву на бюджет',
                                                                msg: results.msg,
                                                                buttons: Ext.MessageBox.OK,
                                                                icon: Ext.MessageBox.ERROR
                                                            });
                                                        }
                                                    });
                                                }
                                            }
                                        });
                                    },
                                    icon: 'resources/css/images/ico/delete.png',
                                    tooltip: 'Удалить перерасчет по льготе'
                                }
                            ]
                        },
                        {
                            xtype: 'datecolumn',
                            width: 75,
                            dataIndex: 'sdata',
                            menuDisabled: true,
                            text: 'дата с',
                            format: 'd-m-y'
                        },
                        {
                            xtype: 'datecolumn',
                            width: 75,
                            dataIndex: 'fdata',
                            menuDisabled: true,
                            text: 'дата по',
                            format: 'd-m-y'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 120,
                            dataIndex: 'fio',
                            menuDisabled: true,
                            text: 'Ф.И.О'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 130,
                            dataIndex: 'lgota',
                            menuDisabled: true,
                            text: 'Льгота',
                            tooltip: 'name'
                        },
                        {
                            xtype: 'numbercolumn',
                            width: 35,
                            align: 'center',
                            dataIndex: 'percent',
                            menuDisabled: true,
                            text: '%',
                            format: '0'
                        },
                        {
                            xtype: 'numbercolumn',
                            width: 44,
                            align: 'center',
                            dataIndex: 'people',
                            menuDisabled: true,
                            text: 'чел',
                            format: '0'
                        },
                        {
                            xtype: 'numbercolumn',
                            width: 60,
                            align: 'right',
                            dataIndex: 'tarif',
                            menuDisabled: true,
                            text: 'тариф',
                            format: '0.000'
                        },
                        {
                            xtype: 'numbercolumn',
                            summaryType: 'sum',
                            width: 49,
                            align: 'right',
                            dataIndex: 'qty',
                            menuDisabled: true,
                            text: 'куб',
                            format: '0.000'
                        },
                        {
                            xtype: 'numbercolumn',
                            summaryType: 'sum',
                            width: 74,
                            align: 'right',
                            dataIndex: 'budjet',
                            menuDisabled: true,
                            text: 'бюджет'
                        },
                        {
                            xtype: 'numbercolumn',
                            width: 40,
                            dataIndex: 'pr',
                            menuDisabled: true,
                            text: 'пр',
                            format: '0'
                        },
                        {
                            xtype: 'actioncolumn',
                            width: 30,
                            menuDisabled: true,
                            items: [
                                {
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        var dt = new Date();
                                        var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                        var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);
                                        var value = record;

                                        view.getSelectionModel().select(rowIndex);
                                        values.set({'vibor':'editLgotaPodogrev'});
                                        stUser.sync();

                                        form.down('#btAddLgotaPerer').setText('Обновить запись');
                                        form.loadRecord(value);
                                        form.getForm().findField('summa').setValue(value.get('budjet'));
                                        form.getForm().findField('m2').hide();
                                        form.getForm().findField('gkm2').hide();
                                        form.getForm().findField('gkal').hide();

                                        winAddLgotaPerer.setTitle('Редактирование записи на бюджет');

                                        winAddLgotaPerer.show();
                                    },
                                    icon: 'resources/css/images/ico/edit.png',
                                    tooltip: 'Редактировать запись'
                                }
                            ]
                        },
                        {
                            xtype: 'actioncolumn',
                            width: 30,
                            menuDisabled: true,
                            items: [
                                {
                                    getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                        var tekd = r.get('data');
                                        var dt = new Date();
                                        var check_date=Ext.Date.format(dt, 'Y-m');
                                        var tek_date=Ext.Date.format(tekd, 'Y-m');
                                        var pr = r.get('pr');
                                        if (pr === 1 ) {
                                            metaData = 'x-hide-display';
                                        } else if ( (pr === 0)  ){
                                            metaData = 'x-grid-center-icon';
                                        }
                                        return metaData;
                                    },
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        // in use
                                        var me = this;
                                        //STORE

                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");

                                        var form = Ext.getCmp('tabFmAppPodogrev');

                                        //LOGIN & PASSWORD
                                        var values =stUser.getAt(0);
                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            address_id:values.get('address_id'),
                                            address:values.get('address'),
                                            what:"delLgotaPodogrev"
                                        };

                                        //GRID
                                        var store = view.getStore();
                                        var value = store.getAt(rowIndex).data;
                                        // FORM

                                        //GRID
                                        var grNach = Ext.getCmp('grNachPodogrev');
                                        var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];
                                        var ind  = grNach.getView().getStore().indexOf(valueNachisl);

                                        //LOGIKA


                                        Ext.Object.merge(value, params);
                                        //console.log(value);

                                        Ext.MessageBox.confirm({
                                            title: 'Удаление записи из базы льгот',
                                            msg: 'Вы удаляете начисление на бюджет <br> Подтвердите или отмените свои действия.',
                                            buttons: Ext.MessageBox.OKCANCEL,
                                            icon: Ext.MessageBox.ERROR,
                                            buttonText:{
                                                ok:'подтвеждаю',
                                                cancel:'отмена'
                                            },
                                            fn:function(btn,newValue){
                                                if(btn=='ok'){
                                                    QueryAddress.updateRecords(value,function(results){
                                                        if(results.success==="1"){
                                                            Ext.MessageBox.show({
                                                                title: 'Удаление начисления по подогреву на бюджет',
                                                                msg: results.msg,
                                                                buttons: Ext.MessageBox.OK,
                                                                icon: Ext.MessageBox.INFO
                                                            });
                                                            StTekNachApp.load({
                                                                params: {
                                                                    what:'PodogrevApp',
                                                                    address_id: values.get('address_id'),
                                                                    login:values.get('login'),
                                                                    password:values.get('password')
                                                                },
                                                                callback: function(records,operation,success){
                                                                    if(success){
                                                                        grNach.getView().getSelectionModel().select(ind);
                                                                    }else{
                                                                        form.getForm().reset();
                                                                    }
                                                                },
                                                                scope:this
                                                            });

                                                        } else {
                                                            Ext.MessageBox.show({
                                                                title: 'Удаление начисления  на бюджет',
                                                                msg: results.msg,
                                                                buttons: Ext.MessageBox.OK,
                                                                icon: Ext.MessageBox.ERROR
                                                            });
                                                        }
                                                    });
                                                }
                                            }
                                        });
                                    },
                                    icon: 'resources/css/images/ico/no.png',
                                    tooltip: 'Удалить  запись '
                                }
                            ]
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            dataIndex: 'info',
                            menuDisabled: true,
                            text: 'инфо',
                            tooltip: 'name'
                        }
                    ],
                    features: [
                        {
                            ftype: 'summary'
                        }
                    ],
                    tools: [
                        {
                            xtype: 'tool',
                            callback: function(owner, tool, event) {
                                var gridLgotnik = Ext.getCmp('grLgotnikNachApp');
                                var gridNachisl = Ext.getCmp('grNachPodogrev');

                                var stUser = Ext.data.StoreManager.get("StUser");
                                var values =stUser.getAt(0);

                                var value  = gridLgotnik.getView().getSelectionModel().getSelection()[0];
                                var valueNachisl  = gridNachisl.getView().getSelectionModel().getSelection()[0];
                                var ind  = gridNachisl.getView().getStore().indexOf(valueNachisl);

                                if (value !==undefined && valueNachisl !==undefined ){
                                    var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                    var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                    var dt = new Date();
                                    var dt_nach = new Date(valueNachisl.get('data'));
                                    var check_date = Ext.Date.format(dt, 'Y-m');
                                    var date_check = Ext.Date.format(dt_nach, 'Y-m');
                                    form.getForm().findField('m2').hide();
                                    form.getForm().findField('gkm2').hide();
                                    form.getForm().findField('gkal').hide();

                                    winAddLgotaPerer.setTitle('Добавление записи на бюджет');

                                    if (check_date === date_check ) {

                                        values.set({'vibor':'addLgotaPodogrev'});
                                        stUser.sync();
                                        form.loadRecord(value);
                                        form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                        form.getForm().findField('sdata').setValue(Ext.Date.getFirstDateOfMonth(dt) );
                                        form.getForm().findField('fdata').setValue(Ext.Date.getLastDateOfMonth(dt) );
                                        form.getForm().findField('tarif').setValue(valueNachisl.get('tarif'));
                                        form.getForm().findField('qty').setValue(valueNachisl.get('gkub_lg'));
                                        form.getForm().findField('summa').setValue(valueNachisl.get('budjet'));
                                        form.getForm().findField('checkType').setValue("0");
                                        form.getForm().findField('info').setValue('Добавление записи начисления на бюджет в ручном режиме');
                                        form.getForm().findField('ind').setValue(ind);
                                        winAddLgotaPerer.show();

                                    } else {

                                        values.set({'vibor':'addLgotaPodogrevPerer'});
                                        stUser.sync();
                                        form.loadRecord(value);
                                        form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                        form.getForm().findField('sdata').setValue(Ext.Date.getFirstDateOfMonth(dt_nach) );
                                        form.getForm().findField('fdata').setValue(Ext.Date.getLastDateOfMonth(dt_nach) );
                                        form.getForm().findField('tarif').setValue(valueNachisl.get('tarif'));
                                        form.getForm().findField('qty').setValue(valueNachisl.get('gkub_lg'));
                                        form.getForm().findField('summa').setValue(valueNachisl.get('budjet'));
                                        form.getForm().findField('checkType').setValue("1");
                                        form.getForm().findField('info').setValue('Добавление записи перерасчета на бюджет в ручном режиме');
                                        form.getForm().findField('ind').setValue(ind);
                                        winAddLgotaPerer.show();

                                    }


                                } else{
                                    Ext.MessageBox.show({
                                        title: 'Добавлениезаписи начисления  на бюджет',
                                        msg: 'Не выбран льготчик',
                                        buttons: Ext.MessageBox.OK,
                                        icon: Ext.MessageBox.INFO
                                    });
                                }
                            },
                            tooltip: 'добавить начисление по льготнику',
                            type: 'plus'
                        }
                    ]
                },
                {
                    xtype: 'datefield',
                    x: 240,
                    y: 0,
                    border: '0px',
                    margin: '10 0 10 0',
                    width: 150,
                    fieldLabel: 'Период начислен',
                    hideLabel: true,
                    labelAlign: 'top',
                    labelWidth: 50,
                    name: 'data',
                    fieldStyle: 'color: #1791e6; text-shadow: -1px -1px white, 1px 1px #333;font-size:14pt;text-align:center',
                    hideTrigger: true,
                    format: 'F,Y',
                    startDay: 1,
                    submitFormat: 'Ymd'
                },
                {
                    xtype: 'fieldset',
                    x: 240,
                    y: 45,
                    height: 175,
                    style: 'background-color: #DCDCDC;',
                    width: 155,
                    title: 'Сальдо',
                    items: [
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            width: 119,
                            fieldLabel: 'Сальдо на початок',
                            labelAlign: 'top',
                            labelWidth: 55,
                            name: 'zadol',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            width: 119,
                            fieldLabel: 'Сальдо на конец',
                            labelAlign: 'top',
                            labelWidth: 55,
                            name: 'dolg',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                // in use
                                var me = this;

                                //STORE
                                var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                var stUser = Ext.data.StoreManager.get("StUser");
                                var values =stUser.getAt(0);
                                var params = {
                                    login:values.get('login'),
                                    password:values.get('password'),
                                    address_id:values.get('address_id'),
                                    what:'AppPodogrevIns'
                                };
                                //FORMA
                                var form = button.findParentByType('form').getForm();
                                var value = form.getValues();
                                var grNach = Ext.getCmp('grNachPodogrev');
                                var record = grNach.getSelectionModel().getSelection()[0];
                                var ind  = grNach.getView().getStore().indexOf(record);
                                //LOGIKA
                                Ext.Object.merge(value, params);

                                QueryAddress.updateRecords(value,function(results){

                                    StTekNachApp.load({
                                        params: {
                                            what:'PodogrevApp',
                                            address_id: values.get('address_id'),
                                            login:values.get('login'),
                                            password:values.get('password')
                                        },
                                        callback: function(records,operation,success){
                                            if(success){
                                                grNach.getView().getSelectionModel().select(ind);
                                            }else{
                                                form.reset();
                                            }
                                        },
                                        scope:this
                                    });
                                });

                            },
                            anchor: '100%',
                            formBind: true,
                            height: 30,
                            id: 'btnPodogrevAppIns',
                            margin: '10 0 0 0',
                            width: 90,
                            icon: 'resources/css/images/ico/yes22.png',
                            text: 'Записати'
                        }
                    ]
                },
                {
                    xtype: 'fieldset',
                    x: 400,
                    y: 5,
                    height: 215,
                    style: 'background-color: #DCDCDC;',
                    width: 660,
                    layout: 'absolute',
                    title: 'Начислено, грн',
                    items: [
                        {
                            xtype: 'numberfield',
                            width: 115,
                            fieldLabel: 'тариф',
                            labelWidth: 55,
                            name: 'tarif',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true,
                            decimalPrecision: 3
                        },
                        {
                            xtype: 'numberfield',
                            x: 0,
                            y: 90,
                            width: 115,
                            fieldLabel: 'Тар пер',
                            labelWidth: 55,
                            name: 'ptarif',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true,
                            decimalPrecision: 3
                        },
                        {
                            xtype: 'numberfield',
                            x: 0,
                            y: 30,
                            width: 115,
                            fieldLabel: 'человек',
                            labelWidth: 55,
                            name: 'people',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true,
                            decimalPrecision: 0
                        },
                        {
                            xtype: 'numberfield',
                            x: 0,
                            y: 60,
                            width: 115,
                            fieldLabel: 'Кубов',
                            labelWidth: 55,
                            name: 'kub',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true,
                            decimalPrecision: 0
                        },
                        {
                            xtype: 'numberfield',
                            x: 135,
                            y: 30,
                            width: 125,
                            fieldLabel: 'Норма',
                            labelWidth: 55,
                            name: 'norma',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            x: 465,
                            y: 5,
                            width: 155,
                            fieldLabel: 'Начислено',
                            labelWidth: 70,
                            name: 'nachisleno',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            x: 465,
                            y: 35,
                            width: 155,
                            fieldLabel: 'Оплачено',
                            labelWidth: 70,
                            name: 'oplacheno',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            x: 135,
                            y: 0,
                            width: 125,
                            fieldLabel: 'Гкал',
                            labelWidth: 55,
                            name: 'gkal',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true,
                            decimalPrecision: 3
                        },
                        {
                            xtype: 'numberfield',
                            x: 135,
                            y: 60,
                            width: 125,
                            fieldLabel: 'Гвода',
                            labelWidth: 55,
                            name: 'podogrev',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            x: 135,
                            y: 90,
                            width: 125,
                            fieldLabel: 'Перер',
                            labelWidth: 55,
                            name: 'perer',
                            value: 0,
                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'fieldset',
                            x: 285,
                            y: 0,
                            height: 115,
                            style: 'background-color: #f1eeee;',
                            width: 145,
                            title: 'Бюджет',
                            items: [
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 124,
                                    fieldLabel: 'Кубов',
                                    labelWidth: 55,
                                    name: 'gkub_lg',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 0
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 125,
                                    fieldLabel: 'Бюджет',
                                    labelWidth: 55,
                                    name: 'budjet',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    width: 125,
                                    fieldLabel: 'Перер',
                                    labelWidth: 55,
                                    name: 'pbudjet',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                }
                            ]
                        },
                        {
                            xtype: 'textfield',
                            x: 0,
                            y: 125,
                            width: 620,
                            fieldLabel: 'инфо перер',
                            name: 'info',
                            fieldStyle: 'background-color:#F0F8FF;'
                        },
                        {
                            xtype: 'textfield',
                            x: 0,
                            y: 155,
                            width: 620,
                            fieldLabel: 'инфо бюджет',
                            name: 'msq_lgota',
                            fieldStyle: 'background-color:#F0F8FF;'
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                var form = button.findParentByType('form').getForm();
                                var grNach = Ext.getCmp('grNachPodogrev');
                                var record = grNach.getSelectionModel().getSelection()[0];
                                var ind  = grNach.getView().getStore().indexOf(record);
                                grNach.getView().getSelectionModel().clearSelections();
                                grNach.getView().getSelectionModel().select(ind);
                            },
                            x: 520,
                            y: 80,
                            formBind: true,
                            height: 30,
                            id: 'btnaAppPodogrevReset',
                            width: 30,
                            icon: 'resources/css/images/ico/refresh.png',
                            scale: 'medium',
                            text: '',
                            tooltip: 'Восстановить'
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                //this.up('#winAddVodomer').close();
                                var form = button.findParentByType('form').getForm();
                                //form.reset();
                                var zadol = form.findField('zadol').getValue();
                                var tarif = form.findField('tarif').getValue();
                                var gkub = form.findField('kub').getValue();
                                var gkub_lg = form.findField('gkub_lg').getValue();
                                var people = form.findField('people').getValue();
                                var perer = form.findField('perer').getValue();
                                var budjet = form.findField('budjet').getValue();
                                var pbudjet = form.findField('pbudjet').getValue();
                                var oplacheno = form.findField('oplacheno').getValue();

                                var nachisleno =0;
                                var norma = 0;
                                var gvoda = 0;

                                if ((tarif===0)  &&  (gkub > 0 || people > 0)) {
                                    Ext.MessageBox.show({
                                        title: 'Проверка тарифа',
                                        msg: 'Введите тариф по услуге',
                                        buttons: Ext.MessageBox.OK,
                                        icon: Ext.MessageBox.INFO
                                    });
                                } else {
                                    if (gkub >0 ) {
                                        gvoda = gkub * tarif - budjet;
                                        norma = 0 ;
                                    } else if (people >0 ) {
                                        norma = people * tarif -budjet;
                                        gvoda = 0;
                                    } else {
                                        norma = 0;
                                        gvoda = 0;
                                    }
                                    nachisleno = gvoda + perer + norma  ;
                                    form.findField('podogrev').setValue(gvoda);
                                    form.findField('norma').setValue(norma);
                                    form.findField('nachisleno').setValue(nachisleno);
                                    form.findField('dolg').setValue(zadol + nachisleno - oplacheno);
                                }
                            },
                            x: 590,
                            y: 80,
                            formBind: true,
                            height: 30,
                            id: 'btnPodogrevAppPerer',
                            width: 30,
                            icon: 'resources/css/images/ico/schet.png',
                            scale: 'medium',
                            text: '',
                            tooltip: 'Просчитать'
                        }
                    ]
                }
            ]
        }
    ],

    onCheckboxfieldChange2121: function(field, newValue, oldValue, eOpts) {
        if(newValue){
            field.setBoxLabel("Так");
        }else{
            field.setBoxLabel("Ні");
        }
    },

    onCheckboxfieldChange9: function(field, newValue, oldValue, eOpts) {
        if(newValue){
            field.setBoxLabel("Так");
        }else{
            field.setBoxLabel("Ні");
        }
    },

    onCheckboxfieldChange8: function(field, newValue, oldValue, eOpts) {
        if(newValue){
            field.setBoxLabel("Так");
        }else{
            field.setBoxLabel("Ні");
        }
    },

    onCheckboxfieldChange612: function(field, newValue, oldValue, eOpts) {
        if(newValue){
            field.setBoxLabel("Так");
        }else{
            field.setBoxLabel("Ні");
        }
    },

    onCheckboxfieldChange212: function(field, newValue, oldValue, eOpts) {
        if(newValue){
            field.setBoxLabel("Так");
        }else{
            field.setBoxLabel("Ні");
        }
    },

    onCheckboxfieldChange2111: function(field, newValue, oldValue, eOpts) {
        if(newValue){
            field.setBoxLabel("Так");
        }else{
            field.setBoxLabel("Ні");
        }
    }

});