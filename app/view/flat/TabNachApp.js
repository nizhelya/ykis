/*
 * File: app/view/flat/TabNachApp.js
 * Date: Fri Sep 18 2020 10:54:25 GMT+0300 (EEST)
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Ykis.view.flat.TabNachApp', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.tabnachapp',

    requires: [
        'Ykis.view.flat.TabNachAppViewModel',
        'Ext.form.Panel',
        'Ext.form.field.Hidden',
        'Ext.form.FieldSet',
        'Ext.form.field.Checkbox',
        'Ext.form.field.Number',
        'Ext.form.field.Display',
        'Ext.tab.Panel',
        'Ext.grid.Panel',
        'Ext.view.Table',
        'Ext.grid.column.Number',
        'Ext.grid.column.Date',
        'Ext.panel.Tool',
        'Ext.grid.column.Action',
        'Ext.grid.feature.Summary',
        'Ext.tab.Tab',
        'Ext.form.FieldContainer',
        'Ext.form.field.Date'
    ],

    viewModel: {
        type: 'tabnachapp'
    },
    height: 831,
    id: 'tabNachApp',
    scrollable: true,
    width: 1257,
    title: 'Нарахування',
    defaultListenerScope: true,

    items: [
        {
            xtype: 'form',
            height: 218,
            id: 'fmInfoNachApp',
            style: 'background-color: #e0e0e0;',
            width: 1096,
            layout: 'absolute',
            title: '',
            items: [
                {
                    xtype: 'hiddenfield',
                    fieldLabel: '',
                    labelSeparator: ' ',
                    name: 'address_id'
                },
                {
                    xtype: 'hiddenfield',
                    labelSeparator: ' ',
                    labelStyle: '',
                    name: 'address'
                },
                {
                    xtype: 'hiddenfield',
                    fieldLabel: '',
                    labelSeparator: ' ',
                    labelStyle: '',
                    name: 'nanim'
                },
                {
                    xtype: 'fieldset',
                    x: 510,
                    y: 90,
                    height: 90,
                    style: 'background-color: #DCDCDC;',
                    width: 460,
                    layout: 'absolute',
                    title: 'Користується послугами',
                    items: [
                        {
                            xtype: 'checkboxfield',
                            x: 20,
                            y: 20,
                            fieldLabel: 'вивіз сміття',
                            labelWidth: 110,
                            name: 'tbo',
                            boxLabel: 'Ні',
                            inputValue: 'да',
                            uncheckedValue: 'нет',
                            listeners: {
                                change: 'onCheckboxfieldChange51'
                            }
                        },
                        {
                            xtype: 'button',
                            handler: function(button, event) {
                                //LOGIN & PASSWORD
                                var stUser = Ext.data.StoreManager.get("StUser");
                                var pvalues =stUser.getAt(0);
                                var login = pvalues.get('login');
                                var password = pvalues.get('password');

                                var form = Ext.getCmp('fmInfoNachApp');

                                var stAppartment = Ext.data.StoreManager.get("StAppartment");//QueryAddress.getResults <Appartment>

                                var values=form.getValues();

                                var address_id = values.address_id;
                                var params = {
                                    login:login,
                                    password:password,
                                    what:'AppartmentUpdateTbo',
                                    what_id:address_id
                                };
                                // console.log(values.address_id);
                                Ext.Object.merge(values, params);

                                // СОХРАНИТЬ ИЗМЕНЕНИЯ

                                QueryAddress.updateRecords(values,function(result){

                                    if (result.success){

                                        Ext.MessageBox.show({
                                            title: 'Оновити дані по квартирі!',
                                            msg: result.msg,
                                            buttons: Ext.MessageBox.OK,
                                            icon: Ext.MessageBox.INFO,
                                            buttonText:{
                                                ok: "Закрыть!"
                                            }
                                        });

                                        stAppartment.load({
                                            params: {
                                                what_id:address_id,
                                                address_id: address_id,
                                                what:'Appartment',
                                                login:login,
                                                password:password
                                            },
                                            callback: function(records,operation,success){
                                                var rec = records[0];

                                                if(success){

                                                    form.getForm().loadRecord(rec);

                                                }
                                            },
                                            scope:this
                                        });



                                    }else{
                                        Ext.MessageBox.show({
                                            title: 'Внесение изменений',
                                            msg: 'Произошла ошибка',
                                            buttons: Ext.MessageBox.OK,
                                            buttonText:{
                                                ok: "Закрыть!"
                                            },
                                            icon: Ext.MessageBox.WARNING
                                        });
                                    }
                                });

                            },
                            x: 210,
                            y: 20,
                            formBind: true,
                            height: 25,
                            id: 'btnBti',
                            width: 180,
                            icon: 'resources/css/images/ico/xsldbg_refresh.png',
                            text: 'Оновить  дані'
                        }
                    ]
                },
                {
                    xtype: 'fieldset',
                    x: 10,
                    y: 15,
                    height: 65,
                    style: 'background-color: #DCDCDC;',
                    width: 965,
                    layout: 'absolute',
                    title: 'Площа квартири (м2)',
                    items: [
                        {
                            xtype: 'numberfield',
                            x: 5,
                            y: 5,
                            width: 130,
                            fieldLabel: 'Корисна',
                            labelSeparator: ' ',
                            labelWidth: 65,
                            name: 'area_full',
                            editable: false,
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            x: 170,
                            y: 5,
                            width: 125,
                            fieldLabel: 'Житлова',
                            labelSeparator: ' ',
                            labelWidth: 60,
                            name: 'area_life',
                            editable: false,
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            x: 335,
                            y: 5,
                            width: 130,
                            fieldLabel: 'Додаткова',
                            labelSeparator: ' ',
                            labelWidth: 70,
                            name: 'area_dop',
                            editable: false,
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            x: 500,
                            y: 5,
                            width: 125,
                            fieldLabel: 'Балкон',
                            labelSeparator: ' ',
                            labelWidth: 50,
                            name: 'area_balk',
                            editable: false,
                            hideTrigger: true,
                            autoStripChars: true
                        },
                        {
                            xtype: 'numberfield',
                            x: 660,
                            y: 5,
                            width: 120,
                            fieldLabel: 'Кімнат',
                            labelSeparator: ' ',
                            labelWidth: 55,
                            name: 'room',
                            editable: false,
                            hideTrigger: true,
                            allowDecimals: false,
                            autoStripChars: true,
                            decimalPrecision: 0
                        },
                        {
                            xtype: 'checkboxfield',
                            x: 820,
                            y: 5,
                            fieldLabel: 'Ліфт',
                            labelWidth: 40,
                            name: 'lift',
                            boxLabel: 'Ні',
                            inputValue: 'да',
                            uncheckedValue: 'нет'
                        }
                    ]
                },
                {
                    xtype: 'fieldset',
                    x: 10,
                    y: 85,
                    height: 95,
                    style: 'background-color: #DCDCDC;',
                    width: 485,
                    layout: 'absolute',
                    title: 'Склад (людина)',
                    items: [
                        {
                            xtype: 'numberfield',
                            x: 5,
                            y: 5,
                            width: 135,
                            fieldLabel: 'Прописано',
                            labelSeparator: ' ',
                            labelWidth: 70,
                            name: 'tenant',
                            editable: false,
                            hideTrigger: true,
                            allowDecimals: false,
                            decimalPrecision: 0
                        },
                        {
                            xtype: 'numberfield',
                            x: 290,
                            y: 5,
                            width: 135,
                            fieldLabel: 'Відсутні',
                            labelSeparator: ' ',
                            labelWidth: 70,
                            name: 'absent',
                            editable: false,
                            hideTrigger: true,
                            allowDecimals: false,
                            decimalPrecision: 0,
                            minValue: 0
                        },
                        {
                            xtype: 'numberfield',
                            x: 155,
                            y: 5,
                            width: 120,
                            fieldLabel: 'Піднаймач',
                            labelSeparator: ' ',
                            labelWidth: 70,
                            name: 'podnan',
                            editable: false,
                            hideTrigger: true,
                            allowDecimals: false,
                            decimalPrecision: 0,
                            minValue: 0
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            x: 515,
                            y: 315,
                            fieldLabel: 'Льготник',
                            labelSeparator: ' ',
                            labelWidth: 70,
                            name: 'lgotchik',
                            allowDecimals: false,
                            decimalPrecision: 0,
                            minValue: 0
                        },
                        {
                            xtype: 'checkboxfield',
                            x: 5,
                            y: 35,
                            fieldLabel: 'Субсидія',
                            labelAlign: 'right',
                            labelWidth: 70,
                            name: 'subsidia',
                            boxLabel: 'Ні',
                            inputValue: 'да',
                            uncheckedValue: 'нет'
                        },
                        {
                            xtype: 'displayfield',
                            renderer: function(value, displayField) {
                                var form = displayField.findParentByType('form');
                                var lg = form.getForm().findField('lgotchik').getValue();
                                //console.log(lg);
                                var retValue = '';
                                if(lg===0){
                                    retValue ='<span><img class="icon" src="resources/css/images/ico/no.png"/></span>';
                                } else {
                                    retValue ='<span><img class="icon" src="resources/css/images/ico/yes.png"/></span>';
                                }
                                return retValue;
                            },
                            x: 150,
                            y: 35,
                            fieldLabel: 'Пільга',
                            labelSeparator: ' ',
                            name: 'lgota'
                        }
                    ]
                }
            ]
        },
        {
            xtype: 'tabpanel',
            height: 599,
            id: 'tabPnNachApp',
            width: 1101,
            items: [
                {
                    xtype: 'form',
                    id: 'tabFmAppTbo',
                    layout: 'absolute',
                    title: 'ТПВ',
                    items: [
                        {
                            xtype: 'gridpanel',
                            x: 0,
                            y: 0,
                            height: 500,
                            id: 'grNachTbo',
                            scrollable: true,
                            width: 220,
                            title: 'Період нарахування',
                            store: 'StTekNachApp',
                            viewConfig: {
                                emptyText: 'нет начислений'
                            },
                            columns: [
                                {
                                    xtype: 'numbercolumn',
                                    hidden: true,
                                    dataIndex: 'address_id',
                                    text: 'Address_id'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 50,
                                    dataIndex: 'god',
                                    menuDisabled: true,
                                    text: 'год',
                                    format: '0'
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 80,
                                    dataIndex: 'data',
                                    menuDisabled: true,
                                    text: 'місяць',
                                    format: 'F'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    hidden: true,
                                    width: 70,
                                    align: 'right',
                                    dataIndex: 'zadol',
                                    menuDisabled: true,
                                    text: 'задол'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    width: 49,
                                    dataIndex: 'mec',
                                    menuDisabled: true,
                                    text: 'мес'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    width: 62,
                                    dataIndex: 'period',
                                    menuDisabled: true,
                                    text: 'Период'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    hidden: true,
                                    width: 70,
                                    align: 'right',
                                    dataIndex: 'nachisleno',
                                    menuDisabled: true,
                                    text: 'начисл'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    hidden: true,
                                    width: 70,
                                    align: 'right',
                                    dataIndex: 'oplacheno',
                                    menuDisabled: true,
                                    text: 'оплач'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (value < 0) {
                                            metaData.style = 'color:red';
                                        }
                                        return value;

                                    },
                                    width: 75,
                                    align: 'right',
                                    dataIndex: 'dolg',
                                    menuDisabled: true,
                                    text: 'борг'
                                }
                            ],
                            tools: [
                                {
                                    xtype: 'tool',
                                    callback: function(owner, tool, event) {
                                        //STORE
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                        //LOGIN & PASSWORD
                                        var values =stUser.getAt(0);
                                        // FORM
                                        var form = tool.findParentByType('form');
                                        // DATA

                                        //LOGIKA
                                        StTekNachApp.load({
                                            params: {
                                                what:'TboAppAll',
                                                address_id: values.get('address_id'),
                                                login:values.get('login'),
                                                password:values.get('password')
                                            },
                                            callback: function(records,operation,success){
                                                if(success){
                                                    form.getForm().reset();
                                                    form.getForm().loadRecord(records[0]);
                                                }else{
                                                    form.getForm().reset();
                                                }
                                            },
                                            scope:this
                                        });
                                    },
                                    tooltip: 'выбрать все записи',
                                    type: 'plus'
                                }
                            ]
                        },
                        {
                            xtype: 'gridpanel',
                            x: 235,
                            y: 250,
                            id: 'grLgotaNachTbo',
                            scrollable: true,
                            width: 840,
                            title: 'нарахування на бюджет',
                            emptyText: 'нет записей',
                            store: 'StLgotaNachVoda',
                            viewConfig: {
                                emptyText: 'Начислений по льготе нет'
                            },
                            columns: [
                                {
                                    xtype: 'actioncolumn',
                                    maxWidth: 25,
                                    minWidth: 25,
                                    width: 30,
                                    menuDisabled: true,
                                    items: [
                                        {
                                            getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                                var pr = r.get('pr');
                                                if (pr === 0 ) {
                                                    metaData = 'x-grid-center-icon';
                                                } else if (pr === 1   ){
                                                    metaData = 'x-hide-display';
                                                }
                                                return metaData;
                                            },
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                var dt = new Date();
                                                var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                                var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var values =stUser.getAt(0);
                                                var value = record;
                                                var rbgTypeNachVoda = winAddLgotaPerer.down('#rbgTypeNachVoda');
                                                rbgTypeNachVoda.hide();
                                                view.getSelectionModel().select(rowIndex);
                                                values.set({'vibor':'addLgotaTboPerer'});
                                                stUser.sync();
                                                form.loadRecord(value);
                                                form.getForm().findField('summa').setValue(value.get('budjet'));
                                                form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                                form.getForm().findField('m2').hide();
                                                form.getForm().findField('gkm2').hide();
                                                form.getForm().findField('gkal').hide();

                                                winAddLgotaPerer.show();
                                            },
                                            icon: 'resources/css/images/ico/add.png',
                                            tooltip: 'Добавить перерасчет по льготе'
                                        },
                                        {
                                            getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                                var tekd = r.get('data');
                                                var dt = new Date();
                                                var check_date=Ext.Date.format(dt, 'Y-m');
                                                var tek_date=Ext.Date.format(tekd, 'Y-m');
                                                var pr = r.get('pr');

                                                if (pr === 0 ) {
                                                    metaData = 'x-hide-display';
                                                } else if ((pr === 1) && (check_date === tek_date) ){
                                                    metaData = 'x-grid-center-icon';
                                                }
                                                return metaData;
                                            },
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                // in use
                                                var me = this;
                                                //STORE

                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");

                                                var form = Ext.getCmp('tabFmAppTbo');

                                                //LOGIN & PASSWORD
                                                var values =stUser.getAt(0);
                                                var params = {
                                                    login:values.get('login'),
                                                    password:values.get('password'),
                                                    address_id:values.get('address_id'),
                                                    address:values.get('address'),
                                                    what:"delLgotaTboPerer"
                                                };

                                                //GRID
                                                var store = view.getStore();
                                                var value = store.getAt(rowIndex).data;
                                                // FORM

                                                //GRID
                                                var grNach = Ext.getCmp('grNachTbo');
                                                var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];
                                                var ind  = grNach.getView().getStore().indexOf(valueNachisl);

                                                //LOGIKA


                                                Ext.Object.merge(value, params);
                                                //console.log(value);

                                                Ext.MessageBox.confirm({
                                                    title: 'Удаление записи из базы льгот',
                                                    msg: 'Вы удаляете перерасчет по тбо на бюджет <br> Подтвердите или отмените свои действия.',
                                                    buttons: Ext.MessageBox.OKCANCEL,
                                                    icon: Ext.MessageBox.ERROR,
                                                    buttonText:{
                                                        ok:'подтвеждаю',
                                                        cancel:'отмена'
                                                    },
                                                    fn:function(btn,newValue){
                                                        if(btn=='ok'){
                                                            QueryAddress.updateRecords(value,function(results){
                                                                if(results.success==="1"){
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление перерасчета по тбо на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.INFO
                                                                    });
                                                                    StTekNachApp.load({
                                                                        params: {
                                                                            what:'TboApp',
                                                                            address_id: values.get('address_id'),
                                                                            login:values.get('login'),
                                                                            password:values.get('password')
                                                                        },
                                                                        callback: function(records,operation,success){
                                                                            if(success){
                                                                                grNach.getView().getSelectionModel().select(ind);
                                                                            }else{
                                                                                form.getForm().reset();
                                                                            }
                                                                        },
                                                                        scope:this
                                                                    });

                                                                } else {
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление перерасчета по тбо на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.ERROR
                                                                    });
                                                                }
                                                            });
                                                        }
                                                    }
                                                });
                                            },
                                            icon: 'resources/css/images/ico/delete.png',
                                            tooltip: 'Удалить перерасчет по льготе'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 75,
                                    dataIndex: 'sdata',
                                    menuDisabled: true,
                                    text: 'дата с',
                                    format: 'd-m-y'
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 75,
                                    dataIndex: 'fdata',
                                    menuDisabled: true,
                                    text: 'дата по',
                                    format: 'd-m-y'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 120,
                                    dataIndex: 'fio',
                                    menuDisabled: true,
                                    text: 'Ф.И.О'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 164,
                                    dataIndex: 'lgota',
                                    menuDisabled: true,
                                    text: 'Льгота',
                                    tooltip: 'name'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 35,
                                    align: 'center',
                                    dataIndex: 'percent',
                                    menuDisabled: true,
                                    text: '%',
                                    format: '0'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 60,
                                    align: 'right',
                                    dataIndex: 'tarif',
                                    menuDisabled: true,
                                    text: 'тариф',
                                    format: '0.000'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 44,
                                    align: 'center',
                                    dataIndex: 'people',
                                    menuDisabled: true,
                                    text: 'чел',
                                    format: '0'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 49,
                                    align: 'right',
                                    dataIndex: 'qty',
                                    menuDisabled: true,
                                    text: 'льг'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    summaryType: 'sum',
                                    width: 74,
                                    align: 'right',
                                    dataIndex: 'budjet',
                                    menuDisabled: true,
                                    text: 'бюджет'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 40,
                                    dataIndex: 'pr',
                                    menuDisabled: true,
                                    text: 'пр',
                                    format: '0'
                                },
                                {
                                    xtype: 'actioncolumn',
                                    width: 30,
                                    menuDisabled: true,
                                    items: [
                                        {
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                var dt = new Date();
                                                var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                                var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var values =stUser.getAt(0);
                                                var value = record;

                                                view.getSelectionModel().select(rowIndex);
                                                values.set({'vibor':'editLgotaTbo'});
                                                stUser.sync();

                                                form.down('#btAddLgotaPerer').setText('Обновить запись');
                                                form.loadRecord(value);
                                                form.getForm().findField('summa').setValue(value.get('budjet'));
                                                form.getForm().findField('m2').hide();
                                                form.getForm().findField('gkm2').hide();
                                                form.getForm().findField('gkal').hide();

                                                winAddLgotaPerer.setTitle('Редактирование записи на бюджет');

                                                winAddLgotaPerer.show();
                                            },
                                            icon: 'resources/css/images/ico/edit.png',
                                            tooltip: 'Редактировать запись'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'actioncolumn',
                                    width: 30,
                                    menuDisabled: true,
                                    items: [
                                        {
                                            getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                                var tekd = r.get('data');
                                                var dt = new Date();
                                                var check_date=Ext.Date.format(dt, 'Y-m');
                                                var tek_date=Ext.Date.format(tekd, 'Y-m');
                                                var pr = r.get('pr');
                                                if (pr === 1 ) {
                                                    metaData = 'x-hide-display';
                                                } else if ( (pr === 0)   ){
                                                    metaData = 'x-grid-center-icon';
                                                }
                                                return metaData;
                                            },
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                // in use
                                                var me = this;
                                                //STORE

                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");

                                                var form = Ext.getCmp('tabFmAppTbo');

                                                //LOGIN & PASSWORD
                                                var values =stUser.getAt(0);
                                                var params = {
                                                    login:values.get('login'),
                                                    password:values.get('password'),
                                                    address_id:values.get('address_id'),
                                                    address:values.get('address'),
                                                    what:"delLgotaTbo"
                                                };

                                                //GRID
                                                var store = view.getStore();
                                                var value = store.getAt(rowIndex).data;
                                                // FORM

                                                //GRID
                                                var grNach = Ext.getCmp('grNachTbo');
                                                var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];
                                                var ind  = grNach.getView().getStore().indexOf(valueNachisl);

                                                //LOGIKA


                                                Ext.Object.merge(value, params);
                                                //console.log(value);

                                                Ext.MessageBox.confirm({
                                                    title: 'Удаление записи из базы льгот',
                                                    msg: 'Вы удаляете начисление на бюджет <br> Подтвердите или отмените свои действия.',
                                                    buttons: Ext.MessageBox.OKCANCEL,
                                                    icon: Ext.MessageBox.ERROR,
                                                    buttonText:{
                                                        ok:'подтвеждаю',
                                                        cancel:'отмена'
                                                    },
                                                    fn:function(btn,newValue){
                                                        if(btn=='ok'){
                                                            QueryAddress.updateRecords(value,function(results){
                                                                if(results.success==="1"){
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление начисления по воде на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.INFO
                                                                    });
                                                                    StTekNachApp.load({
                                                                        params: {
                                                                            what:'TboApp',
                                                                            address_id: values.get('address_id'),
                                                                            login:values.get('login'),
                                                                            password:values.get('password')
                                                                        },
                                                                        callback: function(records,operation,success){
                                                                            if(success){
                                                                                grNach.getView().getSelectionModel().select(ind);
                                                                            }else{
                                                                                form.getForm().reset();
                                                                            }
                                                                        },
                                                                        scope:this
                                                                    });

                                                                } else {
                                                                    Ext.MessageBox.show({
                                                                        title: 'Удаление начисления по воде на бюджет',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.ERROR
                                                                    });
                                                                }
                                                            });
                                                        }
                                                    }
                                                });
                                            },
                                            icon: 'resources/css/images/ico/no.png',
                                            tooltip: 'Удалить  запись '
                                        }
                                    ]
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'info',
                                    menuDisabled: true,
                                    text: 'инфо',
                                    tooltip: 'name'
                                }
                            ],
                            features: [
                                {
                                    ftype: 'summary'
                                }
                            ],
                            tools: [
                                {
                                    xtype: 'tool',
                                    callback: function(owner, tool, event) {
                                        var gridLgotnik = Ext.getCmp('grLgotnikNachApp');
                                        var gridNachisl = Ext.getCmp('grNachTbo');
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);
                                        var value  = gridLgotnik.getView().getSelectionModel().getSelection()[0];
                                        var valueNachisl  = gridNachisl.getView().getSelectionModel().getSelection()[0];
                                        var ind  = gridNachisl.getView().getStore().indexOf(valueNachisl);

                                        //console.log(valueNachisl.index);
                                        if (value !==undefined && valueNachisl !==undefined ){
                                            var winAddLgotaPerer = Ext.ClassManager.instantiateByAlias('widget.winaddlgotaperer');
                                            var form = winAddLgotaPerer.down('#fmAddLgotaPerer');
                                            var rbgTypeNachVoda = winAddLgotaPerer.down('#rbgTypeNachVoda');
                                            var dt = new Date();
                                            var dt_nach = new Date(valueNachisl.get('data'));
                                            var check_date = Ext.Date.format(dt, 'Y-m');
                                            var date_check = Ext.Date.format(dt_nach, 'Y-m');
                                            form.getForm().findField('m2').hide();
                                            form.getForm().findField('gkm2').hide();
                                            form.getForm().findField('gkal').hide();

                                            rbgTypeNachVoda.hide();
                                            winAddLgotaPerer.setTitle('Добавление записи на бюджет');

                                            var pr = form.getForm().findField('checkType').getValue();
                                            //console.log(pr);

                                            if (pr === true ) {
                                                values.set({'vibor':'addLgotaTbo'});
                                                stUser.sync();
                                                form.loadRecord(value);
                                                form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                                form.getForm().findField('sdata').setValue(Ext.Date.getFirstDateOfMonth(dt) );
                                                form.getForm().findField('fdata').setValue(Ext.Date.getLastDateOfMonth(dt) );
                                                form.getForm().findField('tarif').setValue(valueNachisl.get('tarif'));
                                                form.getForm().findField('qty').setValue(valueNachisl.get('people_lg'));
                                                form.getForm().findField('summa').setValue(valueNachisl.get('budjet'));
                                                form.getForm().findField('checkType').setValue("0");
                                                form.getForm().findField('info').setValue('Добавление записи начисления на бюджет в ручном режиме');
                                                form.getForm().findField('ind').setValue(ind);
                                                winAddLgotaPerer.show();

                                            } else {

                                                values.set({'vibor':'addLgotaTboPerer'});
                                                stUser.sync();
                                                form.loadRecord(value);
                                                form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
                                                form.getForm().findField('sdata').setValue(Ext.Date.getFirstDateOfMonth(dt_nach) );
                                                form.getForm().findField('fdata').setValue(Ext.Date.getLastDateOfMonth(dt_nach) );
                                                form.getForm().findField('tarif').setValue(valueNachisl.get('tarif'));
                                                form.getForm().findField('qty').setValue(valueNachisl.get('people_lg'));
                                                form.getForm().findField('summa').setValue(valueNachisl.get('budjet'));
                                                form.getForm().findField('checkType').setValue("1");
                                                form.getForm().findField('info').setValue('Добавление записи перерасчета на бюджет в ручном режиме');
                                                form.getForm().findField('ind').setValue(ind);
                                                winAddLgotaPerer.show();

                                            }


                                        } else{
                                            Ext.MessageBox.show({
                                                title: 'Добавлениезаписи начисления  на бюджет',
                                                msg: 'Не выбран льготчик',
                                                buttons: Ext.MessageBox.OK,
                                                icon: Ext.MessageBox.INFO
                                            });
                                        }
                                    },
                                    tooltip: 'добавить начисление по льготнику',
                                    type: 'plus'
                                }
                            ]
                        },
                        {
                            xtype: 'fieldcontainer',
                            x: 390,
                            y: 10,
                            height: 235,
                            style: 'background-color: #DCDCDC;',
                            width: 675,
                            layout: 'absolute',
                            fieldLabel: 'Начислено ,грн',
                            labelAlign: 'top',
                            items: [
                                {
                                    xtype: 'fieldset',
                                    x: 500,
                                    y: 0,
                                    height: 120,
                                    style: 'background-color: #f1eeee;',
                                    width: 140,
                                    title: 'Бюджет',
                                    items: [
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            fieldLabel: 'Льготн',
                                            labelWidth: 45,
                                            name: 'people_lg',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            fieldLabel: 'Льгота',
                                            labelWidth: 45,
                                            name: 'budjet',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        },
                                        {
                                            xtype: 'numberfield',
                                            anchor: '100%',
                                            fieldLabel: 'Перер',
                                            labelWidth: 45,
                                            name: 'pbudjet',
                                            value: 0,
                                            fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                            hideTrigger: true,
                                            autoStripChars: true
                                        }
                                    ]
                                },
                                {
                                    xtype: 'button',
                                    x: 430,
                                    y: 85,
                                    id: 'printRaspechatakaTbo',
                                    icon: 'resources/css/images/ico/printer24.png',
                                    scale: 'medium',
                                    text: '',
                                    tooltip: 'Печать расчетного листка'
                                },
                                {
                                    xtype: 'textfield',
                                    x: 10,
                                    y: 130,
                                    width: 635,
                                    fieldLabel: 'инфо перер',
                                    name: 'info'
                                },
                                {
                                    xtype: 'textfield',
                                    x: 10,
                                    y: 165,
                                    width: 635,
                                    fieldLabel: 'инфо бюджет',
                                    name: 'msq_lgota'
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 10,
                                    y: 5,
                                    width: 125,
                                    fieldLabel: 'тариф',
                                    labelWidth: 55,
                                    name: 'tarif',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 3
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 10,
                                    y: 85,
                                    width: 130,
                                    fieldLabel: 'Тар пер',
                                    labelWidth: 60,
                                    name: 'ptarif',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true,
                                    decimalPrecision: 3
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 170,
                                    y: 5,
                                    width: 115,
                                    fieldLabel: 'тбо',
                                    labelWidth: 40,
                                    name: 'tbo',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 145,
                                    y: 85,
                                    width: 140,
                                    fieldLabel: 'Перерасч',
                                    labelWidth: 70,
                                    name: 'perer',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 325,
                                    y: 5,
                                    width: 140,
                                    fieldLabel: 'Начислено',
                                    labelWidth: 70,
                                    name: 'nachisleno',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 325,
                                    y: 40,
                                    width: 140,
                                    fieldLabel: 'Оплачено',
                                    labelWidth: 70,
                                    name: 'oplacheno',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 10,
                                    y: 45,
                                    width: 125,
                                    fieldLabel: 'Человек',
                                    labelWidth: 55,
                                    name: 'people',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        //this.up('#winAddVodomer').close();
                                        var form = button.findParentByType('form').getForm();
                                        //form.reset();
                                        var zadol = form.findField('zadol').getValue();
                                        var tarif = form.findField('tarif').getValue();
                                        var people = form.findField('people').getValue();
                                        var perer = form.findField('perer').getValue();
                                        var budjet = form.findField('budjet').getValue();
                                        var pbudjet = form.findField('pbudjet').getValue();
                                        var people_lg = form.findField('people_lg').getValue();
                                        var oplacheno = form.findField('oplacheno').getValue();

                                        var nachisleno =0;
                                        var tbo = 0;

                                        if ((tarif===0)  &&  people > 0 ) {

                                            Ext.MessageBox.show({
                                                title: 'Проверка тарифа',
                                                msg: 'Введите тариф по услуге',
                                                buttons: Ext.MessageBox.OK,
                                                icon: Ext.MessageBox.INFO
                                            });
                                        } else {
                                            tbo = people * tarif - budjet;
                                            nachisleno =tbo +  perer;
                                            form.findField('tbo').setValue(tbo);
                                            form.findField('nachisleno').setValue(nachisleno);
                                            form.findField('dolg').setValue(zadol + nachisleno - oplacheno);

                                        }
                                    },
                                    x: 375,
                                    y: 85,
                                    formBind: true,
                                    id: 'btnTboAppPerer',
                                    width: 30,
                                    icon: 'resources/css/images/ico/schet.png',
                                    scale: 'medium',
                                    text: '',
                                    tooltip: 'Просчитать'
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        var form = button.findParentByType('form').getForm();
                                        var grNach = Ext.getCmp('grNachTbo');
                                        var record = grNach.getSelectionModel().getSelection()[0];
                                        var ind  = grNach.getView().getStore().indexOf(record);
                                        grNach.getView().getSelectionModel().clearSelections();
                                        grNach.getView().getSelectionModel().select(ind);
                                    },
                                    x: 325,
                                    y: 85,
                                    formBind: true,
                                    id: 'btnTboAppReset',
                                    width: 30,
                                    icon: 'resources/css/images/ico/refresh.png',
                                    scale: 'medium',
                                    text: '',
                                    tooltip: 'Восстановить'
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            x: 230,
                            y: 65,
                            height: 150,
                            style: 'background-color: #DCDCDC;',
                            width: 145,
                            title: '',
                            items: [
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    fieldLabel: 'Сальдо на початок',
                                    labelAlign: 'top',
                                    name: 'zadol',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    fieldLabel: 'Сальдо на конец',
                                    labelAlign: 'top',
                                    name: 'dolg',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        // in use
                                        var me = this;

                                        //STORE
                                        var StTekNachApp = Ext.data.StoreManager.get("StTekNachApp");
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);
                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            address_id:values.get('address_id'),
                                            what:'AppTboIns'
                                        };
                                        //FORMA
                                        var form = button.findParentByType('form').getForm();
                                        var value = form.getValues();
                                        var grNach = Ext.getCmp('grNachTbo');
                                        var record = grNach.getSelectionModel().getSelection()[0];
                                        var ind  = grNach.getView().getStore().indexOf(record);

                                        //LOGIKA
                                        Ext.Object.merge(value, params);

                                        QueryAddress.updateRecords(value,function(results){

                                            StTekNachApp.load({
                                                params: {
                                                    what:'TboApp',
                                                    address_id: values.get('address_id'),
                                                    login:values.get('login'),
                                                    password:values.get('password')
                                                },
                                                callback: function(records,operation,success){
                                                    if(success){
                                                        grNach.getView().getSelectionModel().select(ind);

                                                    }else{
                                                        form.reset();
                                                    }
                                                },
                                                scope:this
                                            });
                                        });

                                    },
                                    anchor: '100%',
                                    formBind: true,
                                    id: 'btnTboAppIns',
                                    width: 100,
                                    icon: 'resources/css/images/ico/yes22.png',
                                    text: 'Записати'
                                }
                            ]
                        },
                        {
                            xtype: 'datefield',
                            x: 230,
                            y: 10,
                            border: '0px',
                            margin: '10 0 10 0',
                            width: 150,
                            fieldLabel: 'Период начислен',
                            hideLabel: true,
                            labelAlign: 'top',
                            labelWidth: 50,
                            name: 'data',
                            fieldStyle: 'color: #1791e6; text-shadow: -1px -1px white, 1px 1px #333;font-size:14pt;text-align:center',
                            hideTrigger: true,
                            format: 'F,Y',
                            startDay: 1,
                            submitFormat: 'Ymd'
                        }
                    ]
                }
            ]
        }
    ],

    onCheckboxfieldChange51: function(field, newValue, oldValue, eOpts) {
        if(newValue){
            field.setBoxLabel("Так");
        }else{
            field.setBoxLabel("Ні");
        }
    }

});