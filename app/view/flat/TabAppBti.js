/*
 * File: app/view/flat/TabAppBti.js
 * Date: Fri Sep 18 2020 10:54:25 GMT+0300 (EEST)
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Ykis.view.flat.TabAppBti', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.tabappbti',

    requires: [
        'Ykis.view.flat.TabAppBtiViewModel',
        'Ext.grid.Panel',
        'Ext.view.Table',
        'Ext.grid.column.Action',
        'Ext.grid.column.Number',
        'Ext.panel.Tool',
        'Ext.grid.column.Date',
        'Ext.form.Panel',
        'Ext.form.FieldSet',
        'Ext.form.field.Number',
        'Ext.button.Button',
        'Ext.form.field.Checkbox',
        'Ext.form.field.TextArea',
        'Ext.form.field.Date',
        'Ext.form.field.Display',
        'Ext.form.field.Hidden'
    ],

    viewModel: {
        type: 'tabappbti'
    },
    height: 805,
    id: 'tabAppBti',
    scrollable: true,
    width: 1096,
    title: 'БТІ',
    defaultListenerScope: true,

    items: [
        {
            xtype: 'panel',
            scrollable: true,
            width: 1076,
            layout: 'anchor',
            title: '',
            items: [
                {
                    xtype: 'gridpanel',
                    id: 'grLgotchikBti',
                    margin: '5 5 5 5',
                    scrollable: true,
                    collapseFirst: false,
                    collapsed: true,
                    collapsible: true,
                    title: 'Пільговики',
                    titleAlign: 'center',
                    titleCollapse: true,
                    emptyText: 'Льготников нет',
                    store: 'StLgotnik',
                    viewConfig: {
                        emptyText: 'Льготников нет'
                    },
                    columns: [
                        {
                            xtype: 'actioncolumn',
                            width: 40,
                            menuDisabled: true,
                            items: [
                                {
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        var dt = new Date();
                                        var winLgotnik = Ext.ClassManager.instantiateByAlias('widget.winlgotnik');
                                        var form = winLgotnik.down('#fmLgotnik');
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var StLgota = Ext.data.StoreManager.get("StLgota");

                                        var values =stUser.getAt(0);
                                        StLgota.proxy.setExtraParam('login', values.get('login'));
                                        StLgota.proxy.setExtraParam('password',values.get('password'));
                                        StLgota.load();

                                        var value = record;
                                        //console.log(value);
                                        view.getSelectionModel().select(rowIndex);
                                        values.set({'vibor':'editLgotnik'});
                                        stUser.sync();
                                        form.loadRecord(value);
                                        form.down('#winBtnAddLgotnik').setText('Обновить данные по льготнику');
                                        winLgotnik.setTitle('Редактирование данных по льготнику');
                                        winLgotnik.show();
                                    },
                                    icon: 'resources/css/images/ico/edit.png'
                                }
                            ]
                        },
                        {
                            xtype: 'numbercolumn',
                            hidden: true,
                            dataIndex: 'lgotnik_id',
                            text: 'lgotnik_id',
                            format: '0'
                        },
                        {
                            xtype: 'numbercolumn',
                            hidden: true,
                            dataIndex: 'address_id',
                            text: 'Address_id'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                return Ext.String.format('<div> <b>{0}</b><br><span class="author">{1} </span></div>',
                                value,
                                record.get('passport') || "");
                            },
                            width: 125,
                            dataIndex: 'inn',
                            menuDisabled: true,
                            text: 'інн / паспорт'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                return Ext.String.format('<div> <b>{0}&nbsp;&nbsp;&nbsp;</b><span class="author">{1}</span><br><span class="author">{2}</span></div>',
                                value,
                                record.get('firstname') || "",
                                record.get('lastname') || "");
                            },
                            width: 156,
                            dataIndex: 'surname',
                            menuDisabled: true,
                            text: 'П.І.Б.'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                metaData.style = 'white-space:pre-wrap;';
                                return value;

                            },
                            width: 164,
                            dataIndex: 'lgota',
                            menuDisabled: true,
                            text: 'Пільга'
                        },
                        {
                            xtype: 'numbercolumn',
                            hidden: true,
                            dataIndex: 'lgota_id',
                            text: 'Льгота_ид',
                            format: '0'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                var retValue = '';
                                if(value==="нет"){
                                    return Ext.String.format('<div ><span>вкл <img clas="icon" src="resources/css/images/ico/no.png"/></div>');

                                } else {
                                    return Ext.String.format('<div ><span>вкл <img clas="icon" src="resources/css/images/ico/yes.png"/></span></div>');
                                }
                            },
                            width: 71,
                            dataIndex: 'vkl',
                            menuDisabled: true,
                            text: 'вкл'
                        },
                        {
                            xtype: 'numbercolumn',
                            width: 62,
                            dataIndex: 'people',
                            menuDisabled: true,
                            text: 'чол',
                            format: '0'
                        },
                        {
                            xtype: 'numbercolumn',
                            width: 59,
                            dataIndex: 'percent',
                            menuDisabled: true,
                            text: '%',
                            format: '0'
                        },
                        {
                            xtype: 'numbercolumn',
                            width: 51,
                            dataIndex: 'gr',
                            menuDisabled: true,
                            text: 'Гр',
                            format: '0'
                        },
                        {
                            xtype: 'numbercolumn',
                            width: 51,
                            dataIndex: 'category',
                            menuDisabled: true,
                            text: 'Кат',
                            format: '0'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                return Ext.String.format('<div > <span class="author">с {0}</span><br><span class="author">по {1}</span></div>',
                                Ext.Date.format(value, 'd-m-Y') ,
                                Ext.Date.format(record.get('finish'), 'd-m-Y') || "");
                            },
                            width: 97,
                            dataIndex: 'start',
                            menuDisabled: true,
                            text: 'Період'
                        }
                    ],
                    tools: [
                        {
                            xtype: 'tool',
                            callback: function(owner, tool, event) {
                                //in use
                                var winLgotnik = Ext.ClassManager.instantiateByAlias('widget.winlgotnik');

                                var dt = new Date();

                                var form = winLgotnik.down('#fmLgotnik');
                                var stUser = Ext.data.StoreManager.get("StUser");
                                var StLgota = Ext.data.StoreManager.get("StLgota");

                                var values =stUser.getAt(0);


                                //LOGIKA'
                                values.set({'vibor':'addLgotnik'});
                                stUser.sync();

                                StLgota.proxy.setExtraParam('login', values.get('login'));
                                StLgota.proxy.setExtraParam('password',values.get('password'));
                                StLgota.load();

                                form.down('#winBtnAddLgotnik').setText('Додати пільговика');
                                form.getForm().findField('start').setValue(Ext.Date.format(dt, 'd-m-Y'));
                                form.getForm().findField('surname_ua').setValue();

                                form.getForm().findField('data').setValue(Ext.Date.format(dt, 'd-m-Y'));

                                winLgotnik.setTitle('Додати пільговика');
                                winLgotnik.show();
                                //spot.show(winLgotnik);
                            },
                            tooltip: 'Додати пільговика',
                            tooltipType: 'title',
                            type: 'plus'
                        },
                        {
                            xtype: 'tool',
                            callback: function(owner, tool, event) {
                                //in use
                                var grid = tool.findParentByType('grid');
                                //STORE
                                var stUser = Ext.data.StoreManager.get("StUser");
                                var stLgotnik = Ext.data.StoreManager.get("StLgotnik");
                                //LOGIN & PASSWORD
                                var values =stUser.getAt(0);

                                //LOGIKA


                                stLgotnik.removeAll();
                                stLgotnik.load({
                                    params: {
                                        login:values.get('login'),
                                        password:values.get('password'),
                                        address_id:values.get('address_id'),
                                        what_id:values.get('address_id'),
                                        what:"HistoryLgotnik"
                                    },
                                    callback: function(records,operation,success){
                                        if(success){
                                            //  console.log(grid);
                                            grid.getView().refresh();
                                        }
                                    },
                                    scope:this
                                });
                            },
                            tooltip: 'Історія пільговиків',
                            type: 'search'
                        }
                    ]
                },
                {
                    xtype: 'gridpanel',
                    anchor: '100%',
                    id: 'grFamaly',
                    margin: '5 5 5 5',
                    scrollable: true,
                    width: 1052,
                    animCollapse: true,
                    collapsed: true,
                    collapsible: true,
                    iconAlign: 'right',
                    title: 'Склад квартиронаймачів',
                    titleAlign: 'center',
                    titleCollapse: true,
                    columnLines: true,
                    emptyText: 'записей нет',
                    store: 'StFamaly',
                    viewConfig: {
                        emptyText: ' Записей нет'
                    },
                    columns: [
                        {
                            xtype: 'actioncolumn',
                            width: 30,
                            menuDisabled: true,
                            items: [
                                {
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        var dt = new Date();
                                        var winfamaly = Ext.ClassManager.instantiateByAlias('widget.winowner');
                                        var form = winfamaly.down('#fmOwner');
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var StFamaly = Ext.data.StoreManager.get("StOwner");

                                        var values =stUser.getAt(0);
                                        //StFamaly.proxy.setExtraParam('login', values.get('login'));
                                        //StFamaly.proxy.setExtraParam('password',values.get('password'));
                                        //StFamaly.load();

                                        var value = record;
                                        //console.log(value);
                                        view.getSelectionModel().select(rowIndex);
                                        values.set({'vibor':'addOwner'});
                                        stUser.sync();
                                        form.loadRecord(value);
                                        form.down('#winBtnAddOwner').setText('Добавить совладельца');
                                        winfamaly.setTitle('Добавление совладельца');
                                        winfamaly.show();
                                    },
                                    getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                        //console.log(r.get('owner'));
                                        if (r.get('owner') === "нет") {
                                            metaData = 'x-grid-center-icon';
                                        } else {
                                            metaData = 'x-hide-display';
                                        }
                                        return metaData;
                                    },
                                    icon: 'resources/css/images/ico/add.png',
                                    tooltip: 'Добавление совладельца'
                                }
                            ]
                        },
                        {
                            xtype: 'actioncolumn',
                            width: 30,
                            menuDisabled: true,
                            items: [
                                {
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        var dt = new Date();
                                        var winfamaly = Ext.ClassManager.instantiateByAlias('widget.winfamaly');
                                        var form = winfamaly.down('#fmFamaly');
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var StFamaly = Ext.data.StoreManager.get("StFamaly");

                                        var values =stUser.getAt(0);
                                        //StFamaly.proxy.setExtraParam('login', values.get('login'));
                                        //StFamaly.proxy.setExtraParam('password',values.get('password'));
                                        //StFamaly.load();

                                        var value = record;
                                        //console.log(value);
                                        view.getSelectionModel().select(rowIndex);
                                        values.set({'vibor':'editCitizen'});
                                        stUser.sync();
                                        form.loadRecord(value);
                                        form.down('#winBtnAddCitizen').setText('Обновить данные по квартиросьемщику');
                                        winfamaly.setTitle('Редактирование данных по квартиросьемщику');
                                        winfamaly.show();
                                    },
                                    icon: 'resources/css/images/ico/edit.png'
                                }
                            ]
                        },
                        {
                            xtype: 'numbercolumn',
                            hidden: true,
                            dataIndex: 'rec_id',
                            text: 'rec_id'
                        },
                        {
                            xtype: 'numbercolumn',
                            hidden: true,
                            dataIndex: 'address_id',
                            text: 'Address_id'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                return Ext.String.format('<div  <b>{0}</b>&nbsp;&nbsp;<span class="author">{1} </span><br><span class="author">{2}</span></div>',
                                value,
                                record.get('firstname') || "",
                                record.get('lastname') || "");
                            },
                            width: 162,
                            dataIndex: 'surname',
                            menuDisabled: true,
                            text: 'Фамилия И. О.'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 141,
                            dataIndex: 'rodstvo',
                            menuDisabled: true,
                            text: 'родство'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 90,
                            dataIndex: 'inn',
                            menuDisabled: true,
                            text: 'инн'
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            width: 100,
                            dataIndex: 'address',
                            menuDisabled: true,
                            text: 'адрес'
                        },
                        {
                            xtype: 'datecolumn',
                            width: 90,
                            align: 'center',
                            dataIndex: 'born',
                            menuDisabled: true,
                            text: 'Дата рожд',
                            format: 'd-m-Y'
                        },
                        {
                            xtype: 'datecolumn',
                            width: 90,
                            align: 'center',
                            dataIndex: 'datap',
                            menuDisabled: true,
                            text: 'Дата рег',
                            format: 'd-m-Y'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                return Ext.String.format('<div <b>{0} </b><br><span class="author">серия &nbsp; {1} номер &nbsp;&nbsp;&nbsp;</span><span class="author">{2}</span></div>',
                                value,
                                record.get('seria') || "",
                                record.get('nomer') || "");
                            },
                            width: 184,
                            dataIndex: 'document',
                            menuDisabled: true,
                            text: 'Документ'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                switch (value) {
                                    case "да":
                                    metaData='<span><img clas="icon" src="resources/css/images/ico/yes.png"/></span>';
                                    break;
                                    case "нет":
                                    metaData='<span><img clas="icon" src="resources/css/images/ico/no.png"/></span>';
                                    break;
                                }
                                return metaData;

                            },
                            width: 45,
                            align: 'center',
                            dataIndex: 'subsidia',
                            menuDisabled: true,
                            text: 'суб'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                switch (value) {
                                    case "да":
                                    metaData='<span><img clas="icon" src="resources/css/images/ico/yes.png"/></span>';
                                    break;
                                    case "нет":
                                    metaData='<span><img clas="icon" src="resources/css/images/ico/no.png"/></span>';
                                    break;
                                }
                                return metaData;

                            },
                            width: 45,
                            align: 'center',
                            dataIndex: 'vkl',
                            menuDisabled: true,
                            text: 'вкл'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                switch (value) {
                                    case 1:
                                    metaData='<span><img clas="icon" src="resources/css/images/ico/yes.png"/></span>';
                                    break;
                                    case 0:
                                    metaData='<span><img clas="icon" src="resources/css/images/ico/no.png"/></span>';
                                    break;
                                }
                                return metaData;

                            },
                            width: 40,
                            align: 'center',
                            dataIndex: 'absent',
                            menuDisabled: true,
                            text: 'отс'
                        },
                        {
                            xtype: 'actioncolumn',
                            width: 30,
                            menuDisabled: true,
                            items: [
                                {
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        Ext.Msg.prompt('Name', 'Справка дана для предоставления в ............:', function(btn, text){

                                            if (btn == 'ok'){
                                                if (text !=="") {

                                                    var StUser = Ext.data.StoreManager.get("StUser");
                                                    var StReport = Ext.data.StoreManager.get("StReport");
                                                    var values =StUser.getAt(0);
                                                    var addr = values.data.address_id;
                                                    var rec_id = record.data.rec_id;


                                                    var usertype = 1;

                                                    //V
                                                    var tabPnCenter =  Ext.getCmp('tabPnCenter');//me.getTabPnCenter();


                                                    //C

                                                    if (addr) {

                                                        var report = 'Spravka';
                                                        var namereport = 'Справка';

                                                        var value = {
                                                            login:values.get('login'),
                                                            password:values.get('password'),
                                                            report:report,
                                                            what:report,
                                                            kuda:text,
                                                            address_id: addr,
                                                            rec_id: rec_id

                                                        };

                                                        var tab = tabPnCenter.child('#'+report);

                                                        if (!tab) {
                                                            tab  = tabPnCenter.add({
                                                                xtype:'tabreportorg',
                                                                title:namereport,
                                                                id:''+report+''
                                                            });

                                                            tabPnCenter.setActiveTab(tab);

                                                        }else{

                                                            tabPnCenter.setActiveTab(tab);
                                                        }

                                                        var reppan = tab.getComponent(0);


                                                        var myMask =new Ext.LoadMask({
                                                            target: reppan ,
                                                            msg:"Загрузка..."
                                                        });
                                                        myMask.show();

                                                        QueryReport.getResults(value,function(data){
                                                            if (data){

                                                                //    reportHead.update(data.head);
                                                                reppan.update(data.content);
                                                                //      reportFoot.update(data.foot);
                                                                Ext.REPORTCONTENT =data.content;
                                                                myMask.hide();


                                                            } else {
                                                                myMask.hide();
                                                                Ext.MessageBox.show({
                                                                    title: 'Ошибка ',
                                                                    msg: 'Документ не создан',
                                                                    buttons: Ext.MessageBox.OK,
                                                                    icon: Ext.MessageBox.ERROR

                                                                });

                                                            }

                                                        });


                                                    }

                                                }

                                                else
                                                {
                                                    Ext.MessageBox.show({
                                                        title: 'Ошибка ',
                                                        msg: 'Не введена организация куда предоставляется справка',
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.ERROR
                                                    });
                                                }
                                            }

                                        });
                                    },
                                    icon: 'resources/css/images/ico/printer.png',
                                    tooltip: 'ДОВІДКА ПРО СКЛАД СІМ’Ї'
                                }
                            ]
                        },
                        {
                            xtype: 'actioncolumn',
                            width: 30,
                            menuDisabled: true,
                            items: [
                                {
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        Ext.Msg.prompt('Name', 'Справка дана для предоставления в ............:', function(btn, text){

                                            if (btn == 'ok'){
                                                if (text !=="") {

                                                    var StUser = Ext.data.StoreManager.get("StUser");
                                                    var StReport = Ext.data.StoreManager.get("StReport");
                                                    var values =StUser.getAt(0);
                                                    var addr = values.data.address_id;
                                                    var rec_id = record.data.rec_id;


                                                    var usertype = 1;

                                                    //V
                                                    var tabPnCenter =  Ext.getCmp('tabPnCenter');//me.getTabPnCenter();


                                                    //C

                                                    if (addr) {

                                                        var report = 'DovidkaFakt';
                                                        var namereport = 'Довидка';

                                                        var value = {
                                                            login:values.get('login'),
                                                            password:values.get('password'),
                                                            report:report,
                                                            what:report,
                                                            kuda:text,
                                                            address_id: addr,
                                                            rec_id: rec_id

                                                        };

                                                        var tab = tabPnCenter.child('#'+report);

                                                        if (!tab) {
                                                            tab  = tabPnCenter.add({
                                                                xtype:'tabreportorg',
                                                                title:namereport,
                                                                id:''+report+''
                                                            });

                                                            tabPnCenter.setActiveTab(tab);

                                                        }else{

                                                            tabPnCenter.setActiveTab(tab);
                                                        }

                                                        var reppan = tab.getComponent(0);


                                                        var myMask =new Ext.LoadMask({
                                                            target: reppan ,
                                                            msg:"Загрузка..."
                                                        });
                                                        myMask.show();

                                                        QueryReport.getResults(value,function(data){
                                                            if (data){

                                                                //    reportHead.update(data.head);
                                                                reppan.update(data.content);
                                                                //      reportFoot.update(data.foot);
                                                                Ext.REPORTCONTENT =data.content;
                                                                myMask.hide();


                                                            } else {
                                                                myMask.hide();
                                                                Ext.MessageBox.show({
                                                                    title: 'Ошибка ',
                                                                    msg: 'Документ не создан',
                                                                    buttons: Ext.MessageBox.OK,
                                                                    icon: Ext.MessageBox.ERROR

                                                                });

                                                            }

                                                        });


                                                    }

                                                }

                                                else
                                                {
                                                    Ext.MessageBox.show({
                                                        title: 'Ошибка ',
                                                        msg: 'Не введена организация куда предоставляется справка',
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.ERROR
                                                    });
                                                }
                                            }

                                        });
                                    },
                                    icon: 'resources/css/images/ico/printer.png',
                                    tooltip: 'ДОВІДКА про фактичне місце проживання'
                                }
                            ]
                        },
                        {
                            xtype: 'actioncolumn',
                            width: 30,
                            menuDisabled: true,
                            items: [
                                {
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        Ext.Msg.prompt('Name', 'Справка дана для предоставления в ............:', function(btn, text){

                                            if (btn == 'ok'){
                                                if (text !=="") {

                                                    var StUser = Ext.data.StoreManager.get("StUser");
                                                    var StReport = Ext.data.StoreManager.get("StReport");
                                                    var values =StUser.getAt(0);
                                                    var addr = values.data.address_id;
                                                    var rec_id = record.data.rec_id;


                                                    var usertype = 1;

                                                    //V
                                                    var tabPnCenter =  Ext.getCmp('tabPnCenter');//me.getTabPnCenter();


                                                    //C

                                                    if (addr) {

                                                        var report = 'AktFakt';
                                                        var namereport = 'Акт';

                                                        var value = {
                                                            login:values.get('login'),
                                                            password:values.get('password'),
                                                            report:report,
                                                            what:report,
                                                            kuda:text,
                                                            address_id: addr,
                                                            rec_id: rec_id

                                                        };

                                                        var tab = tabPnCenter.child('#'+report);

                                                        if (!tab) {
                                                            tab  = tabPnCenter.add({
                                                                xtype:'tabreportorg',
                                                                title:namereport,
                                                                id:''+report+''
                                                            });

                                                            tabPnCenter.setActiveTab(tab);

                                                        }else{

                                                            tabPnCenter.setActiveTab(tab);
                                                        }

                                                        var reppan = tab.getComponent(0);


                                                        var myMask =new Ext.LoadMask({
                                                            target: reppan ,
                                                            msg:"Загрузка..."
                                                        });
                                                        myMask.show();

                                                        QueryReport.getResults(value,function(data){
                                                            if (data){

                                                                //    reportHead.update(data.head);
                                                                reppan.update(data.content);
                                                                //      reportFoot.update(data.foot);
                                                                Ext.REPORTCONTENT =data.content;
                                                                myMask.hide();


                                                            } else {
                                                                myMask.hide();
                                                                Ext.MessageBox.show({
                                                                    title: 'Ошибка ',
                                                                    msg: 'Документ не создан',
                                                                    buttons: Ext.MessageBox.OK,
                                                                    icon: Ext.MessageBox.ERROR

                                                                });

                                                            }

                                                        });


                                                    }

                                                }

                                                else
                                                {
                                                    Ext.MessageBox.show({
                                                        title: 'Ошибка ',
                                                        msg: 'Не введена организация куда предоставляется справка',
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.ERROR
                                                    });
                                                }
                                            }

                                        });
                                    },
                                    icon: 'resources/css/images/ico/printer.png',
                                    tooltip: 'АКТ про фактично проживаючих'
                                }
                            ]
                        }
                    ],
                    tools: [
                        {
                            xtype: 'tool',
                            callback: function(owner, tool, event) {
                                //in use
                                var winfamaly = Ext.ClassManager.instantiateByAlias('widget.winfamaly');

                                var dt = new Date();

                                var form = winfamaly.down('#fmFamaly');
                                var stUser = Ext.data.StoreManager.get("StUser");
                                var StFamaly = Ext.data.StoreManager.get("StFamaly");
                                var fmAppartment =  Ext.getCmp('fmAppartment');
                                var nanim = fmAppartment.getForm().findField('nanim').getValue();
                                var address_id = fmAppartment.getForm().findField('address_id').getValue();

                                var values =stUser.getAt(0);


                                //LOGIKA'
                                values.set({'vibor':'addCitizen'});
                                stUser.sync();


                                form.down('#winBtnAddCitizen').setText('Добавить квартиросьемщика');
                                form.getForm().findField('surname').setValue(nanim);
                                form.getForm().findField('address_id').setValue(address_id);

                                winfamaly.setTitle('Добовление квартиросьемщика');
                                winfamaly.show();
                                //spot.show(winLgotnik);
                            },
                            tooltip: 'Добавить квартиросьемшика',
                            tooltipType: 'title',
                            type: 'plus'
                        },
                        {
                            xtype: 'tool',
                            callback: function(owner, tool, event) {
                                //in use
                                var grid = tool.findParentByType('grid');
                                //STORE
                                var stUser = Ext.data.StoreManager.get("StUser");
                                var StFamaly = Ext.data.StoreManager.get("StFamaly");
                                //LOGIN & PASSWORD
                                var values =stUser.getAt(0);

                                //LOGIKA


                                StFamaly.removeAll();
                                StFamaly.load({
                                    params: {
                                        login:values.get('login'),
                                        password:values.get('password'),
                                        address_id:values.get('address_id'),
                                        what_id:values.get('address_id'),
                                        what:"HistoryFamaly"
                                    },
                                    callback: function(records,operation,success){
                                        if(success){
                                            //  console.log(grid);
                                            grid.getView().refresh();
                                        }
                                    },
                                    scope:this
                                });
                            },
                            tabIndex: 3,
                            tooltip: 'Показать историю Добавить квартиросьемшиков',
                            tooltipType: 'title',
                            type: 'search'
                        }
                    ]
                },
                {
                    xtype: 'form',
                    height: 647,
                    id: 'fmAppartment',
                    scrollable: true,
                    style: 'background-color: #e0e0e0;',
                    layout: 'fit',
                    title: '',
                    items: [
                        {
                            xtype: 'fieldset',
                            height: 600,
                            margin: '5 5 5 5',
                            scrollable: true,
                            style: 'background-color: #DCDCDC;',
                            width: 1054,
                            layout: 'absolute',
                            title: 'Загальна інформація',
                            items: [
                                {
                                    xtype: 'fieldset',
                                    x: 5,
                                    y: 85,
                                    height: 175,
                                    style: 'background-color: #F1EEEE;',
                                    width: 455,
                                    layout: 'absolute',
                                    title: '',
                                    items: [
                                        {
                                            xtype: 'numberfield',
                                            x: 0,
                                            y: 10,
                                            width: 90,
                                            fieldLabel: 'Код',
                                            labelPad: 15,
                                            labelSeparator: ' ',
                                            labelWidth: 20,
                                            name: 'address_id',
                                            readOnly: true,
                                            editable: false,
                                            hideTrigger: true,
                                            allowDecimals: false,
                                            decimalPrecision: 0
                                        },
                                        {
                                            xtype: 'numberfield',
                                            x: 255,
                                            y: 135,
                                            height: 25,
                                            width: 145,
                                            fieldLabel: 'с.код',
                                            labelPad: 15,
                                            labelSeparator: ' ',
                                            labelWidth: 30,
                                            name: 'kod',
                                            readOnly: true,
                                            editable: false,
                                            hideTrigger: true,
                                            maxLength: 15,
                                            allowDecimals: false,
                                            decimalPrecision: 0
                                        },
                                        {
                                            xtype: 'textfield',
                                            x: 0,
                                            y: 40,
                                            width: 430,
                                            fieldLabel: 'Гл. наймач',
                                            labelSeparator: ' ',
                                            labelWidth: 80,
                                            name: 'nanim'
                                        },
                                        {
                                            xtype: 'textfield',
                                            x: 0,
                                            y: 70,
                                            width: 430,
                                            fieldLabel: 'Власник',
                                            labelSeparator: ' ',
                                            labelWidth: 80,
                                            name: 'owner'
                                        },
                                        {
                                            xtype: 'textfield',
                                            x: 0,
                                            y: 100,
                                            width: 430,
                                            fieldLabel: 'Телефон',
                                            labelSeparator: ' ',
                                            labelWidth: 65,
                                            name: 'phone'
                                        },
                                        {
                                            xtype: 'textfield',
                                            x: 0,
                                            y: 135,
                                            width: 215,
                                            fieldLabel: 'Email',
                                            labelSeparator: ' ',
                                            labelWidth: 40,
                                            name: 'email',
                                            emptyText: 'user@example.com',
                                            vtype: 'email'
                                        },
                                        {
                                            xtype: 'textfield',
                                            x: 100,
                                            y: 10,
                                            width: 330,
                                            fieldLabel: 'Адреса',
                                            labelSeparator: ' ',
                                            labelWidth: 50,
                                            name: 'address',
                                            editable: false
                                        },
                                        {
                                            xtype: 'button',
                                            handler: function(button, event) {
                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var pvalues =stUser.getAt(0);
                                                var login = pvalues.get('login');
                                                var password = pvalues.get('password');

                                                var form = Ext.getCmp('fmAppartment');//Форма
                                                var stAppartment = Ext.data.StoreManager.get("StAppartment");

                                                var values=form.getValues();
                                                var address_id = values.address_id;
                                                var params = {
                                                    login:login,
                                                    password:password,
                                                    what:'EmailInfoApp',
                                                    address_id:address_id
                                                };
                                                // console.log(values.address_id);
                                                Ext.Object.merge(values, params);

                                                var myMask= Ext.Msg.show({
                                                    title: 'Отправка информационного листка',
                                                    msg: 'Отправка информационного листка .Ожидайте...',
                                                    buttons: Ext.Msg.CANCEL,
                                                    wait: true,
                                                    modal: true,
                                                    icon: Ext.Msg.INFO
                                                });
                                                QueryAddress.updateRecords(params,function(results){
                                                    if(results.success==="1"){
                                                        setTimeout(function(){
                                                            QueryExportInfoApp.exportToEmail(params,function(results){
                                                                if(results.success){
                                                                    myMask.close();
                                                                    Ext.MessageBox.show({
                                                                        title: 'Отправка информационного листка',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.INFO
                                                                    });

                                                                } else {
                                                                    myMask.close();

                                                                    Ext.MessageBox.show({
                                                                        title: 'Отправка информационного листка',
                                                                        msg: results.msg,
                                                                        buttons: Ext.MessageBox.OK,
                                                                        icon: Ext.MessageBox.ERROR
                                                                    });
                                                                }
                                                            }, 250);
                                                        });
                                                    }

                                                });
                                            },
                                            x: 220,
                                            y: 130,
                                            icon: 'resources/css/images/news/icons8-email-24.png',
                                            scale: 'medium',
                                            text: '',
                                            tooltip: 'Отправка информационного листка',
                                            tooltipType: 'title'
                                        },
                                        {
                                            xtype: 'button',
                                            handler: function(button, event) {
                                                //LOGIN & PASSWORD
                                                var stUser = Ext.data.StoreManager.get("StUser");
                                                var pvalues =stUser.getAt(0);
                                                var login = pvalues.get('login');
                                                var password = pvalues.get('password');

                                                var form = Ext.getCmp('fmAppartment');//Форма
                                                var stAppartment = Ext.data.StoreManager.get("StAppartment");//QueryAddress.getResults <Appartment>


                                                var values=form.getValues();

                                                var address_id = values.address_id;
                                                var params = {
                                                    login:login,
                                                    password:password,
                                                    what:'AppartmentUpdateKod',
                                                    what_id:address_id
                                                };
                                                // console.log(values.address_id);
                                                Ext.Object.merge(values, params);

                                                // СОХРАНИТЬ ИЗМЕНЕНИЯ

                                                QueryAddress.updateRecords(values,function(result){

                                                    if (result.success){

                                                        Ext.MessageBox.show({
                                                            title: 'Обновление данных по квартире!',
                                                            msg: result.msg,
                                                            buttons: Ext.MessageBox.OK,
                                                            icon: Ext.MessageBox.INFO,
                                                            buttonText:{
                                                                ok: "Закрыть!"
                                                            }
                                                        });

                                                        stAppartment.load({
                                                            params: {
                                                                what_id:address_id,
                                                                address_id: address_id,
                                                                what:'Appartment',
                                                                login:login,
                                                                password:password
                                                            },
                                                            callback: function(records,operation,success){
                                                                var rec = records[0];

                                                                if(success){
                                                                    form.getForm().loadRecord(rec);
                                                                }
                                                            },
                                                            scope:this
                                                        });



                                                    }else{
                                                        Ext.MessageBox.show({
                                                            title: 'Внесение изменений',
                                                            msg: 'Произошла ошибка',
                                                            buttons: Ext.MessageBox.OK,
                                                            buttonText:{
                                                                ok: "Закрыть!"
                                                            },
                                                            icon: Ext.MessageBox.WARNING
                                                        });
                                                    }
                                                });

                                            },
                                            x: 410,
                                            y: 135,
                                            icon: 'resources/css/images/ico/xsldbg_refresh.png',
                                            text: '',
                                            tooltip: 'Оновить таємний код',
                                            tooltipType: 'title'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'fieldset',
                                    x: 465,
                                    y: 85,
                                    height: 215,
                                    style: 'background-color: #F1EEEE;',
                                    width: 510,
                                    layout: 'absolute',
                                    title: 'дані БТІ',
                                    items: [
                                        {
                                            xtype: 'checkboxfield',
                                            x: 0,
                                            y: 0,
                                            fieldLabel: 'Приват',
                                            labelWidth: 50,
                                            name: 'privat',
                                            boxLabel: 'Ні',
                                            inputValue: 'да',
                                            uncheckedValue: 'нет',
                                            listeners: {
                                                change: 'onCheckboxfieldChange1'
                                            }
                                        },
                                        {
                                            xtype: 'textareafield',
                                            x: 110,
                                            y: 0,
                                            width: 375,
                                            fieldLabel: 'Ордер',
                                            labelAlign: 'top',
                                            labelSeparator: ' ',
                                            labelWidth: 120,
                                            name: 'order',
                                            grow: true
                                        },
                                        {
                                            xtype: 'datefield',
                                            x: 0,
                                            y: 25,
                                            width: 100,
                                            fieldLabel: 'Дата ордера',
                                            labelAlign: 'top',
                                            name: 'data_ordera',
                                            format: 'd-m-Y',
                                            submitFormat: 'Y-m-d'
                                        },
                                        {
                                            xtype: 'fieldset',
                                            x: 0,
                                            y: 90,
                                            height: 95,
                                            style: 'background-color: #DCDCDC;',
                                            width: 485,
                                            layout: 'absolute',
                                            title: 'Склад (людина)',
                                            items: [
                                                {
                                                    xtype: 'numberfield',
                                                    x: 5,
                                                    y: 5,
                                                    width: 135,
                                                    fieldLabel: 'Прописано',
                                                    labelSeparator: ' ',
                                                    labelWidth: 70,
                                                    name: 'tenant',
                                                    allowDecimals: false,
                                                    decimalPrecision: 0
                                                },
                                                {
                                                    xtype: 'numberfield',
                                                    x: 290,
                                                    y: 5,
                                                    width: 135,
                                                    fieldLabel: 'Відсутні',
                                                    labelSeparator: ' ',
                                                    labelWidth: 70,
                                                    name: 'absent',
                                                    allowDecimals: false,
                                                    decimalPrecision: 0,
                                                    minValue: 0
                                                },
                                                {
                                                    xtype: 'numberfield',
                                                    x: 155,
                                                    y: 5,
                                                    width: 120,
                                                    fieldLabel: 'Піднаймач',
                                                    labelSeparator: ' ',
                                                    labelWidth: 70,
                                                    name: 'podnan',
                                                    allowDecimals: false,
                                                    decimalPrecision: 0,
                                                    minValue: 0
                                                },
                                                {
                                                    xtype: 'numberfield',
                                                    anchor: '100%',
                                                    x: 515,
                                                    y: 315,
                                                    fieldLabel: 'Льготник',
                                                    labelSeparator: ' ',
                                                    labelWidth: 70,
                                                    name: 'lgotchik',
                                                    allowDecimals: false,
                                                    decimalPrecision: 0,
                                                    minValue: 0
                                                },
                                                {
                                                    xtype: 'checkboxfield',
                                                    x: 5,
                                                    y: 35,
                                                    fieldLabel: 'Субсидія',
                                                    labelAlign: 'right',
                                                    labelWidth: 70,
                                                    name: 'subsidia',
                                                    boxLabel: 'Ні',
                                                    inputValue: 'да',
                                                    uncheckedValue: 'нет'
                                                },
                                                {
                                                    xtype: 'displayfield',
                                                    renderer: function(value, displayField) {
                                                        var form = displayField.findParentByType('form');
                                                        var lg = form.getForm().findField('lgotchik').getValue();
                                                        //console.log(lg);
                                                        var retValue = '';
                                                        if(lg===0){
                                                            retValue ='<span><img class="icon" src="resources/css/images/ico/no.png"/></span>';
                                                        } else {
                                                            retValue ='<span><img class="icon" src="resources/css/images/ico/yes.png"/></span>';
                                                        }
                                                        return retValue;
                                                    },
                                                    x: 135,
                                                    y: 35,
                                                    width: 100,
                                                    fieldLabel: 'Пільга',
                                                    labelSeparator: ' ',
                                                    labelWidth: 70,
                                                    name: 'lgota'
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    xtype: 'fieldset',
                                    x: 5,
                                    y: 270,
                                    height: 125,
                                    style: 'background-color: #F1EEEE;',
                                    width: 455,
                                    layout: 'absolute',
                                    title: 'Паспортні дані',
                                    items: [
                                        {
                                            xtype: 'textfield',
                                            x: 0,
                                            y: 0,
                                            cls: 'bti',
                                            width: 140,
                                            fieldLabel: 'Серія №',
                                            labelSeparator: ' ',
                                            labelWidth: 60,
                                            name: 'passport'
                                        },
                                        {
                                            xtype: 'datefield',
                                            x: 145,
                                            y: 0,
                                            width: 150,
                                            fieldLabel: 'Дата',
                                            labelSeparator: ' ',
                                            labelWidth: 35,
                                            name: 'viddata',
                                            format: 'd-m-Y',
                                            submitFormat: 'Ymd'
                                        },
                                        {
                                            xtype: 'textareafield',
                                            x: 10,
                                            y: 35,
                                            cls: 'bti',
                                            width: 360,
                                            fieldLabel: 'Видано',
                                            labelSeparator: ' ',
                                            labelWidth: 50,
                                            name: 'vidan',
                                            grow: true
                                        },
                                        {
                                            xtype: 'textfield',
                                            x: 300,
                                            y: 0,
                                            width: 130,
                                            fieldLabel: 'Інн',
                                            labelSeparator: ' ',
                                            labelWidth: 30,
                                            name: 'inn'
                                        },
                                        {
                                            xtype: 'button',
                                            handler: function(button, event) {
                                                var me = this;
                                                var StUser = Ext.data.StoreManager.get("StUser");
                                                var StReport = Ext.data.StoreManager.get("StReport");
                                                var values =StUser.getAt(0);
                                                var addr = values.data.address_id;

                                                var usertype = 1;

                                                //V
                                                var tabPnCenter =  Ext.getCmp('tabPnCenter');//me.getTabPnCenter();


                                                //C

                                                if (addr) {

                                                    var report = 'HistoryFlatPayment';
                                                    var namereport = 'История платежей кв.';

                                                    var value = {
                                                        login:values.get('login'),
                                                        password:values.get('password'),
                                                        report:report,
                                                        what:report,
                                                        address_id: addr
                                                    };

                                                    var tab = tabPnCenter.child('#'+report);

                                                    if (!tab) {
                                                        tab  = tabPnCenter.add({
                                                            xtype:'tabreportorg',
                                                            title:namereport,
                                                            id:''+report+''
                                                        });

                                                        tabPnCenter.setActiveTab(tab);

                                                    }else{

                                                        tabPnCenter.setActiveTab(tab);
                                                    }

                                                    var reppan = tab.getComponent(0);


                                                    var myMask =new Ext.LoadMask({
                                                        target: reppan ,
                                                        msg:"Загрузка..."
                                                    });
                                                    myMask.show();

                                                    QueryReport.getResults(value,function(data){
                                                        if (data){

                                                            //    reportHead.update(data.head);
                                                            reppan.update(data.content);
                                                            //      reportFoot.update(data.foot);
                                                            Ext.REPORTCONTENT =data.content;
                                                            myMask.hide();


                                                        } else {
                                                            myMask.hide();
                                                            Ext.MessageBox.show({
                                                                title: 'Ошибка ',
                                                                msg: 'Документ не создан',
                                                                buttons: Ext.MessageBox.OK,
                                                                icon: Ext.MessageBox.ERROR

                                                            });

                                                        }

                                                    });


                                                }


                                            },
                                            x: 380,
                                            y: 45,
                                            id: 'btnHistoryPayFlat',
                                            icon: 'resources/css/images/ico/print_printer.png',
                                            scale: 'large',
                                            text: '',
                                            tooltip: 'История платежей по квартире'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'gridpanel',
                                    x: 465,
                                    y: 315,
                                    height: 265,
                                    id: 'grAppHistory',
                                    scrollable: true,
                                    width: 510,
                                    title: 'історія змін по квартирі',
                                    emptyText: 'Нет данных для просмотра',
                                    store: 'StHAppartment',
                                    viewConfig: {
                                        height: 138,
                                        id: 'grAppHistoryView'
                                    },
                                    columns: [
                                        {
                                            xtype: 'numbercolumn',
                                            hidden: true,
                                            dataIndex: 'address_id',
                                            text: 'Address_id'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'address',
                                            text: 'Address'
                                        },
                                        {
                                            xtype: 'datecolumn',
                                            width: 80,
                                            dataIndex: 'data_change',
                                            menuDisabled: true,
                                            text: 'Дата',
                                            format: 'd-m-y'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                metaData.style = 'white-space:pre-wrap;';
                                                return value;

                                            },
                                            width: 337,
                                            dataIndex: 'what_change',
                                            menuDisabled: true,
                                            text: 'Опис змін',
                                            flex: 1
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            width: 83,
                                            dataIndex: 'operator',
                                            menuDisabled: true,
                                            text: 'Оператор'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'textareafield',
                                    x: 5,
                                    y: 435,
                                    height: 149,
                                    style: 'background-color: #f3f3f3;',
                                    width: 455,
                                    fieldLabel: 'Останні зміни по квартирі',
                                    labelAlign: 'top',
                                    labelWidth: 120,
                                    name: 'info',
                                    grow: true
                                },
                                {
                                    xtype: 'textareafield',
                                    x: 15,
                                    y: 195,
                                    height: 92,
                                    hidden: true,
                                    width: 300,
                                    fieldLabel: 'Последние изменения по квартире',
                                    labelAlign: 'top',
                                    labelWidth: 120,
                                    name: 'what_change'
                                },
                                {
                                    xtype: 'datefield',
                                    x: 120,
                                    y: 400,
                                    width: 210,
                                    fieldLabel: 'Дата изм',
                                    labelWidth: 80,
                                    name: 'data_change',
                                    format: 'd-m-Y',
                                    submitFormat: 'Y-m-d',
                                    listeners: {
                                        select: 'onDatefieldSelect'
                                    }
                                },
                                {
                                    xtype: 'datefield',
                                    x: 315,
                                    y: 330,
                                    hidden: true,
                                    width: 125,
                                    fieldLabel: 'Дата изменений',
                                    labelAlign: 'top',
                                    name: 'chdata',
                                    format: 'd-m-Y',
                                    submitFormat: 'Y-m-d'
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, event) {
                                        //LOGIN & PASSWORD
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var pvalues =stUser.getAt(0);
                                        var login = pvalues.get('login');
                                        var password = pvalues.get('password');

                                        var form = Ext.getCmp('fmAppartment');//Форма

                                        var stAppartment = Ext.data.StoreManager.get("StAppartment");//QueryAddress.getResults <Appartment>
                                        var StHAppartment = Ext.data.StoreManager.get("StHAppartment");


                                        var values=form.getValues();

                                        var address_id = values.address_id;
                                        var params = {
                                            login:login,
                                            password:password,
                                            what:'AppartmentChangeBti',
                                            what_id:address_id
                                        };
                                        // console.log(values.address_id);
                                        Ext.Object.merge(values, params);

                                        // СОХРАНИТЬ ИЗМЕНЕНИЯ

                                        QueryAddress.updateRecords(values,function(result){

                                            if (result.success){

                                                Ext.MessageBox.show({
                                                    title: 'Обновление данных по квартире!',
                                                    msg: result.msg,
                                                    buttons: Ext.MessageBox.OK,
                                                    icon: Ext.MessageBox.INFO,
                                                    buttonText:{
                                                        ok: "Закрыть!"
                                                    }
                                                });

                                                stAppartment.load({
                                                    params: {
                                                        what_id:address_id,
                                                        address_id: address_id,
                                                        what:'Appartment',
                                                        login:login,
                                                        password:password
                                                    },
                                                    callback: function(records,operation,success){
                                                        var rec = records[0];

                                                        if(success){
                                                            StHAppartment.load({
                                                                params: {
                                                                    what_id:address_id,
                                                                    address_id: address_id,
                                                                    what:'HistoryAppartment',
                                                                    login:login,
                                                                    password:password
                                                                },
                                                                scope:this
                                                            });
                                                            stAppartment.sync();
                                                            form.getForm().loadRecord(rec);
                                                        }
                                                    },
                                                    scope:this
                                                });



                                            }else{
                                                Ext.MessageBox.show({
                                                    title: 'Внесение изменений',
                                                    msg: 'Произошла ошибка',
                                                    buttons: Ext.MessageBox.OK,
                                                    buttonText:{
                                                        ok: "Закрыть!"
                                                    },
                                                    icon: Ext.MessageBox.WARNING
                                                });
                                            }
                                        });

                                    },
                                    x: 335,
                                    y: 400,
                                    formBind: true,
                                    height: 25,
                                    id: 'BtnUpdateAppartment',
                                    width: 125,
                                    icon: 'resources/css/images/ico/yes.png',
                                    text: 'Новий запис'
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, event) {
                                        //LOGIN & PASSWORD
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var pvalues =stUser.getAt(0);
                                        var login = pvalues.get('login');
                                        var password = pvalues.get('password');

                                        var form = Ext.getCmp('fmAppartment');//Форма
                                        var stAppartment = Ext.data.StoreManager.get("StAppartment");//QueryAddress.getResults <Appartment>
                                        var StHAppartment = Ext.data.StoreManager.get("StHAppartment");


                                        var values=form.getValues();

                                        var address_id = values.address_id;
                                        var params = {
                                            login:login,
                                            password:password,
                                            what:'AppartmentUpdateBti',
                                            what_id:address_id
                                        };
                                        // console.log(values.address_id);
                                        Ext.Object.merge(values, params);

                                        // СОХРАНИТЬ ИЗМЕНЕНИЯ

                                        QueryAddress.updateRecords(values,function(result){

                                            if (result.success){

                                                Ext.MessageBox.show({
                                                    title: 'Обновление данных по квартире!',
                                                    msg: result.msg,
                                                    buttons: Ext.MessageBox.OK,
                                                    icon: Ext.MessageBox.INFO,
                                                    buttonText:{
                                                        ok: "Закрыть!"
                                                    }
                                                });

                                                stAppartment.load({
                                                    params: {
                                                        what_id:address_id,
                                                        address_id: address_id,
                                                        what:'Appartment',
                                                        login:login,
                                                        password:password
                                                    },
                                                    callback: function(records,operation,success){
                                                        var rec = records[0];

                                                        if(success){
                                                            StHAppartment.load({
                                                                params: {
                                                                    what_id:address_id,
                                                                    address_id: address_id,
                                                                    what:'HistoryAppartment',
                                                                    login:login,
                                                                    password:password
                                                                },
                                                                scope:this
                                                            });
                                                            stAppartment.sync();
                                                            form.getForm().loadRecord(rec);
                                                        }
                                                    },
                                                    scope:this
                                                });



                                            }else{
                                                Ext.MessageBox.show({
                                                    title: 'Внесение изменений',
                                                    msg: 'Произошла ошибка',
                                                    buttons: Ext.MessageBox.OK,
                                                    buttonText:{
                                                        ok: "Закрыть!"
                                                    },
                                                    icon: Ext.MessageBox.WARNING
                                                });
                                            }
                                        });

                                    },
                                    x: 5,
                                    y: 400,
                                    formBind: true,
                                    height: 25,
                                    width: 105,
                                    icon: 'resources/css/images/ico/xsldbg_refresh.png',
                                    text: 'Оновить '
                                },
                                {
                                    xtype: 'fieldset',
                                    x: 5,
                                    y: 5,
                                    height: 65,
                                    style: 'background-color: #F1EEEE;',
                                    width: 965,
                                    layout: 'absolute',
                                    title: 'Площа квартири (м2)',
                                    items: [
                                        {
                                            xtype: 'numberfield',
                                            x: 5,
                                            y: 5,
                                            width: 130,
                                            fieldLabel: 'Корисна',
                                            labelSeparator: ' ',
                                            labelWidth: 65,
                                            name: 'area_full',
                                            editable: false,
                                            hideTrigger: true,
                                            autoStripChars: true
                                        },
                                        {
                                            xtype: 'numberfield',
                                            x: 170,
                                            y: 5,
                                            width: 125,
                                            fieldLabel: 'Житлова',
                                            labelSeparator: ' ',
                                            labelWidth: 60,
                                            name: 'area_life',
                                            editable: false,
                                            hideTrigger: true,
                                            autoStripChars: true
                                        },
                                        {
                                            xtype: 'numberfield',
                                            x: 335,
                                            y: 5,
                                            width: 130,
                                            fieldLabel: 'Додаткова',
                                            labelSeparator: ' ',
                                            labelWidth: 70,
                                            name: 'area_dop',
                                            editable: false,
                                            hideTrigger: true,
                                            autoStripChars: true
                                        },
                                        {
                                            xtype: 'numberfield',
                                            x: 500,
                                            y: 5,
                                            width: 125,
                                            fieldLabel: 'Балкон',
                                            labelSeparator: ' ',
                                            labelWidth: 50,
                                            name: 'area_balk',
                                            editable: false,
                                            hideTrigger: true,
                                            autoStripChars: true
                                        },
                                        {
                                            xtype: 'numberfield',
                                            x: 660,
                                            y: 5,
                                            width: 120,
                                            fieldLabel: 'Кімнат',
                                            labelSeparator: ' ',
                                            labelWidth: 55,
                                            name: 'room',
                                            editable: false,
                                            hideTrigger: true,
                                            allowDecimals: false,
                                            autoStripChars: true,
                                            decimalPrecision: 0
                                        },
                                        {
                                            xtype: 'checkboxfield',
                                            x: 820,
                                            y: 5,
                                            fieldLabel: 'Ліфт',
                                            labelWidth: 40,
                                            name: 'lift',
                                            boxLabel: 'Ні',
                                            inputValue: 'да',
                                            uncheckedValue: 'нет'
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'hiddenfield',
                            fieldLabel: 'Label',
                            name: 'house_id'
                        },
                        {
                            xtype: 'hiddenfield',
                            fieldLabel: 'Label',
                            name: 'operator'
                        }
                    ]
                }
            ]
        }
    ],

    onCheckboxfieldChange1: function(field, newValue, oldValue, eOpts) {
        if(newValue){
            field.setBoxLabel("Так");
        }else{
            field.setBoxLabel("Ні");
        }
    },

    onDatefieldSelect: function(field, value, eOpts) {
        Ext.getCmp('BtnUpdateAppartment').setText('Записать');
    }

});