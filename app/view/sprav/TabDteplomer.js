/*
 * File: app/view/sprav/TabDteplomer.js
 * Date: Wed Jan 06 2021 00:22:37 GMT+0200 (EET)
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Ykis.view.sprav.TabDteplomer', {
    extend: 'Ext.form.Panel',
    alias: 'widget.tabdteplomer',

    requires: [
        'Ykis.view.sprav.TabDteplomerViewModel',
        'Ykis.view.sprav.TabDteplomerViewController',
        'Ext.form.Panel',
        'Ext.form.FieldSet',
        'Ext.form.field.ComboBox',
        'Ext.form.RadioGroup',
        'Ext.form.field.Radio',
        'Ext.form.field.Number',
        'Ext.button.Button',
        'Ext.form.Label',
        'Ext.grid.Panel',
        'Ext.view.Table',
        'Ext.grid.column.Action',
        'Ext.panel.Tool',
        'Ext.form.field.Date',
        'Ext.form.field.Hidden',
        'Ext.form.field.TextArea',
        'Ext.grid.column.Number',
        'Ext.grid.column.Date',
        'Ext.grid.feature.Grouping'
    ],

    controller: 'tabdteplomer',
    viewModel: {
        type: 'tabdteplomer'
    },
    height: 944,
    id: 'tabDteplomer',
    scrollable: true,
    layout: 'accordion',
    bodyPadding: 10,
    title: 'Б.Тепломір',
    defaultListenerScope: true,

    items: [
        {
            xtype: 'form',
            height: 680,
            id: 'fmDTeplomers',
            scrollable: true,
            style: {
                border: '0px'
            },
            bodyPadding: 10,
            icon: '',
            title: 'Технічна характеристика будинку',
            titleCollapse: true,
            items: [
                {
                    xtype: 'fieldset',
                    height: 660,
                    style: 'background-color: #e4dbdb;',
                    layout: 'absolute',
                    title: '',
                    items: [
                        {
                            xtype: 'combobox',
                            x: 275,
                            y: 10,
                            width: 365,
                            fieldLabel: 'Поверховість',
                            labelWidth: 90,
                            name: 'storeys_id',
                            displayField: 'name',
                            store: 'StHouseStoreys',
                            valueField: 'storeys_id'
                        },
                        {
                            xtype: 'combobox',
                            x: 5,
                            y: 45,
                            width: 360,
                            fieldLabel: 'ИТП',
                            labelWidth: 40,
                            name: 'itp_id',
                            displayField: 'name',
                            store: 'StItp',
                            valueField: 'itp_id'
                        },
                        {
                            xtype: 'radiogroup',
                            x: 650,
                            y: 10,
                            height: 95,
                            style: 'background-color: #f1eeee;',
                            width: 180,
                            fieldLabel: 'ГВП',
                            labelWidth: 30,
                            layout: {
                                type: 'vbox',
                                align: 'stretch'
                            },
                            items: [
                                {
                                    xtype: 'radiofield',
                                    name: 'gvs',
                                    boxLabel: 'внутрішньобудинкових',
                                    inputValue: '2'
                                },
                                {
                                    xtype: 'radiofield',
                                    name: 'gvs',
                                    boxLabel: 'централізоване',
                                    inputValue: '1'
                                },
                                {
                                    xtype: 'radiofield',
                                    name: 'gvs',
                                    boxLabel: 'відсутній',
                                    checked: true,
                                    inputValue: '0'
                                }
                            ]
                        },
                        {
                            xtype: 'checkboxfield',
                            x: 375,
                            y: 45,
                            width: 125,
                            fieldLabel: 'Єнергоаудит',
                            labelWidth: 80,
                            name: 'enaudit',
                            boxLabel: 'ні',
                            inputValue: '1',
                            uncheckedValue: '0',
                            listeners: {
                                change: {
                                    fn: 'onCheckboxfieldChange',
                                    scope: 'controller'
                                }
                            }
                        },
                        {
                            xtype: 'numberfield',
                            x: 380,
                            y: 80,
                            width: 260,
                            fieldLabel: 'Коефіцієнт для МЗК',
                            labelWidth: 130,
                            name: 'mop',
                            value: 0,
                            decimalPrecision: 1,
                            maxValue: 2,
                            minValue: -0.9,
                            step: 0.1
                        },
                        {
                            xtype: 'numberfield',
                            x: 510,
                            y: 45,
                            width: 130,
                            fieldLabel: 'ТНБ',
                            labelWidth: 40,
                            name: 'tnb',
                            value: 0,
                            hideTrigger: true,
                            decimalPrecision: 6
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {

                                //LOGIN & PASSWORD
                                var stUser = Ext.data.StoreManager.get("StUser");
                                var pvalues =stUser.getAt(0);
                                var login = pvalues.get('login');
                                var password = pvalues.get('password');
                                var house_id = pvalues.get('house_id');


                                var form = Ext.getCmp('fmDTeplomers');//Форма

                                var stHouses = Ext.data.StoreManager.get("StHousesTeplo");



                                var values=form.getValues();
                                var params = {
                                    login:login,
                                    password:password,
                                    what:'HouseUpdate',
                                    house_id:house_id
                                };
                                // console.log(values.address_id);
                                Ext.Object.merge(values, params);

                                // СОХРАНИТЬ ИЗМЕНЕНИЯ

                                QueryAddress.updateRecords(values,function(result){

                                    if (result){

                                        Ext.MessageBox.show({
                                            title: 'Обновление данных по дому!',
                                            msg: result.msg,
                                            buttons: Ext.MessageBox.OK,
                                            icon: Ext.MessageBox.INFO,
                                            buttonText:{
                                                ok: "Закрыть!"
                                            }
                                        });

                                        stHouses.load({
                                            params: {
                                                house_id: house_id,
                                                what:'HouseUpdateTeplo',
                                                login:login,
                                                password:password
                                            },
                                            callback: function(records,operation,success){
                                                var rec = records[0];

                                                if(success){

                                                    stHouses.sync();
                                                    form.getForm().loadRecord(rec);

                                                    Ext.MessageBox.show({
                                                        title: 'Обновление данных по дому!',
                                                        msg: 'Данные обновлены',
                                                        buttons: Ext.MessageBox.OK,
                                                        buttonText:{
                                                            ok: "Закрыть!"
                                                        },
                                                        icon: Ext.MessageBox.INFO
                                                    });
                                                }
                                            },
                                            scope:this
                                        });



                                    }else{
                                        Ext.MessageBox.show({
                                            title: 'Внесение изменений',
                                            msg: 'Произошла ошибка',
                                            buttons: Ext.MessageBox.OK,
                                            buttonText:{
                                                ok: "Закрыть!"
                                            },
                                            icon: Ext.MessageBox.WARNING
                                        });
                                    }
                                });

                            },
                            x: 835,
                            y: 80,
                            shadowOffset: 2,
                            border: '2px',
                            id: 'insTeploHouse',
                            width: 135,
                            enableToggle: true,
                            icon: 'resources/css/images/ico/yes22.png',
                            text: 'Оновить  дані'
                        },
                        {
                            xtype: 'label',
                            x: 0,
                            y: 10,
                            height: 25,
                            id: 'showHouse',
                            style: '{color: #D15706;text-align:center; text-shadow: -1px -1px white, 1px 1px #333;font-size:16pt;}',
                            width: 270,
                            text: 'Адрес'
                        },
                        {
                            xtype: 'fieldset',
                            x: 0,
                            y: 120,
                            height: 330,
                            style: 'background-color: #f1eeee;',
                            width: 970,
                            layout: 'absolute',
                            title: 'Технічна характеристика приладів обліку',
                            items: [
                                {
                                    xtype: 'textfield',
                                    x: 505,
                                    y: 5,
                                    width: 210,
                                    fieldLabel: 'Модель',
                                    labelWidth: 55,
                                    name: 'model',
                                    readOnly: true
                                },
                                {
                                    xtype: 'textfield',
                                    x: 720,
                                    y: 5,
                                    width: 115,
                                    fieldLabel: 'Од. вим',
                                    labelWidth: 60,
                                    name: 'edizm',
                                    readOnly: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 845,
                                    y: 5,
                                    width: 100,
                                    fieldLabel: 'коеф',
                                    labelWidth: 35,
                                    name: 'koef',
                                    readOnly: true,
                                    decimalPrecision: 5
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 505,
                                    y: 245,
                                    width: 195,
                                    fieldLabel: 'S(м&sup2;) усіх приміщень',
                                    labelWidth: 125,
                                    name: 'area',
                                    readOnly: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 505,
                                    y: 275,
                                    width: 205,
                                    fieldLabel: 'ТНБ  на 1 м&sup2;',
                                    labelWidth: 75,
                                    name: 'gkal_hour',
                                    readOnly: true,
                                    decimalPrecision: 13
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 800,
                                    y: 245,
                                    style: 'color:green;',
                                    width: 75,
                                    hideLabel: true,
                                    name: 'area_dt',
                                    readOnly: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 810,
                                    y: 275,
                                    style: 'color:green;',
                                    width: 125,
                                    hideLabel: true,
                                    name: 'tnb_dt',
                                    readOnly: true,
                                    decimalPrecision: 13
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 880,
                                    y: 35,
                                    style: 'color:green;',
                                    width: 65,
                                    hideLabel: true,
                                    name: 'gkal_otsa',
                                    readOnly: true,
                                    decimalPrecision: 3
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 880,
                                    y: 65,
                                    style: 'color:green;',
                                    width: 65,
                                    hideLabel: true,
                                    name: 'gkal_otta',
                                    readOnly: true,
                                    decimalPrecision: 3
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 880,
                                    y: 95,
                                    style: 'color:green;',
                                    width: 65,
                                    hideLabel: true,
                                    name: 'gkal_tra',
                                    readOnly: true,
                                    decimalPrecision: 3
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 880,
                                    y: 125,
                                    style: 'color:green;',
                                    width: 65,
                                    hideLabel: true,
                                    name: 'gkal_otso',
                                    readOnly: true,
                                    decimalPrecision: 3
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 880,
                                    y: 155,
                                    style: 'color:green;',
                                    width: 65,
                                    hideLabel: true,
                                    name: 'gkal_otto',
                                    readOnly: true,
                                    decimalPrecision: 3
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 880,
                                    y: 185,
                                    style: 'color:green;',
                                    width: 65,
                                    hideLabel: true,
                                    name: 'gkal_tro',
                                    readOnly: true,
                                    decimalPrecision: 3
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 880,
                                    y: 215,
                                    style: 'color:green;',
                                    width: 65,
                                    hideLabel: true,
                                    name: 'gkal_mop',
                                    readOnly: true,
                                    decimalPrecision: 3
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 880,
                                    y: 245,
                                    style: 'color:green;',
                                    width: 65,
                                    hideLabel: true,
                                    name: 'gkal_dt',
                                    readOnly: true,
                                    decimalPrecision: 3
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 505,
                                    y: 35,
                                    width: 370,
                                    fieldLabel: 'S(м&sup2;) житлових приміщень без приладів обліку',
                                    labelWidth: 290,
                                    name: 'area_dta',
                                    readOnly: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 505,
                                    y: 95,
                                    width: 370,
                                    fieldLabel: 'S(м&sup2;) житлових приміщень з приладами-розпод',
                                    labelWidth: 290,
                                    name: 'area_tra',
                                    readOnly: true,
                                    autoStripChars: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 505,
                                    y: 125,
                                    width: 370,
                                    fieldLabel: 'S(м&sup2;) нежитлових приміщень без приладів обліку',
                                    labelWidth: 290,
                                    name: 'area_dto',
                                    readOnly: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 505,
                                    y: 155,
                                    width: 370,
                                    fieldLabel: 'S(м&sup2;) нежитлових приміщень з приладами обліку',
                                    labelWidth: 290,
                                    name: 'area_to',
                                    readOnly: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 505,
                                    y: 185,
                                    width: 370,
                                    fieldLabel: 'S(м&sup2;) нежитлових приміщень з приладами-розпод',
                                    labelWidth: 290,
                                    name: 'area_tro',
                                    readOnly: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 505,
                                    y: 215,
                                    width: 370,
                                    fieldLabel: 'S(м&sup2;) МЗК та допоміжних приміщень',
                                    labelWidth: 290,
                                    name: 'area_mop',
                                    hideTrigger: true
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 505,
                                    y: 65,
                                    width: 370,
                                    fieldLabel: 'S(м&sup2;) житлових приміщень з приладами обліку',
                                    labelWidth: 290,
                                    name: 'area_ta',
                                    readOnly: true
                                },
                                {
                                    xtype: 'gridpanel',
                                    x: 0,
                                    y: 5,
                                    height: 175,
                                    id: 'grDteplomers',
                                    width: 490,
                                    title: 'Будинкові лічильники теплоти',
                                    store: 'StDTeplomer',
                                    viewConfig: {
                                        height: 93,
                                        emptyText: 'нет домовых тепломеров'
                                    },
                                    listeners: {
                                        selectionchange: 'onGrDteplomersSelectionChange'
                                    },
                                    columns: [
                                        {
                                            xtype: 'actioncolumn',
                                            width: 34,
                                            menuDisabled: true,
                                            items: [
                                                {
                                                    getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                                        metaData = 'x-grid-center-icon';
                                                        return metaData;
                                                    },
                                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                        Ext.MessageBox.confirm({
                                                            title: 'Замена домового тепломера',
                                                            msg: 'Вы заменяете домовой тепломер. <br>Подтвердите или отмените свои действия.',
                                                            buttons: Ext.MessageBox.OKCANCEL,
                                                            icon: Ext.MessageBox.ERROR,
                                                            buttonText:{
                                                                ok:'подтвеждаю',
                                                                cancel:'отмена'
                                                            },
                                                            fn:function(btn,newValue){
                                                                if(btn=='ok'){
                                                                    var winAddDTeplomer = Ext.ClassManager.instantiateByAlias('widget.winadddteplomer');
                                                                    var form = winAddDTeplomer.down('#fmAddDTeplomer');
                                                                    var stUser = Ext.data.StoreManager.get("StUser");
                                                                    var values =stUser.getAt(0);
                                                                    var value = record;//stVodomer.getAt(rowIndex).data;
                                                                    //LOGIKA'

                                                                    view.getSelectionModel().select(rowIndex);
                                                                    values.set({'vibor':'change_dteplomer','rowind':rowIndex});
                                                                    stUser.sync();
                                                                    form.down('#btAddDTeplomer').setText('Заменить тепломер');
                                                                    form.loadRecord(value);
                                                                    winAddDTeplomer.setTitle('Замена домового тепломера');
                                                                    winAddDTeplomer.show();
                                                                }
                                                            }
                                                        });
                                                    },
                                                    icon: 'resources/css/images/ico/no.png',
                                                    tooltip: 'Замена выбранного тепломера на новый'
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                if (record.get('out')===1){
                                                    metaData.tdCls = 'line-through';
                                                }
                                                return value;
                                            },
                                            width: 57,
                                            dataIndex: 'dteplomer_id',
                                            menuDisabled: true,
                                            text: 'дт'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                if (record.get('out')===1){
                                                    metaData.tdCls = 'line-through';
                                                }
                                                return value;
                                            },
                                            width: 143,
                                            dataIndex: 'nomer',
                                            menuDisabled: true,
                                            text: 'Номер'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                if (record.get('out')===1){
                                                    metaData.tdCls = 'line-through';
                                                }
                                                return value;
                                            },
                                            width: 83,
                                            dataIndex: 'vvod',
                                            menuDisabled: true,
                                            text: 'Ввод'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                if (record.get('out')===1){
                                                    metaData.tdCls = 'line-through';
                                                }
                                                return value;
                                            },
                                            width: 90,
                                            dataIndex: 'appartment',
                                            menuDisabled: true,
                                            text: 'квартири'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'first_app',
                                            text: 'Первая'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'last_app',
                                            text: 'Последняя'
                                        },
                                        {
                                            xtype: 'actioncolumn',
                                            id: 'btnOrgVodomerEdit',
                                            width: 30,
                                            menuDisabled: true,
                                            items: [
                                                {
                                                    getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                                        metaData = 'x-grid-center-icon';
                                                        return metaData;
                                                    },
                                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                        Ext.MessageBox.confirm({
                                                            title: 'Редагування приладу обліку',
                                                            msg: 'Ви редагуєте дані по приладу обліку <br> Підтвердіть або скасуйте свої дії.',
                                                            buttons: Ext.MessageBox.OKCANCEL,
                                                            icon: Ext.MessageBox.ERROR,
                                                            buttonText:{
                                                                ok:'підтверджую',
                                                                cancel:'скасувати'
                                                            },
                                                            fn:function(btn,newValue){
                                                                if(btn=='ok'){

                                                                    var dt = new Date();
                                                                    var fmDTeplomer = Ext.getCmp('fmDTeplomers');
                                                                    var tek = fmDTeplomer.getForm().findField('tek').getValue();

                                                                    var winAddDTeplomer = Ext.ClassManager.instantiateByAlias('widget.winadddteplomer');
                                                                    var form = winAddDTeplomer.down('#fmAddDTeplomer');
                                                                    var stUser = Ext.data.StoreManager.get("StUser");
                                                                    var values =stUser.getAt(0);
                                                                    switch (values.get('role')){
                                                                        case "7":
                                                                        form.down('#btnUpdateVvodDT').show();
                                                                    }
                                                                    var value = record;

                                                                    view.getSelectionModel().select(rowIndex);
                                                                    values.set({'vibor':'edit_dteplomer','rowind':rowIndex});
                                                                    stUser.sync();
                                                                    form.getForm().findField('tek').setFieldLabel('Поточні показання');

                                                                    form.down('#btAddDTeplomer').setText('Редагування приладу обліку');
                                                                    form.loadRecord(value);
                                                                    form.getForm().findField('tek').setValue(tek);
                                                                    winAddDTeplomer.setTitle('Редагування приладу обліку');
                                                                    winAddDTeplomer.show();
                                                                }
                                                            }
                                                        });


                                                    },
                                                    icon: 'resources/css/images/ico/edit.png',
                                                    tooltip: 'Редактировать тепломер'
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'actioncolumn',
                                            width: 30,
                                            menuDisabled: true,
                                            icon: 'resources/css/images/ico/no.png',
                                            items: [
                                                {
                                                    getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                                        var out = r.get('out');
                                                        if (out === 0 ) {
                                                            metaData = 'x-hide-display';
                                                        } else if (out === 1   ){
                                                            metaData = 'x-grid-center-icon';
                                                        }
                                                        return metaData;
                                                    },
                                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                        // in use
                                                        var me = this;
                                                        //STORE
                                                        var stUser = Ext.data.StoreManager.get("StUser");
                                                        var StAllPokDTeplomera = Ext.data.StoreManager.get("StAllPokDTeplomera");//QueryTeplomer.getResults  <AllPokDTeplomera>
                                                        var StTekPokDTeplomera = Ext.data.StoreManager.get("StTekPokDTeplomera");//QueryTeplomer.getResults <TekPokDTeplomera>
                                                        //LOGIN & PASSWORD

                                                        var values =stUser.getAt(0);
                                                        var params = {
                                                            login:values.get('login'),
                                                            password:values.get('password'),
                                                            house_id:values.get('house_id'),
                                                            what:"Dteplomer"
                                                        };
                                                        //GRID
                                                        var StDTeplomer = view.getStore();
                                                        var value = StDTeplomer.getAt(rowIndex).data;

                                                        //FORMA

                                                        var fmDteplomers = Ext.getCmp('fmDTeplomers');

                                                        //LOGIKA

                                                        Ext.Object.merge(value, params);
                                                        //console.log(value);

                                                        Ext.MessageBox.confirm({
                                                            title: 'Возвращение домового тепломера из поверки',
                                                            msg: 'Вы возвращаете тепломер с поверки <br>Подтвердите или отмените свои действия.',
                                                            buttons: Ext.MessageBox.OKCANCEL,
                                                            icon: Ext.MessageBox.ERROR,
                                                            buttonText:{
                                                                ok:'подтвеждаю',
                                                                cancel:'отмена'
                                                            },
                                                            fn:function(btn,newValue){
                                                                if(btn=='ok'){
                                                                    QueryTeplomer.outTeplomerHistory(value,function(results){
                                                                        if (results.success){
                                                                            StDTeplomer.load({
                                                                                params: {
                                                                                    what:'Dteplomer',
                                                                                    dteplomer_id: value.dteplomer_id,
                                                                                    house_id: value.house_id,
                                                                                    login:value.login,
                                                                                    password:value.password
                                                                                },
                                                                                callback: function(records,operation,success){
                                                                                    if(success){
                                                                                        view.getSelectionModel().select(rowIndex);
                                                                                        Ext.MessageBox.show({
                                                                                            title: 'Возвращение домового тепломера из поверки',
                                                                                            msg: results.msg,
                                                                                            buttons: Ext.MessageBox.OK,
                                                                                            icon: Ext.MessageBox.INFO
                                                                                        });
                                                                                    }
                                                                                },
                                                                                scope:this
                                                                            });
                                                                        }
                                                                    });
                                                                }
                                                            }
                                                        });
                                                    },
                                                    icon: 'resources/css/images/ico/door_out.png',
                                                    tooltip: 'Вернуть тепломер из поверки'
                                                },
                                                {
                                                    getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                                        //console.log(r);
                                                        var out = r.get('out');
                                                        //console.log(out);
                                                        if (out === 1 ) {
                                                            metaData = 'x-hide-display';
                                                            //console.log(1);
                                                        } else if (out === 0   ){
                                                            metaData = 'x-grid-center-icon';
                                                            // console.log(0);
                                                        }
                                                        return metaData;
                                                    },
                                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                        // in use
                                                        var me = this;
                                                        //STORE
                                                        var stUser = Ext.data.StoreManager.get("StUser");
                                                        var StAllPokDTeplomera = Ext.data.StoreManager.get("StAllPokDTeplomera");//QueryTeplomer.getResults  <AllPokDTeplomera>
                                                        var StTekPokDTeplomera = Ext.data.StoreManager.get("StTekPokDTeplomera");//QueryTeplomer.getResults <TekPokDTeplomera>
                                                        //LOGIN & PASSWORD

                                                        var values =stUser.getAt(0);
                                                        var params = {
                                                            login:values.get('login'),
                                                            password:values.get('password'),
                                                            house_id:values.get('house_id'),
                                                            what:"Dteplomer"
                                                        };
                                                        //GRID

                                                        var StDTeplomer = view.getStore();
                                                        var value = StDTeplomer.getAt(rowIndex).data;

                                                        //FORMA

                                                        var fmDteplomers = Ext.getCmp('fmDTeplomers');


                                                        //LOGIKA

                                                        Ext.Object.merge(value, params);
                                                        //console.log(value);

                                                        Ext.MessageBox.confirm({
                                                            title: 'Вывод домового тепломера на поверку',
                                                            msg: 'Вы выводите тепломер на поверку <br>Подтвердите или отмените свои действия.',
                                                            buttons: Ext.MessageBox.OKCANCEL,
                                                            icon: Ext.MessageBox.ERROR,
                                                            buttonText:{
                                                                ok:'подтвеждаю',
                                                                cancel:'отмена'
                                                            },
                                                            fn:function(btn,newValue){
                                                                if(btn=='ok'){
                                                                    QueryTeplomer.inTeplomerHistory(value,function(results){
                                                                        if (results.success){
                                                                            StDTeplomer.load({
                                                                                params: {
                                                                                    what:'Dteplomer',
                                                                                    dteplomer_id: value.dteplomer_id,
                                                                                    house_id: value.house_id,
                                                                                    login:value.login,
                                                                                    password:value.password
                                                                                },
                                                                                callback: function(records,operation,success){
                                                                                    if(success){
                                                                                        view.getSelectionModel().select(rowIndex);
                                                                                        Ext.MessageBox.show({
                                                                                            title: 'Вывод домового тепломера на поверку',
                                                                                            msg: results.msg,
                                                                                            buttons: Ext.MessageBox.OK,
                                                                                            icon: Ext.MessageBox.INFO
                                                                                        });
                                                                                    }
                                                                                },
                                                                                scope:this
                                                                            });
                                                                        }
                                                                    });
                                                                }
                                                            }
                                                        });
                                                    },
                                                    icon: 'resources/css/images/ico/maintenance_16.png',
                                                    tooltip: 'Вывод тепломера на поверку'
                                                }
                                            ]
                                        }
                                    ],
                                    tools: [
                                        {
                                            xtype: 'tool',
                                            id: 'toolAddTeplomer',
                                            type: 'plus'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        // in use
                                        var me = this;
                                        //STORE

                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var StTekPokDTeplomera = Ext.data.StoreManager.get("StTekPokDTeplomera");//QueryTeplomer.getResults <TekPokDTeplomera>


                                        //LOGIN & PASSWORD

                                        var values =stUser.getAt(0);
                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            house_id:values.get('house_id'),
                                            what:"UpdateAreaDteplomer"
                                        };

                                        //FORMA
                                        var fmDTeplomers = Ext.getCmp('fmDTeplomers');
                                        var value = fmDTeplomers.getValues();
                                        //LOGIKA

                                        Ext.Object.merge(value, params);

                                        QueryTeplomer.newPokTeplomera(value,function(data){
                                            Ext.MessageBox.confirm({
                                                title: 'Проверка вводимых данных',
                                                msg:data.msg,
                                                buttons: Ext.MessageBox.OK,
                                                icon: Ext.MessageBox.INFO
                                            });
                                            if (data.success){
                                                //console.log(data.success);
                                                fmDTeplomers.down('#newPokDTeplomera').setValue(0);
                                                StTekPokDTeplomera.load({
                                                    params: {
                                                        what:'TekPokDTeplomera',
                                                        dteplomer_id: value.dteplomer_id,
                                                        login:value.login,
                                                        password:value.password
                                                    },
                                                    callback: function(records,operation,success){
                                                        if(success){
                                                            //fmDTeplomers.getForm().loadRecord(records[0]);
                                                            fmDTeplomers.getForm().findField('area').setValue(records[0].data.area);
                                                            fmDTeplomers.getForm().findField('area_dt').setValue(records[0].data.area_dt);
                                                            fmDTeplomers.getForm().findField('area_dta').setValue(records[0].data.area_dta);
                                                            fmDTeplomers.getForm().findField('area_dto').setValue(records[0].data.area_dto);
                                                            fmDTeplomers.getForm().findField('area_ta').setValue(records[0].data.area_ta);
                                                            fmDTeplomers.getForm().findField('area_to').setValue(records[0].data.area_to);
                                                            fmDTeplomers.getForm().findField('area_tra').setValue(records[0].data.area_tra);
                                                            fmDTeplomers.getForm().findField('area_tro').setValue(records[0].data.area_tro);
                                                            fmDTeplomers.getForm().findField('tnb_dt').setValue(records[0].data.tnb_dt);

                                                            if(records[0].data.area !== records[0].data.area_dt){
                                                                fmDTeplomers.getForm().findField('area_dt').setFieldStyle('color: red;');
                                                            }
                                                            if(records[0].data.gkal_hour !== records[0].data.tnb_dt){
                                                                fmDTeplomers.getForm().findField('tnb_dt').setFieldStyle('color: red;');
                                                            }
                                                        }
                                                    },
                                                    scope:this
                                                });

                                            }
                                        });

                                    },
                                    x: 705,
                                    y: 245,
                                    shadowOffset: 2,
                                    id: 'insDteplomerSquare',
                                    width: 90,
                                    enableToggle: true,
                                    icon: 'resources/css/images/ico/xsldbg_refresh.png',
                                    text: 'Оновить',
                                    value: 'перевірити площа'
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        // in use
                                        var me = this;
                                        //STORE

                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var StTekPokDTeplomera = Ext.data.StoreManager.get("StTekPokDTeplomera");//QueryTeplomer.getResults <TekPokDTeplomera>


                                        //LOGIN & PASSWORD

                                        var values =stUser.getAt(0);
                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            house_id:values.get('house_id'),
                                            what:"FixAreaDteplomer"
                                        };

                                        //FORMA
                                        var fmDTeplomers = Ext.getCmp('fmDTeplomers');
                                        var value = fmDTeplomers.getValues();
                                        //LOGIKA

                                        Ext.Object.merge(value, params);

                                        QueryTeplomer.newPokTeplomera(value,function(data){
                                            Ext.MessageBox.confirm({
                                                title: 'Проверка вводимых данных',
                                                msg:data.msg,
                                                buttons: Ext.MessageBox.OK,
                                                icon: Ext.MessageBox.INFO
                                            });
                                            if (data.success){
                                                //console.log(data.success);
                                                fmDTeplomers.down('#newPokDTeplomera').setValue(0);
                                                StTekPokDTeplomera.load({
                                                    params: {
                                                        what:'TekPokDTeplomera',
                                                        dteplomer_id: value.dteplomer_id,
                                                        login:value.login,
                                                        password:value.password
                                                    },
                                                    callback: function(records,operation,success){
                                                        if(success){
                                                            //fmDTeplomers.getForm().loadRecord(records[0]);
                                                            fmDTeplomers.getForm().findField('gkal_hour').setValue(records[0].data.gkal_hour);
                                                            fmDTeplomers.getForm().findField('area').setValue(records[0].data.area);
                                                            fmDTeplomers.getForm().findField('area_dt').setValue(records[0].data.area_dt);
                                                            fmDTeplomers.getForm().findField('area_dta').setValue(records[0].data.area_dta);
                                                            fmDTeplomers.getForm().findField('area_dto').setValue(records[0].data.area_dto);
                                                            fmDTeplomers.getForm().findField('area_ta').setValue(records[0].data.area_ta);
                                                            fmDTeplomers.getForm().findField('area_to').setValue(records[0].data.area_to);
                                                            fmDTeplomers.getForm().findField('area_tra').setValue(records[0].data.area_tra);
                                                            fmDTeplomers.getForm().findField('area_tro').setValue(records[0].data.area_tro);
                                                            fmDTeplomers.getForm().findField('tnb_dt').setValue(records[0].data.tnb_dt);

                                                            if(records[0].data.area !== records[0].data.area_dt){
                                                                fmDTeplomers.getForm().findField('area_dt').setFieldStyle('color: red;');
                                                            }else{
                                                                fmDTeplomers.getForm().findField('area_dt').setFieldStyle('color:#000;');

                                                            }

                                                            if(records[0].data.gkal_hour !== records[0].data.tnb_dt){
                                                                fmDTeplomers.getForm().findField('tnb_dt').setFieldStyle('color: red;');
                                                            }else{
                                                                fmDTeplomers.getForm().findField('tnb_dt').setFieldStyle('color:#000;');

                                                            }
                                                        }
                                                    },
                                                    scope:this
                                                });

                                            }
                                        });

                                    },
                                    x: 715,
                                    y: 275,
                                    id: 'fixDteplomerSquare',
                                    width: 90,
                                    enableToggle: true,
                                    icon: 'resources/css/images/ico/yes22.png',
                                    text: 'Записать',
                                    tooltipType: 'title',
                                    value: 'зафіксувати площа'
                                },
                                {
                                    xtype: 'fieldset',
                                    x: 0,
                                    y: 185,
                                    height: 95,
                                    style: 'background-color: #f1eeee;',
                                    width: 490,
                                    layout: 'absolute',
                                    title: 'поточні показання',
                                    items: [
                                        {
                                            xtype: 'datefield',
                                            x: 175,
                                            y: 5,
                                            width: 130,
                                            fieldLabel: 'Дата',
                                            labelWidth: 40,
                                            name: 'data',
                                            readOnly: true,
                                            altFormats: 'd-m-Y|m/d/Y|n/j/Y|n/j/y|m/j/y|n/d/y|m/j/Y|n/d/Y|m-d-y|m-d-Y|m/d|m-d|md|mdy|mdY|d|Y-m-d|n-j|n/j',
                                            format: 'd-m-Y'
                                        },
                                        {
                                            xtype: 'numberfield',
                                            x: 5,
                                            y: 5,
                                            width: 150,
                                            fieldLabel: 'Ид пок',
                                            labelWidth: 60,
                                            name: 'pok_id',
                                            hideTrigger: true
                                        },
                                        {
                                            xtype: 'numberfield',
                                            x: 310,
                                            y: 5,
                                            width: 155,
                                            fieldLabel: 'попер',
                                            labelWidth: 50,
                                            name: 'pred',
                                            readOnly: true,
                                            decimalPrecision: 3
                                        },
                                        {
                                            xtype: 'numberfield',
                                            x: 5,
                                            y: 40,
                                            width: 150,
                                            fieldLabel: 'поточ',
                                            labelWidth: 40,
                                            name: 'tekp',
                                            readOnly: true,
                                            decimalPrecision: 3
                                        },
                                        {
                                            xtype: 'numberfield',
                                            x: 160,
                                            y: 40,
                                            width: 130,
                                            fieldLabel: 'ГКал',
                                            labelWidth: 40,
                                            name: 'gkal',
                                            readOnly: true,
                                            decimalPrecision: 6
                                        },
                                        {
                                            xtype: 'button',
                                            x: 295,
                                            y: 40,
                                            formBind: false,
                                            id: 'delTekPokDteplomera',
                                            width: 170,
                                            icon: 'resources/css/images/ico/no.png',
                                            text: 'видалити показання'
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'hiddenfield',
                            id: 'dteplomer_id',
                            width: 150,
                            labelWidth: 60,
                            name: 'dteplomer_id',
                            fieldStyle: 'color: green;'
                        },
                        {
                            xtype: 'fieldset',
                            x: 0,
                            y: 460,
                            height: 70,
                            style: 'background-color: #f1eeee;',
                            width: 970,
                            layout: 'absolute',
                            title: 'Ввод новых показаний',
                            items: [
                                {
                                    xtype: 'datefield',
                                    x: 0,
                                    y: 0,
                                    width: 200,
                                    fieldLabel: 'дата останніх показання',
                                    labelWidth: 90,
                                    name: 'date_do',
                                    format: 'd-m-Y',
                                    submitFormat: 'Ymd'
                                },
                                {
                                    xtype: 'datefield',
                                    x: 215,
                                    y: 0,
                                    width: 200,
                                    fieldLabel: 'дата акта показання',
                                    labelWidth: 80,
                                    name: 'date_tek',
                                    format: 'd-m-Y',
                                    submitFormat: 'Ymd'
                                },
                                {
                                    xtype: 'textfield',
                                    x: 420,
                                    y: 0,
                                    width: 180,
                                    fieldLabel: 'поточне показання',
                                    labelWidth: 80,
                                    name: 'tek'
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 605,
                                    y: 0,
                                    formBind: false,
                                    shadowOffset: 1,
                                    id: 'newPokDTeplomera',
                                    width: 170,
                                    fieldLabel: 'нове показання',
                                    labelWidth: 80,
                                    name: 'newValue',
                                    value: 0,
                                    allowBlank: false,
                                    hideTrigger: true,
                                    selectOnFocus: true,
                                    autoStripChars: true,
                                    decimalPrecision: 3,
                                    minValue: 0,
                                    negativeText: 'Значение должно быть больше 1'
                                },
                                {
                                    xtype: 'button',
                                    x: 780,
                                    y: 5,
                                    shadowOffset: 2,
                                    border: '2px',
                                    id: 'insTekPokDTeplomer',
                                    width: 160,
                                    icon: 'resources/css/images/ico/yes22.png',
                                    text: 'Записати показання'
                                },
                                {
                                    xtype: 'button',
                                    x: 780,
                                    y: 5,
                                    shadowOffset: 2,
                                    border: '2px',
                                    hidden: true,
                                    id: 'insGkalDTeplomer',
                                    width: 160,
                                    icon: 'resources/css/images/ico/yes22.png',
                                    text: 'Начислить по S(м&sup2;) '
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            x: 0,
                            y: 540,
                            height: 100,
                            style: 'background-color: #f1eeee;',
                            width: 970,
                            layout: 'absolute',
                            title: 'Перерасчет',
                            items: [
                                {
                                    xtype: 'datefield',
                                    x: 0,
                                    y: 20,
                                    width: 160,
                                    fieldLabel: 'Период',
                                    labelWidth: 50,
                                    name: 'data_perer',
                                    allowBlank: false,
                                    format: 'F, Y',
                                    startDay: 1,
                                    submitFormat: 'Ymd',
                                    listeners: {
                                        select: 'onDatefieldSelect1'
                                    }
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 760,
                                    y: 5,
                                    width: 140,
                                    fieldLabel: 'Гкал',
                                    labelWidth: 45,
                                    name: 'gkal_perer',
                                    allowBlank: false,
                                    hideTrigger: true,
                                    decimalPrecision: 6
                                },
                                {
                                    xtype: 'button',
                                    x: 750,
                                    y: 35,
                                    formBind: true,
                                    shadowOffset: 2,
                                    border: '2px',
                                    id: 'insPererDTeplomer',
                                    width: 190,
                                    enableToggle: true,
                                    icon: 'resources/css/images/ico/yes22.png',
                                    text: 'Перерасчет по Гкал'
                                },
                                {
                                    xtype: 'textareafield',
                                    x: 170,
                                    y: 5,
                                    width: 555,
                                    fieldLabel: 'причина',
                                    labelWidth: 70,
                                    name: 'note',
                                    allowBlank: false,
                                    grow: true
                                }
                            ]
                        },
                        {
                            xtype: 'combobox',
                            x: 5,
                            y: 80,
                            width: 360,
                            fieldLabel: 'Тип будови',
                            labelWidth: 80,
                            name: 'typeh_id',
                            value: 0,
                            editable: false,
                            displayField: 'name',
                            queryMode: 'local',
                            store: 'StSprTypeSH',
                            valueField: 'type_id'
                        }
                    ]
                },
                {
                    xtype: 'gridpanel',
                    id: 'grHeatHouse',
                    title: 'Нарахування по БЛТ',
                    store: 'StAllPokDTeplomera',
                    columns: [
                        {
                            xtype: 'numbercolumn',
                            width: 72,
                            dataIndex: 'pok_id',
                            menuDisabled: true,
                            text: 'Пок ид',
                            format: '0'
                        },
                        {
                            xtype: 'gridcolumn',
                            menuDisabled: true,
                            text: 'Період введення показань',
                            columns: [
                                {
                                    xtype: 'numbercolumn',
                                    width: 50,
                                    dataIndex: 'god',
                                    menuDisabled: true,
                                    text: 'год',
                                    format: '0'
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 85,
                                    align: 'center',
                                    dataIndex: 'date_do',
                                    menuDisabled: true,
                                    text: 'Місяц',
                                    format: 'F'
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 85,
                                    align: 'center',
                                    dataIndex: 'date_ot',
                                    menuDisabled: true,
                                    text: 'Поперед',
                                    format: 'd-m-y'
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 85,
                                    align: 'center',
                                    dataIndex: 'date_do',
                                    menuDisabled: true,
                                    text: 'Поточні',
                                    format: 'd-m-y'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 51,
                                    dataIndex: 'day_dt',
                                    menuDisabled: true,
                                    text: 'Днів',
                                    format: '0'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 50,
                                    dataIndex: 'temp',
                                    menuDisabled: true,
                                    text: 't&#176;С',
                                    format: '0.0'
                                }
                            ]
                        },
                        {
                            xtype: 'numbercolumn',
                            menuDisabled: true,
                            text: ' Показанння ДТ',
                            format: '0.00',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    menuDisabled: true,
                                    text: 'Площа',
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                var n =Ext.util.Format.number(value,'0,000.00');
                                                if (record.get('darea_dt')=== record.get('area_dt')) {
                                                    return '<span style="color:#000;">' + n + '</span>';
                                                } else  {
                                                    return '<span style="color:red;">' + n + '</span>';
                                                }
                                            },
                                            width: 75,
                                            dataIndex: 'area_dt',
                                            menuDisabled: true,
                                            text: 'S(м&sup2;)'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'gridcolumn',
                                    menuDisabled: true,
                                    text: 'Нараховано',
                                    columns: [
                                        {
                                            xtype: 'numbercolumn',
                                            width: 84,
                                            dataIndex: 'pred',
                                            menuDisabled: true,
                                            text: 'Поперед',
                                            format: '0.000'
                                        },
                                        {
                                            xtype: 'numbercolumn',
                                            width: 85,
                                            dataIndex: 'tek',
                                            menuDisabled: true,
                                            text: 'Поточні',
                                            format: '0.000'
                                        },
                                        {
                                            xtype: 'numbercolumn',
                                            width: 75,
                                            dataIndex: 'gkal_dt',
                                            menuDisabled: true,
                                            text: 'Гкал',
                                            format: '0.000'
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'gridcolumn',
                            menuDisabled: true,
                            text: 'Площа / Гкал житлових приміщень',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    menuDisabled: true,
                                    text: 'без приладів обліку',
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                var n =Ext.util.Format.number(value,'0,000.00');
                                                if (record.get('darea_dta')=== record.get('area_dta')) {
                                                    return '<span style="color:#000;">' + n + '</span>';
                                                } else  {
                                                    return '<span style="color:red;">' + n + '</span>';
                                                }
                                            },
                                            width: 75,
                                            dataIndex: 'area_dta',
                                            menuDisabled: true,
                                            text: 'S(м&sup2;)'
                                        },
                                        {
                                            xtype: 'numbercolumn',
                                            width: 75,
                                            dataIndex: 'gkal_dta',
                                            menuDisabled: true,
                                            text: 'Гкал',
                                            format: '0.000'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'gridcolumn',
                                    menuDisabled: true,
                                    text: 'з приладів обліку',
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                var n =Ext.util.Format.number(value,'0,000.00');
                                                if (record.get('darea_ta')=== record.get('area_ta')) {
                                                    return '<span style="color:#000;">' + n + '</span>';
                                                } else  {
                                                    return '<span style="color:red;">' + n + '</span>';
                                                }
                                            },
                                            width: 75,
                                            dataIndex: 'area_ta',
                                            menuDisabled: true,
                                            text: 'S(м&sup2;)'
                                        },
                                        {
                                            xtype: 'numbercolumn',
                                            width: 75,
                                            dataIndex: 'gkal_ta',
                                            menuDisabled: true,
                                            text: 'Гкал',
                                            format: '0.000'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'gridcolumn',
                                    menuDisabled: true,
                                    text: 'з прилад-розпод',
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                var n =Ext.util.Format.number(value,'0,000.00');
                                                if (record.get('darea_tra')=== record.get('area_tra')) {
                                                    return '<span style="color:#000;">' + n + '</span>';
                                                } else  {
                                                    return '<span style="color:red;">' + n + '</span>';
                                                }
                                            },
                                            width: 75,
                                            dataIndex: 'area_tra',
                                            menuDisabled: true,
                                            text: 'S(м&sup2;)'
                                        },
                                        {
                                            xtype: 'numbercolumn',
                                            width: 70,
                                            dataIndex: 'gkal_tra',
                                            menuDisabled: true,
                                            text: 'Гкал',
                                            format: '0.000'
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'gridcolumn',
                            menuDisabled: true,
                            text: 'Площа / Гкал нежитлових приміщень',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    menuDisabled: true,
                                    text: 'без приладів обліку',
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                var n =Ext.util.Format.number(value,'0,000.00');
                                                if (record.get('darea_dto')=== record.get('area_dto')) {
                                                    return '<span style="color:#000;">' + n + '</span>';
                                                } else  {
                                                    return '<span style="color:red;">' + n + '</span>';
                                                }
                                            },
                                            width: 75,
                                            dataIndex: 'area_dto',
                                            menuDisabled: true,
                                            text: 'S(м&sup2;)'
                                        },
                                        {
                                            xtype: 'numbercolumn',
                                            width: 75,
                                            dataIndex: 'gkal_dto',
                                            menuDisabled: true,
                                            text: 'Гкал',
                                            format: '0.000'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'gridcolumn',
                                    menuDisabled: true,
                                    text: 'з приладів обліку',
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                var n =Ext.util.Format.number(value,'0,000.00');
                                                if (record.get('darea_to')=== record.get('area_to')) {
                                                    return '<span style="color:#000;">' + n + '</span>';
                                                } else  {
                                                    return '<span style="color:red;">' + n + '</span>';
                                                }
                                            },
                                            width: 75,
                                            dataIndex: 'area_to',
                                            menuDisabled: true,
                                            text: 'S(м&sup2;)'
                                        },
                                        {
                                            xtype: 'numbercolumn',
                                            width: 75,
                                            dataIndex: 'gkal_to',
                                            menuDisabled: true,
                                            text: 'Гкал',
                                            format: '0.000'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'gridcolumn',
                                    menuDisabled: true,
                                    text: 'з прилад-розпод',
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                var n =Ext.util.Format.number(value,'0,000.00');
                                                if (record.get('darea_tro')=== record.get('area_tro')) {
                                                    return '<span style="color:#000;">' + n + '</span>';
                                                } else  {
                                                    return '<span style="color:red;">' + n + '</span>';
                                                }
                                            },
                                            width: 75,
                                            dataIndex: 'area_tro',
                                            menuDisabled: true,
                                            text: 'S(м&sup2;)'
                                        },
                                        {
                                            xtype: 'numbercolumn',
                                            width: 70,
                                            dataIndex: 'gkal_tro',
                                            menuDisabled: true,
                                            text: 'Гкал',
                                            format: '0.000'
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'numbercolumn',
                            menuDisabled: true,
                            text: 'Площа / Гкал ',
                            format: '0.00',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    menuDisabled: true,
                                    text: 'МЗК',
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                var n =Ext.util.Format.number(value,'0,000.00');
                                                if (record.get('darea_mop')=== record.get('area_mop')) {
                                                    return '<span style="color:#000;">' + n + '</span>';
                                                } else  {
                                                    return '<span style="color:red;">' + n + '</span>';
                                                }
                                            },
                                            width: 75,
                                            dataIndex: 'area_mop',
                                            menuDisabled: true,
                                            text: 'S(м&sup2;)'
                                        },
                                        {
                                            xtype: 'numbercolumn',
                                            width: 70,
                                            dataIndex: 'gkal_mop',
                                            menuDisabled: true,
                                            text: 'Гкал',
                                            format: '0.000'
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'operator',
                            text: 'Оператор'
                        }
                    ],
                    features: [
                        {
                            ftype: 'grouping'
                        }
                    ],
                    tools: [
                        {
                            xtype: 'tool',
                            callback: function(owner, tool, event) {
                                var tabPnCenter =  Ext.getCmp('tabPnCenter');
                                var stUser = Ext.data.StoreManager.get("StUser");

                                var values =stUser.getAt(0);
                                var params = {
                                    login:values.get('login'),
                                    password:values.get('password'),
                                };


                                var fmDTeplomers = Ext.getCmp('fmDTeplomers');
                                var value = fmDTeplomers.getValues();
                                //LOGIKA

                                Ext.Object.merge(value, params);
                                var dteplomer_id =  value.dteplomer_id;

                                if (dteplomer_id) {

                                    var report = 'Dteplomer_history';
                                    var namereport = 'История показ';

                                    var value = {
                                        login:value.login,
                                        password:value.password,
                                        report:report,
                                        what:report,
                                        dteplomer_id: dteplomer_id

                                    };

                                    var tab = tabPnCenter.child('#'+report);

                                    if (!tab) {
                                        tab  = tabPnCenter.add({
                                            xtype:'tabreportorg',
                                            title:namereport,
                                            id:''+report+''
                                        });

                                        tabPnCenter.setActiveTab(tab);

                                    }else{

                                        tabPnCenter.setActiveTab(tab);
                                    }

                                    var reppan = tab.getComponent(0);



                                    QueryReport.getResults(value,function(data){
                                        if (data){
                                            reppan.update(data.content);
                                            Ext.REPORTCONTENT =data.content;
                                            Ext.REPORTSQL =data.sql;
                                            Ext.REPORTTITLE =report;


                                        } else {
                                            Ext.MessageBox.show({
                                                title: 'Ошибка ',
                                                msg: 'Документ не создан',
                                                buttons: Ext.MessageBox.OK,
                                                icon: Ext.MessageBox.ERROR
                                            });
                                        }
                                    });
                                }
                                else
                                {
                                    Ext.MessageBox.show({
                                        title: 'Ошибка ',
                                        msg: 'Не выбран домовой тепломер',
                                        buttons: Ext.MessageBox.OK,
                                        icon: Ext.MessageBox.ERROR
                                    });
                                }
                            },
                            type: 'print'
                        }
                    ]
                }
            ],
            listeners: {
                expand: 'onFmDTeplomersExpand'
            }
        },
        {
            xtype: 'gridpanel',
            id: 'grAktP',
            collapsed: true,
            collapsible: true,
            title: 'Акт претензії',
            store: 'StAktClaim',
            columns: [
                {
                    xtype: 'actioncolumn',
                    width: 36,
                    menuDisabled: true,
                    tooltip: 'Редактировать',
                    items: [
                        {
                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                var winAddAktClaim = Ext.ClassManager.instantiateByAlias('widget.winaddaktclaim');
                                var form = winAddAktClaim.down('#fnAddAktClaim');
                                var stUser = Ext.data.StoreManager.get("StUser");
                                var values =stUser.getAt(0);
                                var value = record;

                                values.set({'vibor':'editAktClaim'});
                                stUser.sync();
                                form.loadRecord(value);
                                form.down('#btnInsertAktClaim').setText('Обновить акт');
                                winAddAktClaim.show();
                            },
                            icon: 'resources/css/images/ico/edit.png',
                            tooltip: 'Редактировать'
                        }
                    ]
                },
                {
                    xtype: 'gridcolumn',
                    width: 122,
                    dataIndex: 'nomer',
                    menuDisabled: true,
                    text: 'Акт №'
                },
                {
                    xtype: 'datecolumn',
                    width: 137,
                    dataIndex: 'data',
                    menuDisabled: true,
                    text: 'Период',
                    format: 'F,Y'
                },
                {
                    xtype: 'numbercolumn',
                    hidden: true,
                    dataIndex: 'dteplomer_id',
                    format: '00'
                },
                {
                    xtype: 'numbercolumn',
                    hidden: true,
                    dataIndex: 'pok_id',
                    format: '00'
                },
                {
                    xtype: 'gridcolumn',
                    width: 89,
                    dataIndex: 'address_id',
                    menuDisabled: true,
                    text: 'адреса ид'
                },
                {
                    xtype: 'gridcolumn',
                    width: 226,
                    dataIndex: 'address',
                    menuDisabled: true,
                    text: 'адреса'
                },
                {
                    xtype: 'numbercolumn',
                    dataIndex: 'square',
                    menuDisabled: true,
                    text: 'S(м&sup2;) '
                },
                {
                    xtype: 'numbercolumn',
                    dataIndex: 'temp',
                    menuDisabled: true,
                    text: 't&#176;С',
                    format: '0'
                },
                {
                    xtype: 'numbercolumn',
                    dataIndex: 'gkal',
                    menuDisabled: true,
                    text: 'Гкал',
                    format: '0,000.000'
                },
                {
                    xtype: 'actioncolumn',
                    editRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var val="";
                        return val;
                    },
                    width: 30,
                    menuDisabled: true,
                    altText: 'Удалить запись',
                    icon: 'css/images/ico/no.png',
                    items: [
                        {
                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                var grid = view.findParentByType('grid');
                                var store = view.getStore();
                                Ext.MessageBox.show({
                                    title: 'Внимание!',
                                    msg: 'Вы удаляете запись ! Подтвердите или отмените свои действия!',
                                    buttons: Ext.MessageBox.OKCANCEL,
                                    icon: Ext.MessageBox.WARNING,

                                    buttonText:{
                                        ok: "Удалить!",
                                        cancel: "Отмена"
                                    },
                                    fn:function(btn){
                                        if(btn=='ok'){
                                            // view.getStore().removeAt(rowIndex);
                                            store.remove(record);

                                            store.sync({
                                                success: function(){
                                                    Ext.MessageBox.show({title: 'Удаление записи',
                                                        msg:'Запись удалена',
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.INFO
                                                    });
                                                },
                                                failure: function(){
                                                    Ext.MessageBox.show({title: 'Удаление записи',
                                                        msg:'Запись не удалена',
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.ERROR
                                                    });

                                                },
                                                scope: this
                                            });
                                        }
                                    }

                                });
                            },
                            icon: 'resources/css/images/ico/no.png'
                        }
                    ]
                }
            ],
            tools: [
                {
                    xtype: 'tool',
                    tooltip: 'Додати акт претензії',
                    tooltipType: 'title',
                    type: 'save',
                    listeners: {
                        click: 'onToolClick1'
                    }
                }
            ]
        },
        {
            xtype: 'gridpanel',
            id: 'grHDteplomer',
            overCls: 'grHist',
            collapsed: true,
            collapsible: true,
            title: 'Будинкові лічильники теплоти зняті з обліку',
            titleCollapse: true,
            store: 'StHDTeplomer',
            columns: [
                {
                    xtype: 'numbercolumn',
                    width: 55,
                    dataIndex: 'dteplomer_id',
                    menuDisabled: true,
                    text: 'Ид ДТ',
                    format: '0'
                },
                {
                    xtype: 'datecolumn',
                    width: 80,
                    text: 'Дата ВВ',
                    format: 'd-m-Y'
                },
                {
                    xtype: 'gridcolumn',
                    width: 129,
                    dataIndex: 'model',
                    menuDisabled: true,
                    text: 'Модель'
                },
                {
                    xtype: 'gridcolumn',
                    width: 99,
                    dataIndex: 'nomer',
                    menuDisabled: true,
                    text: 'Номер'
                },
                {
                    xtype: 'gridcolumn',
                    width: 78,
                    dataIndex: 'vvod',
                    menuDisabled: true,
                    text: 'Ввод'
                },
                {
                    xtype: 'gridcolumn',
                    width: 88,
                    dataIndex: 'appartment',
                    menuDisabled: true,
                    text: 'Квартиры'
                },
                {
                    xtype: 'numbercolumn',
                    width: 74,
                    dataIndex: 'area',
                    menuDisabled: true,
                    text: 'S дома'
                },
                {
                    xtype: 'gridcolumn',
                    width: 67,
                    dataIndex: 'edizm',
                    menuDisabled: true,
                    text: 'Ед.изм'
                },
                {
                    xtype: 'numbercolumn',
                    width: 72,
                    dataIndex: 'korf',
                    menuDisabled: true,
                    text: 'Коэф'
                },
                {
                    xtype: 'datecolumn',
                    width: 80,
                    dataIndex: 'data_spis',
                    menuDisabled: true,
                    text: 'Списан'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'operator',
                    menuDisabled: true,
                    text: 'Оператор'
                },
                {
                    xtype: 'actioncolumn',
                    maxWidth: 30,
                    minWidth: 30,
                    width: 30,
                    flex: 1,
                    items: [
                        {
                            getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                metaData = 'x-grid-center-icon';
                                return metaData;
                            },
                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                // in use
                                var me = this;
                                //STORE

                                var stUser = Ext.data.StoreManager.get("StUser");
                                var stWater = Ext.data.StoreManager.get("StWater");//QueryVodomer.getResults  <AllPokVodomera>
                                var stTekPokVodomera = Ext.data.StoreManager.get("StTekPokVodomera");//QueryVodomer.getResults <TekPokVodomera>
                                var stVodomer = Ext.data.StoreManager.get("StVodomer");//QueryVodomer.getResults <AppHVodomer>
                                //LOGIN & PASSWORD

                                var values =stUser.getAt(0);
                                var params = {
                                    login:values.get('login'),
                                    password:values.get('password'),
                                    address_id:values.get('address_id'),
                                    house_id:values.get('house_id')
                                };
                                //GRID

                                var stHVodomer = view.getStore();
                                var value = stHVodomer.getAt(rowIndex).data;

                                //LOGIKA

                                Ext.Object.merge(value, params);
                                //console.log(value);

                                Ext.MessageBox.confirm({
                                    title: 'Удаление счетчика воды безвозвратно',
                                    msg: 'Вы безвозвратно удаляете счетчик <br>тип воды <b>'+value.voda+
                                    '</b> <br>Место установки <b>'+value.place+
                                    '</b><br>Подтвердите или отмените свои действия.',
                                    buttons: Ext.MessageBox.OKCANCEL,
                                    icon: Ext.MessageBox.ERROR,
                                    buttonText:{
                                        ok:'подтвеждаю',
                                        cancel:'отмена'
                                    },
                                    fn:function(btn,newValue){
                                        if(btn=='ok'){
                                            QueryVodomer.delVodomer(value,function(results){
                                                if (results.success){
                                                    stWater.removeAll();
                                                    stVodomer.removeAll();
                                                    stTekPokVodomera.removeAll();
                                                    stHVodomer.removeAll();
                                                    stVodomer.load({
                                                        params: {
                                                            what:'AppVodomer',
                                                            address_id: value.address_id,
                                                            login:value.login,
                                                            password:value.password
                                                        },
                                                        scope:this
                                                    });
                                                    stVodomer.sync();
                                                    stHVodomer.load({
                                                        params: {
                                                            what:'AppHVodomer',
                                                            address_id: value.address_id,
                                                            login:value.login,
                                                            password:value.password
                                                        },
                                                        scope:this
                                                    });
                                                    stHVodomer.sync();
                                                    view.refresh();
                                                    setTimeout(function(){
                                                        Ext.MessageBox.show({
                                                            title: 'Удаление счетчика воды безвозвратно',
                                                            msg: results.msg,
                                                            buttons: Ext.MessageBox.OK,
                                                            icon: Ext.MessageBox.INFO
                                                        });
                                                    }, 500);
                                                }
                                            });
                                        }
                                    }
                                });
                            },
                            icon: 'resources/css/images/ico/no.png',
                            tooltip: 'Удалить  водомер безвозвратно'
                        }
                    ]
                }
            ]
        },
        {
            xtype: 'gridpanel',
            id: 'grOrgByDteplomer',
            collapsed: true,
            collapsible: true,
            title: 'Об\'єкти на домовому лічильнику тепла',
            store: 'StOrgByDteplomer',
            columns: [
                {
                    xtype: 'actioncolumn',
                    maxWidth: 25,
                    minWidth: 25,
                    width: 112,
                    menuDisabled: true,
                    items: [
                        {
                            getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                // in use

                                var stUser = Ext.data.StoreManager.get("StUser");

                                //LOGIN & PASSWORD
                                var values =stUser.getAt(0);
                                var dteplomer_id = values.get('dteplomer_id');


                                var dt = r.get('dteplomer_id');
                                if (dt === dteplomer_id ) {
                                    metaData = 'x-hide-display';
                                } else if (dt != dteplomer_id ) {
                                    metaData = 'x-grid-center-icon';
                                } else {
                                    metaData = 'x-grid-center-icon';
                                }
                                return metaData;
                            },
                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                // in use
                                var me = this;
                                //STORE
                                var stUser = Ext.data.StoreManager.get("StUser");
                                var StOrgByDteplomer = Ext.data.StoreManager.get("StOrgByDteplomer");//QueryTeplomer.getResults
                                var stFilial = Ext.data.StoreManager.get("StFilial");//QueryOrg.getResults  <FmFilial>


                                //LOGIN & PASSWORD

                                var values =stUser.getAt(0);
                                var params = {
                                    login:values.get('login'),
                                    password:values.get('password'),
                                    house_id:values.get('house_id'),
                                    dteplomer_id:values.get('dteplomer_id'),
                                    what:'addFilialDteplomer'
                                };
                                //GRID
                                var store = view.getStore();
                                var value = store.getAt(rowIndex).data;

                                //LOGIKA

                                Ext.Object.merge(value, params);
                                //console.log(value);
                                QueryOrg.updateRecords(value,function(results){
                                    if (results.success){
                                        store.load({
                                            params: {
                                                house_id: value.house_id,
                                                login:value.login,
                                                password:value.password,
                                                filial_id:value.filial_id,
                                                dteplomer_id:value.dteplomer_id
                                            },
                                            scope:this
                                        });
                                        view.refresh();
                                    }
                                });

                            },
                            icon: 'resources/css/images/ico/add.png',
                            tooltip: 'добавить обьект к вводу (Дводомеру)'
                        },
                        {
                            getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                // in use

                                var stUser = Ext.data.StoreManager.get("StUser");

                                //LOGIN & PASSWORD
                                var values =stUser.getAt(0);
                                var dteplomer_id = values.get('dteplomer_id');


                                var dt = r.get('dteplomer_id');
                                if (dt != dteplomer_id ) {
                                    metaData = 'x-hide-display';
                                } else if (dt === dteplomer_id ) {
                                    metaData = 'x-grid-center-icon';
                                } else {
                                    metaData = 'x-grid-center-icon';
                                }
                                return metaData;
                            },
                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                // in use
                                var me = this;
                                //STORE
                                var stUser = Ext.data.StoreManager.get("StUser");
                                var StOrgByDteplomer = Ext.data.StoreManager.get("StOrgByDteplomer");//QueryTeplomer.getResults
                                var stFilial = Ext.data.StoreManager.get("StFilial");//QueryOrg.getResults  <FmFilial>


                                //LOGIN & PASSWORD

                                var values =stUser.getAt(0);
                                var params = {
                                    login:values.get('login'),
                                    password:values.get('password'),
                                    house_id:values.get('house_id'),
                                    dteplomer_id:values.get('dteplomer_id'),
                                    what:'delFilialDteplomer'
                                };
                                //GRID
                                var store = view.getStore();
                                var value = store.getAt(rowIndex).data;

                                //LOGIKA

                                Ext.Object.merge(value, params);
                                //console.log(value);
                                QueryOrg.updateRecords(value,function(results){
                                    if (results.success){
                                        store.load({
                                            params: {
                                                house_id: value.house_id,
                                                login:value.login,
                                                password:value.password,
                                                filial_id:value.filial_id,
                                                dteplomer_id:value.dteplomer_id
                                            },
                                            scope:this
                                        });
                                        view.refresh();
                                    }
                                });

                            },
                            icon: 'resources/css/images/ico/delete.png',
                            tooltip: 'удалить обьект из  ввода (Дводомера)'
                        }
                    ]
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        return Ext.String.format('<div  <b>{0}</b><br><span >{1} </span></div>',
                        value,
                        record.get('name') || "");
                    },
                    width: 271,
                    dataIndex: 'fname',
                    text: 'Найменування об\'єкта'
                },
                {
                    xtype: 'numbercolumn',
                    width: 77,
                    align: 'center',
                    dataIndex: 'area',
                    menuDisabled: true,
                    text: 'Площ',
                    format: '0.00'
                },
                {
                    xtype: 'numbercolumn',
                    width: 64,
                    align: 'center',
                    dataIndex: 'volume',
                    menuDisabled: true,
                    text: 'Объем',
                    format: '0.00'
                },
                {
                    xtype: 'numbercolumn',
                    hidden: true,
                    width: 32,
                    dataIndex: 'visota',
                    text: 'Выс',
                    format: '0.00'
                },
                {
                    xtype: 'numbercolumn',
                    width: 46,
                    align: 'center',
                    dataIndex: 'people',
                    menuDisabled: true,
                    text: 'Чел',
                    format: '0'
                },
                {
                    xtype: 'numbercolumn',
                    width: 110,
                    align: 'center',
                    dataIndex: 'gkal_h_ot',
                    menuDisabled: true,
                    text: 'ТНБ 1 м&sup2; ',
                    format: '0.000000'
                },
                {
                    xtype: 'numbercolumn',
                    width: 79,
                    align: 'center',
                    dataIndex: 'gkal',
                    menuDisabled: true,
                    text: 'Гкал',
                    format: '0.000'
                },
                {
                    xtype: 'numbercolumn',
                    width: 67,
                    dataIndex: 'nrx_gvs_d',
                    menuDisabled: true,
                    text: 'НРГВ',
                    format: '0'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        switch (value) {
                            case true:
                            metaData='<span><img clas="icon" src="resources/css/images/ico/yes.png"/></span>';
                            break;
                            case false:
                            metaData='<span><img clas="icon" src="resources/css/images/ico/no.png"/></span>';
                            break;
                        }
                        return metaData;

                    },
                    width: 34,
                    dataIndex: 'vkl_otopl',
                    menuDisabled: true,
                    text: 'От'
                },
                {
                    xtype: 'numbercolumn',
                    hidden: true,
                    width: 40,
                    dataIndex: 'dteplomer_id',
                    menuDisabled: true,
                    text: 'ДТ',
                    tooltip: 'Ид домового тепломера',
                    format: '0'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        switch (value) {
                            case true:
                            metaData='<span><img clas="icon" src="resources/css/images/ico/yes.png"/></span>';
                            break;
                            case false:
                            metaData='<span><img clas="icon" src="resources/css/images/ico/no.png"/></span>';
                            break;
                        }
                        return metaData;

                    },
                    width: 43,
                    dataIndex: 'vkl_gvoda',
                    menuDisabled: true,
                    text: 'ГВC'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        switch (value) {
                            case true:
                            metaData='<span><img clas="icon" src="resources/css/images/ico/yes.png"/></span>';
                            break;
                            case false:
                            metaData='<span><img clas="icon" src="resources/css/images/ico/no.png"/></span>';
                            break;
                        }
                        return metaData;

                    },
                    hidden: true,
                    width: 28,
                    dataIndex: 'vkl_xvoda',
                    text: 'ХВ'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        switch (value) {
                            case true:
                            metaData='<span><img clas="icon" src="resources/css/images/ico/yes.png"/></span>';
                            break;
                            case false:
                            metaData='<span><img clas="icon" src="resources/css/images/ico/no.png"/></span>';
                            break;
                        }
                        return metaData;

                    },
                    hidden: true,
                    width: 26,
                    dataIndex: 'vkl_stoki',
                    text: 'Ст'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        switch (value) {
                            case true:
                            metaData='<span><img clas="icon" src="resources/css/images/ico/yes.png"/></span>';
                            break;
                            case false:
                            metaData='<span><img clas="icon" src="resources/css/images/ico/no.png"/></span>';
                            break;
                        }
                        return metaData;

                    },
                    width: 53,
                    align: 'center',
                    dataIndex: 'teplomer',
                    menuDisabled: true,
                    text: 'Теп-<br>мер'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        switch (value) {
                            case true:
                            metaData='<span><img clas="icon" src="resources/css/images/ico/yes.png"/></span>';
                            break;
                            case false:
                            metaData='<span><img clas="icon" src="resources/css/images/ico/no.png"/></span>';
                            break;
                        }
                        return metaData;

                    },
                    width: 46,
                    dataIndex: 'gvodomer',
                    menuDisabled: true,
                    text: 'Сч<br>ГВС'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        switch (value) {
                            case true:
                            metaData='<span><img clas="icon" src="resources/css/images/ico/yes.png"/></span>';
                            break;
                            case false:
                            metaData='<span><img clas="icon" src="resources/css/images/ico/no.png"/></span>';
                            break;
                        }
                        return metaData;

                    },
                    hidden: true,
                    width: 45,
                    dataIndex: 'xvodomer',
                    text: 'Сч.ХВ'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        switch (value) {
                            case true:
                            metaData='<span><img clas="icon" src="resources/css/images/ico/yes.png"/></span>';
                            break;
                            case false:
                            metaData='<span><img clas="icon" src="resources/css/images/ico/no.png"/></span>';
                            break;
                        }
                        return metaData;

                    },
                    width: 37,
                    dataIndex: 'dteplomer',
                    menuDisabled: true,
                    text: 'ДТ'
                }
            ],
            tools: [
                {
                    xtype: 'tool',
                    type: 'search',
                    listeners: {
                        click: 'onToolClick'
                    }
                }
            ]
        },
        {
            xtype: 'gridpanel',
            autoShow: true,
            id: 'grMop',
            collapsed: true,
            collapsible: true,
            title: 'місця загального користування',
            store: 'StMop',
            columns: [
                {
                    xtype: 'gridcolumn',
                    width: 301,
                    dataIndex: 'mopid',
                    text: 'Название',
                    editor: {
                        xtype: 'combobox',
                        name: 'id',
                        allowBlank: false,
                        displayField: 'name',
                        queryMode: 'local',
                        store: 'StMopTypes',
                        typeAhead: true,
                        valueField: 'mopid'
                    }
                },
                {
                    xtype: 'numbercolumn',
                    width: 75,
                    dataIndex: 'gkal_year',
                    text: 'ГКал Год',
                    format: '0.000',
                    editor: {
                        xtype: 'numberfield',
                        name: 'gkal_year',
                        allowBlank: false,
                        decimalPrecision: 3
                    }
                },
                {
                    xtype: 'gridcolumn',
                    width: 79,
                    dataIndex: 'period',
                    text: 'период'
                },
                {
                    xtype: 'numbercolumn',
                    width: 92,
                    dataIndex: 'area',
                    text: 'S дома',
                    format: '0.000'
                },
                {
                    xtype: 'numbercolumn',
                    width: 97,
                    dataIndex: 'gkal',
                    text: 'Гкал',
                    format: '0.000'
                },
                {
                    xtype: 'numbercolumn',
                    width: 69,
                    dataIndex: 'hot',
                    text: 't расч.',
                    format: '0.00'
                },
                {
                    xtype: 'numbercolumn',
                    width: 79,
                    dataIndex: 'temp',
                    text: 't н.в.',
                    format: '0.00'
                },
                {
                    xtype: 'numbercolumn',
                    width: 79,
                    dataIndex: 'data_tek',
                    text: 'Дней от.',
                    format: '0'
                },
                {
                    xtype: 'actioncolumn',
                    width: 30,
                    items: [
                        {
                            getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                metaData = 'x-grid-center-icon';
                                return metaData;
                            },
                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                // in use
                                var me = this;
                                //STORE

                                var stUser = Ext.data.StoreManager.get("StUser");
                                //var StHeatHouse = Ext.data.StoreManager.get("StHeatHouse");//QueryTeplomer.getResults


                                //LOGIN & PASSWORD
                                var values =stUser.getAt(0);
                                var params = {
                                    house_id:values.get('house_id'),
                                    login:values.get('login'),
                                    password:values.get('password'),
                                    dteplomer_id:values.get('dteplomer_id'),
                                    what:"delMop"
                                };


                                //LOGIKA
                                var value = record.data;
                                Ext.Object.merge(value, params);
                                QueryTeplomer.delTeplomer(value,function(results){
                                    if (results.success !=='0'){
                                        view.store.removeAll();
                                        view.store.load({
                                            params: {
                                                login:value.login,
                                                password:value.password,
                                                house_id:value.house_id,
                                                what_id:value.dteplomer_id,
                                                dteplomer_id:value.dteplomer_id
                                            },
                                            scope:this
                                        });

                                    }else{
                                        Ext.MessageBox.show({title: 'Проверка',
                                            msg: results.msg,
                                            buttons: Ext.MessageBox.OK,
                                            icon: Ext.MessageBox.ERROR
                                        });
                                    }
                                });
                            },
                            icon: 'resources/css/images/ico/no.png',
                            tooltip: 'Удалить водомер в историю'
                        }
                    ]
                }
            ],
            tools: [
                {
                    xtype: 'tool',
                    callback: function(owner, tool, event) {
                        var grid = tool.findParentByType('grid');
                        grid.editingPlugin.cancelEdit(); //rowEditing.cancelEdit();
                        var record = grid.getSelectionModel();
                        var store = grid.store;
                        store.insert(0, record);
                        grid.editingPlugin.startEdit(0, 0);	//rowEditing.startEdit(0, 0);
                    },
                    id: 'addMop',
                    type: 'plus'
                }
            ]
        }
    ],

    onGrDteplomersSelectionChange: function(model, selected, eOpts) {
        var stUser = Ext.data.StoreManager.get("StUser");
        var StAktClaim = Ext.data.StoreManager.get("StAktClaim");

        var StTekPokDteplomera = Ext.data.StoreManager.get("StTekPokDTeplomera");
        var StAllPokDteplomera = Ext.data.StoreManager.get("StAllPokDTeplomera");
        var StOrgByDteplomer = Ext.data.StoreManager.get("StOrgByDteplomer");
        var StMop = Ext.data.StoreManager.get("StMop");
        var fmDTeplomers = Ext.getCmp('fmDTeplomers');

        var insTekPokDTeplomer = Ext.getCmp('insTekPokDTeplomer');
        var insGkalDTeplomer = Ext.getCmp('insGkalDTeplomer');

        var newPokDTeplomera = Ext.getCmp('newPokDTeplomera');

        var fmMop = Ext.getCmp('fmMop');
        var grHeatHouse = Ext.getCmp('grHeatHouse');
        var grHDteplomer = Ext.getCmp('grHDteplomer');

        var grOrgByDteplomer = Ext.getCmp('grOrgByDteplomer');
        var grMop = Ext.getCmp('grMop');
        var grAktP = Ext.getCmp('grAktP');



        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var login = values.get('login');
        var password = values.get('password');
        var record =selected[0];
        var dt = new Date();
        var d = Ext.Date.getDaysInMonth(dt);

        if (record) {
            values.set({'dteplomer_id':record.data.dteplomer_id});
            stUser.sync();
            grOrgByDteplomer.setDisabled(false);
            grMop.setDisabled(false);
            grHDteplomer.setDisabled(false);
            grHeatHouse.setDisabled(false);
            grAktP.setDisabled(false);
            fmDTeplomers.setTitle('<font color="#800000"> Технічна характеристика будинку' +
                                  '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; '+
                                  record.data.house +
                                  '&nbsp;&nbsp;&nbsp;&nbsp;Будинковый тепломір  № '+
                                  record.data.dteplomer_id +
                                  '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'+
                                  record.data.vvod + '</font>');
            StTekPokDteplomera.load({
                params: {
                    house_id:record.data.house_id,
                    what:'TekPokDTeplomera',
                    login:login,
                    password:password,
                    dteplomer_id:record.data.dteplomer_id
                },
                callback: function(records,operation,success){
                    if(success && records.length){
                        fmDTeplomers.getForm().loadRecord(records[0]);
                        fmDTeplomers.getForm().findField('date_tek').setValue(Ext.Date.format(dt, 'Y-m-d'));
                        if(records[0].data.area != records[0].data.area_dt){
                            fmDTeplomers.getForm().findField('area_dt').setFieldStyle('color: red;');
                        }
                        StAllPokDteplomera.load({
                            params: {
                                house_id:record.data.house_id,
                                what:'AllPokDTeplomera',
                                login:login,
                                password:password,
                                dteplomer_id:record.data.dteplomer_id
                            },
                            scope:this
                        });
                        StOrgByDteplomer.load({
                            params: {
                                login:login,
                                password:password,
                                data:records[0].data.data,
                                house_id:record.data.house_id,
                                what_id:record.data.dteplomer_id,
                                dteplomer_id:record.data.dteplomer_id
                            },
                            scope:this
                        });
                        StAktClaim.load({
                            params: {
                                login:login,
                                password:password,
                                what:'getAktClaim',
                                data:records[0].data.data,
                                dteplomer_id:record.data.dteplomer_id
                            },
                            scope:this
                        });
                        StMop.removeAll();
                        StMop.load({
                            params: {
                                login:login,
                                password:password,
                                data:records[0].data.data,
                                house_id:record.data.house_id,
                                what_id:record.data.dteplomer_id,
                                dteplomer_id:record.data.dteplomer_id
                            },
                            scope:this
                        });
                    }
                },
                scope:this
            });
            if (record.data.out === 1) {
                if (insGkalDTeplomer.isHidden()){insGkalDTeplomer.show();}
                if (!insTekPokDTeplomer.isHidden()){insTekPokDTeplomer.hide();}
                if (!fmDTeplomers.getForm().findField('tek').isHidden()){
                    fmDTeplomers.getForm().findField('tek').hide();}
                newPokDTeplomera.setFieldLabel('Температура воздуха t&#176;С');
                newPokDTeplomera.setValue(0).focus();
            } else  {
                if (!insGkalDTeplomer.isHidden()){insGkalDTeplomer.hide();}
                if (insTekPokDTeplomer.isHidden()){insTekPokDTeplomer.show();}
                if (fmDTeplomers.getForm().findField('tek').isHidden()){
                    fmDTeplomers.getForm().findField('tek').show();}
                newPokDTeplomera.setFieldLabel('нове показання');
                newPokDTeplomera.setValue(0).focus();
            }
        }
    },

    onDatefieldSelect1: function(field, value, eOpts) {
        var btn = Ext.getCmp('insPererDTeplomer').enable();

    },

    onFmDTeplomersExpand: function(p, eOpts) {
        //in use
        var me = this;
        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");

        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var login = values.get('login');
        var password = values.get('password');
        var house_id = values.get('house_id');
        var dteplomer_id = values.get('dteplomer_id');

        //LOGIKA
        //values.set({'dteplomer_id':0});
        //stUser.sync();


        //dteplomers
        var StDTeplomer = Ext.data.StoreManager.get("StDTeplomer");

        var fmDTeplomers = Ext.getCmp('fmDTeplomers');
        var grDteplomers = Ext.getCmp('grDteplomers');
        //console.log(dteplomer_id);
        if (dteplomer_id === 0) {
        //var CrLeftMenu = this.application.getController('CrLeftMenu');
        //console.log(1);
        //CrLeftMenu.LoadTabDteplomer();
        //StDTeplomer.removeAll();


        StDTeplomer.load({
            params: {
                house_id:house_id,
                what:'Dteplomer',
                login:login,
                password:password
            },
            scope:this
        });
        }
    },

    onToolClick1: function(tool, e, owner, eOpts) {
        var winAddAktClaim = Ext.ClassManager.instantiateByAlias('widget.winaddaktclaim');
        var fmDTeplomers = Ext.getCmp('fmDTeplomers');
        var value = fmDTeplomers.getValues();
        //LOGIKA

        var form = winAddAktClaim.down('#fnAddAktClaim');
        var stUser = Ext.data.StoreManager.get("StUser");
        var values =stUser.getAt(0);
        values.set({'vibor':'addAktClaim'});
        stUser.sync();
        Ext.Object.merge(value, values);
        form.loadRecord(value);
        //console.log(value);
        var dt = new Date();
        form.down('#btnInsertAktClaim').setText('Добавить акт');
        form.getForm().findField('data').setValue(Ext.Date.format(dt, 'Y-m-d'));
        winAddAktClaim.show();
    },

    onToolClick: function(tool, e, owner, eOpts) {
        // in use

        var grid = tool.findParentByType('grid');
        var stUser = Ext.data.StoreManager.get("StUser");
        var store = grid.store;

        //LOGIN & PASSWORD
        var values =stUser.getAt(0);

        //LOGIKA
        grid.store.load({
            params: {
                house_id:values.get('house_id'),
                login:values.get('login'),
                password:values.get('password'),
                what_id:values.get('dteplomer_id'),
                dteplomer_id:values.get('dteplomer_id'),
                what:"AllOrgByHouse"
            },
            scope:this
        });
        grid.getView().refresh();
    }

});