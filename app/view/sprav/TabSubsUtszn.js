/*
 * File: app/view/sprav/TabSubsUtszn.js
 * Date: Tue May 12 2020 01:39:10 GMT+0300 (EEST)
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Ykis.view.sprav.TabSubsUtszn', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.tabsubsutszn',

    requires: [
        'Ykis.view.sprav.TabSubsUtsznViewModel',
        'Ext.form.Panel',
        'Ext.grid.Panel',
        'Ext.view.Table',
        'Ext.toolbar.Toolbar',
        'Ext.toolbar.Separator',
        'Ext.form.field.Date',
        'Ext.form.field.ComboBox',
        'Ext.button.Button',
        'Ext.form.field.Number',
        'Ext.grid.column.RowNumberer',
        'Ext.grid.column.Action',
        'Ext.grid.column.Number',
        'Ext.grid.column.Date',
        'Ext.selection.CheckboxModel',
        'Ext.grid.feature.Summary',
        'Ext.grid.feature.GroupingSummary',
        'Ext.grid.plugin.BufferedRenderer'
    ],

    viewModel: {
        type: 'tabsubsutszn'
    },
    id: 'tabSubsUtszn',
    scrollable: true,
    width: 1458,
    layout: 'fit',
    bodyBorder: false,
    closable: true,
    title: 'Сверка по субсидии',
    defaultListenerScope: true,

    items: [
        {
            xtype: 'form',
            height: 700,
            id: 'fmSubsUtszn',
            scrollable: true,
            layout: 'fit',
            title: '',
            dockedItems: [
                {
                    xtype: 'gridpanel',
                    dock: 'top',
                    height: 1000,
                    id: 'grSubsUtszn',
                    padding: 10,
                    scrollable: true,
                    bodyBorder: true,
                    title: '',
                    store: 'stSubsidiaUtszn',
                    viewConfig: {
                        getRowClass: function(record, rowIndex, rowParams, store) {
                            if(record.get('pr') === 1 ){
                                return 'change_color_yellow';

                            }
                        },
                        height: 1000
                    },
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'top',
                            style: 'background-color: #e0e0e0;',
                            width: 1438,
                            items: [
                                {
                                    xtype: 'tbseparator',
                                    width: 10
                                },
                                {
                                    xtype: 'datefield',
                                    width: 201,
                                    fieldLabel: 'Период',
                                    labelWidth: 55,
                                    name: 'data_nach',
                                    format: 'F,Y',
                                    startDay: 1,
                                    submitFormat: 'Ymd',
                                    listeners: {
                                        select: 'onDatefieldSelect'
                                    }
                                },
                                {
                                    xtype: 'tbseparator',
                                    width: 10
                                },
                                {
                                    xtype: 'combobox',
                                    width: 241,
                                    fieldLabel: 'услуга',
                                    labelWidth: 60,
                                    name: 'usluga_id',
                                    displayField: 'usluga',
                                    queryMode: 'local',
                                    store: 'StUsluga',
                                    valueField: 'usluga_id',
                                    listeners: {
                                        select: 'onComboboxSelect21'
                                    }
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, event) {
                                        var value = button.findParentByType('form').getValues();
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var tabPnCenter =  Ext.getCmp('tabPnCenter');

                                        var form =  Ext.getCmp('fmSubsUtszn');
                                        var usluga_id = form.getForm().findField('usluga_id').getValue();
                                        var data_nach = form.getForm().findField('data_nach').getValue();

                                        var values =stUser.getAt(0);
                                        var login = values.get('login');
                                        var password = values.get('password');
                                        var params =[];

                                        var report = 'AktSubsUtsznAll';
                                        var namereport = 'Акт сверки';
                                        var value = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            usluga_id:usluga_id,
                                            data:data_nach,
                                            report:report,
                                            what:report
                                        };
                                        var tab = tabPnCenter.child('#'+report);
                                        if (!tab) {
                                            tab  = tabPnCenter.add({
                                                xtype:'tabreportorg',
                                                title:namereport,
                                                id:''+report+''
                                            });
                                        }
                                        tabPnCenter.setActiveTab(tab);
                                        var reppan = tab.getComponent(0);
                                        // Basic mask:
                                        var myMask = Ext.Msg.show({
                                            title:'Выписка актов сверки...',
                                            msg: 'Выписка актов...',
                                            buttons: Ext.Msg.CANCEL,
                                            wait: true,
                                            modal: true,
                                            icon: Ext.Msg.INFO
                                        });
                                        setTimeout(function(){

                                            QueryKassa.getRaspechatka(value,function(data){
                                                if (data){
                                                    reppan.update(data.content);
                                                    Ext.REPORTCONTENT =data.content;
                                                    Ext.REPORTSQL =data.sql;
                                                    Ext.REPORTTITLE =report;
                                                    myMask.close();

                                                } else {
                                                    myMask.close();
                                                    Ext.MessageBox.show({
                                                        title: 'Ошибка ',
                                                        msg: 'Документ не создан',
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.ERROR
                                                    });
                                                }
                                            });
                                        }, 1000);


                                    },
                                    disabled: true,
                                    id: 'btnPrintSubsidiaUtszn',
                                    width: 125,
                                    icon: 'resources/css/images/ico/printer.png',
                                    text: 'Акты сверки'
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, event) {
                                        var value = button.findParentByType('form').getValues();
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var tabPnCenter =  Ext.getCmp('tabPnCenter');
                                        var StUtszn = Ext.data.StoreManager.get("stSubsidiaUtszn");
                                        var form =  Ext.getCmp('fmSubsUtszn');
                                        var usluga_id = form.getForm().findField('usluga_id').getValue();
                                        var data_nach = form.getForm().findField('data_nach').getValue();
                                        var values =stUser.getAt(0);
                                        var login = values.get('login');
                                        var password = values.get('password');
                                        var params =[];

                                        var report = 'ReestrSubsidiaUtsznAll';
                                        var namereport = 'Реестр';
                                        var value = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            usluga_id:usluga_id,
                                            data:data_nach,
                                            report:report,
                                            what:report
                                        };

                                        var tab = tabPnCenter.child('#'+report);
                                        if (!tab) {
                                            tab  = tabPnCenter.add({
                                                xtype:'tabreportorg',
                                                title:namereport,
                                                id:''+report+''
                                            });

                                        }
                                        tabPnCenter.setActiveTab(tab);
                                        var reppan = tab.getComponent(0);
                                        // Basic mask:
                                        var myMask = Ext.Msg.show({
                                            title:'Выписка реестра...',
                                            msg: 'Выписка ...',
                                            buttons: Ext.Msg.CANCEL,
                                            wait: true,
                                            modal: true,
                                            icon: Ext.Msg.INFO
                                        });
                                        setTimeout(function(){

                                            QueryKassa.getRaspechatka(value,function(data){
                                                if (data){
                                                    reppan.update(data.content);
                                                    Ext.REPORTCONTENT =data.content;
                                                    Ext.REPORTSQL =data.sql;
                                                    Ext.REPORTTITLE =report;
                                                    myMask.close();

                                                } else {

                                                    myMask.close();
                                                    Ext.MessageBox.show({
                                                        title: 'Ошибка ',
                                                        msg: 'Документ не создан',
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.ERROR
                                                    });
                                                }
                                            });
                                        }, 1000);


                                    },
                                    disabled: true,
                                    id: 'btnPrintSubsReestrUtszn',
                                    width: 125,
                                    icon: 'resources/css/images/ico/printer.png',
                                    text: 'Реестр'
                                }
                            ]
                        },
                        {
                            xtype: 'toolbar',
                            dock: 'top',
                            style: 'background-color: #e0e0e0;',
                            items: [
                                {
                                    xtype: 'button',
                                    handler: function(button, event) {
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);
                                        var grid = button.findParentByType('grid');
                                        var store = grid.store;
                                        var form =  Ext.getCmp('fmSubsUtszn');
                                        var data = form.getForm().findField('data_nach').getValue();
                                        var usluga_id = form.getForm().findField('usluga_id').getValue();



                                        //STORE

                                        //LOGIKA
                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            data:data,
                                            usluga_id:usluga_id,
                                            what:'update_utszn_subsidia'
                                        };
                                        //console.log(params);

                                        //LOGIKA
                                        var myMask= Ext.Msg.show({
                                            title:'Обновление записи...',
                                            msg: 'Обновление записей в базе Ожидайте...',
                                            buttons: Ext.Msg.CANCEL,
                                            wait: true,
                                            modal: true,
                                            icon: Ext.Msg.INFO
                                        });
                                        setTimeout(function(){
                                            QueryAddress.updateRecords(params,function(results){
                                                if(results.success==="1"){
                                                    store.load({
                                                        params: {
                                                            what:'getSubsidiaUtszn',
                                                            login:values.get('login'),
                                                            data:data,    usluga_id:usluga_id,
                                                            password:values.get('password')
                                                        }
                                                    });

                                                    myMask.close();
                                                    Ext.MessageBox.show({
                                                        title: 'Обновление базы Субсидия',
                                                        msg: results.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.INFO
                                                    });
                                                } else {
                                                    myMask.close();
                                                    Ext.MessageBox.show({
                                                        title: 'Обновление базы Субсидия',
                                                        msg: results.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.ERROR
                                                    });

                                                }

                                            });
                                        }, 1000);

                                    },
                                    disabled: true,
                                    id: 'btnGetSubsidiaUtszn',
                                    width: 171,
                                    icon: 'resources/css/images/ico/xsldbg_refresh.png',
                                    text: 'Загрузить субсидии'
                                },
                                {
                                    xtype: 'numberfield',
                                    width: 200,
                                    fieldLabel: 'оплата',
                                    labelWidth: 80,
                                    name: 'oplata',
                                    value: 0,
                                    fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                    hideTrigger: true
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, event) {
                                        //COMBO

                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);
                                        var grid = button.findParentByType('grid');
                                        var store = grid.store;
                                        var form =  Ext.getCmp('fmSubsUtszn');
                                        var usluga_id = form.getForm().findField('usluga_id').getValue();
                                        var data = form.getForm().findField('data_nach').getValue();
                                        var oplata = form.getForm().findField('oplata').getValue();
                                        var pr = 1;


                                        //STORE

                                        //LOGIKA
                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            data:data,
                                            usluga_id:usluga_id,
                                            oplata:oplata,
                                            pr:pr,
                                            what:'insOplataSubsidiaUtszn'
                                        };
                                        //console.log(params);

                                        //LOGIKA
                                        var myMask= Ext.Msg.show({
                                            title:'Обновление записи...',
                                            msg: 'Обновление записей в базе Ожидайте...',
                                            buttons: Ext.Msg.CANCEL,
                                            wait: true,
                                            modal: true,
                                            icon: Ext.Msg.INFO
                                        });
                                        setTimeout(function(){

                                            QueryAddress.updateRecords(params,function(results){
                                                if(results.success==="1"){
                                                    store.load({
                                                        params: {
                                                            what:'getSubsidiaUtszn',
                                                            login:values.get('login'),
                                                            usluga_id:usluga_id,
                                                            data:data,
                                                            password:values.get('password')
                                                        }
                                                    });

                                                    myMask.close();
                                                    Ext.MessageBox.show({
                                                        title: 'Обновление базы ',
                                                        msg: results.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.INFO
                                                    });
                                                } else {
                                                    myMask.close();
                                                    Ext.MessageBox.show({
                                                        title: 'Обновление базы ',
                                                        msg: results.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.ERROR
                                                    });

                                                }

                                            });
                                        }, 1000);


                                    },
                                    disabled: true,
                                    id: 'btnInsOplataSubsidiaUtszn',
                                    width: 149,
                                    icon: 'resources/css/images/ico/yes.png',
                                    text: 'Текущая оплата'
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, event) {
                                        //COMBO

                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);
                                        var grid = button.findParentByType('grid');
                                        var store = grid.store;
                                        var form =  Ext.getCmp('fmSubsUtszn');
                                        var usluga_id = form.getForm().findField('usluga_id').getValue();
                                        var data = form.getForm().findField('data_nach').getValue();
                                        var oplata = form.getForm().findField('oplata').getValue();
                                        var pr = 2;


                                        //STORE

                                        //LOGIKA
                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            data:data,
                                            usluga_id:usluga_id,
                                            oplata:oplata,
                                            pr:pr,
                                            what:'insOplataSubsidiaUtszn'
                                        };
                                        //console.log(params);

                                        //LOGIKA
                                        var myMask= Ext.Msg.show({
                                            title:'Обновление записи...',
                                            msg: 'Обновление записей в базе Ожидайте...',
                                            buttons: Ext.Msg.CANCEL,
                                            wait: true,
                                            modal: true,
                                            icon: Ext.Msg.INFO
                                        });
                                        setTimeout(function(){

                                            QueryAddress.updateRecords(params,function(results){
                                                if(results.success==="1"){
                                                    store.load({
                                                        params: {
                                                            what:'getSubsidiaUtszn',
                                                            login:values.get('login'),
                                                            usluga_id:usluga_id,
                                                            data:data,
                                                            password:values.get('password')
                                                        }
                                                    });

                                                    myMask.close();
                                                    Ext.MessageBox.show({
                                                        title: 'Обновление базы ',
                                                        msg: results.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.INFO
                                                    });
                                                } else {
                                                    myMask.close();
                                                    Ext.MessageBox.show({
                                                        title: 'Обновление базы ',
                                                        msg: results.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.ERROR
                                                    });

                                                }

                                            });
                                        }, 1000);


                                    },
                                    disabled: true,
                                    id: 'btnInsDoplataSubsidiaUtszn',
                                    width: 214,
                                    icon: 'resources/css/images/ico/yes.png',
                                    text: 'Оплата прошлых периодов'
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, event) {
                                        //COMBO

                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);
                                        var grid = button.findParentByType('grid');
                                        var store = grid.store;
                                        var form =  Ext.getCmp('fmSubsUtszn');
                                        var usluga_id = form.getForm().findField('usluga_id').getValue();
                                        var data = form.getForm().findField('data_nach').getValue();
                                        var oplata = form.getForm().findField('oplata').getValue();
                                        var pr = 3;


                                        //STORE

                                        //LOGIKA
                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            data:data,
                                            usluga_id:usluga_id,
                                            oplata:oplata,
                                            pr:pr,
                                            what:'insOplataSubsidiaUtszn'
                                        };
                                        //console.log(params);

                                        //LOGIKA
                                        var myMask= Ext.Msg.show({
                                            title:'Обновление записи...',
                                            msg: 'Обновление записей в базе Ожидайте...',
                                            buttons: Ext.Msg.CANCEL,
                                            wait: true,
                                            modal: true,
                                            icon: Ext.Msg.INFO
                                        });
                                        setTimeout(function(){

                                            QueryAddress.updateRecords(params,function(results){
                                                if(results.success==="1"){
                                                    store.load({
                                                        params: {
                                                            what:'getSubsidiaUtszn',
                                                            login:values.get('login'),
                                                            usluga_id:usluga_id,
                                                            data:data,
                                                            password:values.get('password')
                                                        }
                                                    });

                                                    myMask.close();
                                                    Ext.MessageBox.show({
                                                        title: 'Обновление базы ',
                                                        msg: results.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.INFO
                                                    });
                                                } else {
                                                    myMask.close();
                                                    Ext.MessageBox.show({
                                                        title: 'Обновление базы ',
                                                        msg: results.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.ERROR
                                                    });

                                                }

                                            });
                                        }, 1000);


                                    },
                                    disabled: true,
                                    id: 'btnInsPoplataSubsidiaUtszn',
                                    width: 175,
                                    icon: 'resources/css/images/ico/yes.png',
                                    text: 'Оплата поставщикам'
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, event) {
                                        //COMBO

                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);
                                        var grid = button.findParentByType('grid');
                                        var store = grid.store;
                                        var form =  Ext.getCmp('fmSubsUtszn');
                                        var usluga_id = form.getForm().findField('usluga_id').getValue();
                                        var data = form.getForm().findField('data_nach').getValue();
                                        var oplata = form.getForm().findField('oplata').getValue();
                                        var pr = 3;


                                        //STORE

                                        //LOGIKA
                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            data:data,
                                            usluga_id:usluga_id,
                                            oplata:oplata,
                                            pr:pr,
                                            what:'getControlSubsidiaUtszn'
                                        };
                                        //console.log(params);

                                        //LOGIKA

                                        store.load({
                                            params: {
                                                what:'getControlSubsidiaUtszn',
                                                login:values.get('login'),
                                                usluga_id:usluga_id,
                                                data:data,
                                                password:values.get('password')
                                            }
                                        });


                                    },
                                    disabled: true,
                                    id: 'btnControlSubsidiaUtszn',
                                    width: 113,
                                    icon: 'resources/css/images/ico/yes.png',
                                    text: 'Контроль'
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, event) {
                                        //COMBO

                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);
                                        var grid = button.findParentByType('grid');
                                        var store = grid.store;
                                        var form =  Ext.getCmp('fmSubsUtszn');
                                        var usluga_id = form.getForm().findField('usluga_id').getValue();
                                        var data = form.getForm().findField('data_nach').getValue();
                                        var oplata = form.getForm().findField('oplata').getValue();
                                        var pr = 3;


                                        //STORE

                                        //LOGIKA
                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            data:data,
                                            usluga_id:usluga_id,
                                            oplata:oplata,
                                            pr:pr,
                                            what:'getControlSubsidiaSaldo'
                                        };
                                        //console.log(params);

                                        //LOGIKA

                                        store.load({
                                            params: {
                                                what:'getControlSubsidiaSaldo',
                                                login:values.get('login'),
                                                usluga_id:usluga_id,
                                                data:data,
                                                password:values.get('password')
                                            }
                                        });


                                    },
                                    disabled: true,
                                    id: 'btnControlSubsidiaSaldo',
                                    width: 148,
                                    icon: 'resources/css/images/ico/yes.png',
                                    text: 'Контроль сальдо'
                                }
                            ]
                        }
                    ],
                    columns: [
                        {
                            xtype: 'rownumberer'
                        },
                        {
                            xtype: 'actioncolumn',
                            width: 30,
                            menuDisabled: true,
                            tooltip: 'Редактировать',
                            items: [
                                {
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        var winprintaktutszn = Ext.ClassManager.instantiateByAlias('widget.winprintaktutszn');
                                        var form = winprintaktutszn.down('#fmPrintAktUtszn');
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);
                                        var value = record;
                                        view.getSelectionModel().select(rowIndex);
                                        form.loadRecord(value);
                                        form.getForm().findField('vibor').setValue('1');
                                        winprintaktutszn.show();
                                    },
                                    icon: 'resources/css/images/ico/edit.png',
                                    tooltip: 'Редактировать'
                                }
                            ]
                        },
                        {
                            xtype: 'actioncolumn',
                            width: 30,
                            menuDisabled: true,
                            items: [
                                {
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);
                                        var form =  Ext.getCmp('fmSubsUtszn');
                                        var usluga_id = form.getForm().findField('usluga_id').getValue();
                                        var data = form.getForm().findField('data_nach').getValue();

                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            data:data,
                                            usluga_id:usluga_id,
                                            what:'delSubsidiaUtszn'
                                        };

                                        //GRID
                                        var store = view.getStore();
                                        var value = record.data;


                                        //LOGIKA


                                        Ext.Object.merge(value, params);
                                        //console.log(value);

                                        Ext.MessageBox.confirm({
                                            title: 'Удаление записи',
                                            msg: 'Вы удаляете запись   <br> Подтвердите или отмените свои действия.',
                                            buttons: Ext.MessageBox.OKCANCEL,
                                            icon: Ext.MessageBox.ERROR,
                                            buttonText:{
                                                ok:'подтвеждаю',
                                                cancel:'отмена'
                                            },
                                            fn:function(btn,newValue){
                                                if(btn=='ok'){
                                                    QueryAddress.updateRecords(value,function(results){
                                                        if(results.success==="1"){
                                                            store.load({
                                                                params: {
                                                                    what:'getSubsidiaUtszn',
                                                                    login:values.get('login'),
                                                                    usluga_id:usluga_id,
                                                                    data:data,
                                                                    password:values.get('password')
                                                                }
                                                            });

                                                            Ext.MessageBox.show({
                                                                title: 'Удаление записи',
                                                                msg: results.msg,
                                                                buttons: Ext.MessageBox.OK,
                                                                icon: Ext.MessageBox.INFO
                                                            });
                                                        } else {
                                                            Ext.MessageBox.show({
                                                                title: 'Удаление записи',
                                                                msg: results.msg,
                                                                buttons: Ext.MessageBox.OK,
                                                                icon: Ext.MessageBox.ERROR
                                                            });

                                                        }

                                                    });
                                                }
                                            }
                                        });
                                    },
                                    icon: 'resources/css/images/ico/no.png',
                                    tooltip: 'Удалить  запись '
                                }
                            ]
                        },
                        {
                            xtype: 'numbercolumn',
                            hidden: true,
                            dataIndex: 'house_id',
                            menuDisabled: true,
                            text: 'Дом',
                            format: '0'
                        },
                        {
                            xtype: 'numbercolumn',
                            hidden: true,
                            dataIndex: 'pr',
                            menuDisabled: true,
                            format: '0'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 148,
                            dataIndex: 'address',
                            menuDisabled: true,
                            text: 'Адрес'
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            width: 186,
                            dataIndex: 'house',
                            menuDisabled: true,
                            text: 'Дом'
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            width: 40,
                            dataIndex: 'mec',
                            menuDisabled: true,
                            text: 'мес'
                        },
                        {
                            xtype: 'numbercolumn',
                            hidden: true,
                            width: 70,
                            dataIndex: 'edrpou',
                            menuDisabled: true,
                            text: 'ЕДРПОУ',
                            format: '0'
                        },
                        {
                            xtype: 'datecolumn',
                            hidden: true,
                            width: 80,
                            align: 'center',
                            dataIndex: 'data',
                            menuDisabled: true,
                            text: 'дата'
                        },
                        {
                            xtype: 'numbercolumn',
                            summaryRenderer: function(val, params, data) {
                                var n =Ext.util.Format.number(val,'0,000.00');
                                if (val >= 0) {
                                    return '<span style="color:#000; font-weight:bold;">' + n + '</span>';
                                } else  {
                                    return '<span style="color:red; font-weight:bold;">' + n + '</span>';
                                }
                            },
                            summaryType: 'sum',
                            width: 85,
                            align: 'right',
                            dataIndex: 'zadol',
                            menuDisabled: true,
                            text: 'Сальдо<br>начало',
                            format: '0.00'
                        },
                        {
                            xtype: 'gridcolumn',
                            menuDisabled: true,
                            text: 'Начислено в текущем периоде',
                            columns: [
                                {
                                    xtype: 'numbercolumn',
                                    summaryRenderer: function(val, params, data) {
                                        var n =Ext.util.Format.number(val,'0,000.00');
                                        if (val >= 0) {
                                            return '<span style="color:#000; font-weight:bold;">' + n + '</span>';
                                        } else  {
                                            return '<span style="color:red; font-weight:bold;">' + n + '</span>';
                                        }
                                    },
                                    summaryType: 'sum',
                                    width: 85,
                                    align: 'right',
                                    dataIndex: 'nachisleno',
                                    menuDisabled: true,
                                    text: 'факт',
                                    format: '0.00'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    summaryRenderer: function(val, params, data) {
                                        var n =Ext.util.Format.number(val,'0,000.00');
                                        if (val >= 0) {
                                            return '<span style="color:#000; font-weight:bold;">' + n + '</span>';
                                        } else  {
                                            return '<span style="color:red; font-weight:bold;">' + n + '</span>';
                                        }
                                    },
                                    summaryType: 'sum',
                                    width: 85,
                                    align: 'right',
                                    dataIndex: 'norma',
                                    menuDisabled: true,
                                    text: 'норма',
                                    format: '0.00'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    summaryRenderer: function(val, params, data) {
                                        var n =Ext.util.Format.number(val,'0,000.00');
                                        if (val >= 0) {
                                            return '<span style="color:#000; font-weight:bold;">' + n + '</span>';
                                        } else  {
                                            return '<span style="color:red; font-weight:bold;">' + n + '</span>';
                                        }
                                    },
                                    summaryType: 'sum',
                                    width: 85,
                                    align: 'right',
                                    dataIndex: 'perer',
                                    menuDisabled: true,
                                    text: 'бюджет',
                                    format: '0.00'
                                }
                            ]
                        },
                        {
                            xtype: 'gridcolumn',
                            menuDisabled: true,
                            text: 'перечислено средств',
                            columns: [
                                {
                                    xtype: 'numbercolumn',
                                    summaryRenderer: function(val, params, data) {
                                        var n =Ext.util.Format.number(val,'0,000.00');
                                        if (val >= 0) {
                                            return '<span style="color:#000; font-weight:bold;">' + n + '</span>';
                                        } else  {
                                            return '<span style="color:red; font-weight:bold;">' + n + '</span>';
                                        }
                                    },
                                    summaryType: 'sum',
                                    width: 85,
                                    align: 'right',
                                    dataIndex: 'oplata',
                                    menuDisabled: true,
                                    text: 'бюджет',
                                    format: '0.00'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    summaryRenderer: function(val, params, data) {
                                        var n =Ext.util.Format.number(val,'0,000.00');
                                        if (val >= 0) {
                                            return '<span style="color:#000; font-weight:bold;">' + n + '</span>';
                                        } else  {
                                            return '<span style="color:red; font-weight:bold;">' + n + '</span>';
                                        }
                                    },
                                    summaryType: 'sum',
                                    width: 85,
                                    align: 'right',
                                    dataIndex: 'poplata',
                                    menuDisabled: true,
                                    text: 'поставщ',
                                    format: '0.00'
                                }
                            ]
                        },
                        {
                            xtype: 'numbercolumn',
                            summaryRenderer: function(val, params, data) {
                                var n =Ext.util.Format.number(val,'0,000.00');
                                if (val >= 0) {
                                    return '<span style="color:#000; font-weight:bold;">' + n + '</span>';
                                } else  {
                                    return '<span style="color:red; font-weight:bold;">' + n + '</span>';
                                }
                            },
                            summaryType: 'sum',
                            width: 85,
                            align: 'right',
                            dataIndex: 'dolg',
                            menuDisabled: true,
                            text: 'Сальдо<br>конец',
                            format: '0.00'
                        },
                        {
                            xtype: 'gridcolumn',
                            menuDisabled: true,
                            text: 'Задолженность на начало года',
                            columns: [
                                {
                                    xtype: 'numbercolumn',
                                    summaryRenderer: function(val, params, data) {
                                        var n =Ext.util.Format.number(val,'0,000.00');
                                        if (val >= 0) {
                                            return '<span style="color:#000; font-weight:bold;">' + n + '</span>';
                                        } else  {
                                            return '<span style="color:red; font-weight:bold;">' + n + '</span>';
                                        }
                                    },
                                    summaryType: 'sum',
                                    width: 85,
                                    align: 'right',
                                    dataIndex: 'st',
                                    menuDisabled: true,
                                    text: 'задол',
                                    format: '0.00'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    summaryRenderer: function(val, params, data) {
                                        var n =Ext.util.Format.number(val,'0,000.00');
                                        if (val >= 0) {
                                            return '<span style="color:#000; font-weight:bold;">' + n + '</span>';
                                        } else  {
                                            return '<span style="color:red; font-weight:bold;">' + n + '</span>';
                                        }
                                    },
                                    summaryType: 'sum',
                                    width: 85,
                                    align: 'right',
                                    dataIndex: 'doplata',
                                    menuDisabled: true,
                                    text: 'оплата',
                                    format: '0.00'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    summaryRenderer: function(val, params, data) {
                                        var n =Ext.util.Format.number(val,'0,000.00');
                                        if (val >= 0) {
                                            return '<span style="color:#000; font-weight:bold;">' + n + '</span>';
                                        } else  {
                                            return '<span style="color:red; font-weight:bold;">' + n + '</span>';
                                        }
                                    },
                                    summaryType: 'sum',
                                    width: 80,
                                    align: 'right',
                                    dataIndex: 'fin',
                                    menuDisabled: true,
                                    text: 'остаток',
                                    format: '0.00'
                                }
                            ]
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 105,
                            dataIndex: 'inn',
                            menuDisabled: true,
                            text: 'инн'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 136,
                            dataIndex: 'fio',
                            menuDisabled: true,
                            text: 'Ф.И.О.'
                        }
                    ],
                    selModel: {
                        selType: 'checkboxmodel',
                        mode: 'SIMPLE'
                    },
                    features: [
                        {
                            ftype: 'summary',
                            dock: 'top'
                        },
                        {
                            ftype: 'groupingsummary',
                            groupByText: 'Дома',
                            startCollapsed: true
                        }
                    ],
                    plugins: [
                        {
                            ptype: 'bufferedrenderer'
                        }
                    ]
                }
            ]
        }
    ],

    onDatefieldSelect: function(field, value, eOpts) {

        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var values =stUser.getAt(0);
        var login = values.get('login');
        var password = values.get('password');

        var StUtszn = Ext.data.StoreManager.get("stSubsidiaUtszn");
        var btnGetSubsidiaUtszn =  Ext.getCmp('btnGetSubsidiaUtszn');
        var btnPrintSubsidiaUtszn =  Ext.getCmp('btnPrintSubsidiaUtszn');
        var btnPrintSubsReestrUtszn =  Ext.getCmp('btnPrintSubsReestrUtszn');

        var form =  Ext.getCmp('fmSubsUtszn');
        var usluga_id = form.getForm().findField('usluga_id').getValue();

        if (usluga_id){
           btnGetSubsidiaUtszn.setDisabled(false);
                btnPrintSubsidiaUtszn.setDisabled(false);
                btnPrintSubsReestrUtszn.setDisabled(false);

            StUtszn.load({
                params: {
                    what:'getSubsidiaUtszn',
                    login:login,
                    password:password,
                    data:value,
                    usluga_id: usluga_id
                },
                scope:this
            });
        }

    },

    onComboboxSelect21: function(combo, record, eOpts) {
        var stUser = Ext.data.StoreManager.get("StUser");
        var values =stUser.getAt(0);
        var login = values.get('login');
        var password = values.get('password');

        var StUtszn = Ext.data.StoreManager.get("stSubsidiaUtszn");
        var btnGetSubsidiaUtszn =  Ext.getCmp('btnGetSubsidiaUtszn');
        var btnPrintSubsidiaUtszn =  Ext.getCmp('btnPrintSubsidiaUtszn');
        var btnPrintSubsReestrUtszn =  Ext.getCmp('btnPrintSubsReestrUtszn');
        var btnInsOplataLgotaUtszn =  Ext.getCmp('btnInsOplataSubsidiaUtszn');
        var btnInsDoplataLgotaUtszn =  Ext.getCmp('btnInsDoplataSubsidiaUtszn');
        var btnInsPoplataLgotaUtszn =  Ext.getCmp('btnInsPoplataSubsidiaUtszn');
        var btnControlSubsidiaUtszn =  Ext.getCmp('btnControlSubsidiaUtszn');
        var btnControlSubsidiaSaldo =  Ext.getCmp('btnControlSubsidiaSaldo');


        var form =  Ext.getCmp('fmSubsUtszn');
        var data = form.getForm().findField('data_nach').getValue();
        var usluga_id = form.getForm().findField('usluga_id').getValue();
        // console.log(usluga_id);

        if (usluga_id){
            if (record) {
                values.set({'usluga_id':record.get('usluga_id')});
                stUser.sync();
                btnGetSubsidiaUtszn.setDisabled(false);
                btnPrintSubsidiaUtszn.setDisabled(false);
                btnPrintSubsReestrUtszn.setDisabled(false);
                btnInsOplataLgotaUtszn.setDisabled(false);
                btnInsDoplataLgotaUtszn.setDisabled(false);
                btnInsPoplataLgotaUtszn.setDisabled(false);
                btnControlSubsidiaUtszn.setDisabled(false);
                btnControlSubsidiaSaldo.setDisabled(false);


                StUtszn.load({
                    params: {
                        what:'getSubsidiaUtszn',
                        login:login,
                        password:password,
                        data:data,
                        usluga_id:record.get('usluga_id')
                    },
                    scope:this
                });
            }
        }
    }

});