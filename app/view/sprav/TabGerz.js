/*
 * File: app/view/sprav/TabGerz.js
 * Date: Thu May 07 2020 02:25:57 GMT+0300 (EEST)
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Ykis.view.sprav.TabGerz', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.tabgerz',

    requires: [
        'Ykis.view.sprav.TabGerzViewModel',
        'Ext.grid.Panel',
        'Ext.view.Table',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.toolbar.Separator',
        'Ext.toolbar.Spacer',
        'Ext.form.field.Hidden',
        'Ext.grid.column.Number',
        'Ext.grid.column.Date',
        'Ext.form.field.Number',
        'Ext.grid.column.Action',
        'Ext.grid.plugin.BufferedRenderer',
        'Ext.grid.feature.Summary',
        'Ext.grid.plugin.RowEditing',
        'Ext.grid.feature.GroupingSummary',
        'Ext.selection.CheckboxModel'
    ],

    viewModel: {
        type: 'tabgerz'
    },
    id: 'tabGerz',
    scrollable: true,
    layout: 'fit',
    closable: true,
    title: 'Оплата ГЕРЦ',
    defaultListenerScope: true,

    initConfig: function(instanceConfig) {
        var me = this,
            config = {
                items: [
                    {
                        xtype: 'gridpanel',
                        id: 'grGerz',
                        scrollable: true,
                        title: '',
                        store: 'StGerz',
                        viewConfig: {
                            getRowClass: function(record, rowIndex, rowParams, store) {
                                if(record.get('pr') === 0 ){
                                    return 'change_color_yellow';

                                } else  {
                                    return  'change_color_green';
                                }


                            },
                            emptyText: 'Платежи не загружены'
                        },
                        dockedItems: [
                            {
                                xtype: 'toolbar',
                                dock: 'top',
                                height: 45,
                                items: [
                                    {
                                        xtype: 'button',
                                        handler: function(button, event) {
                                            //in use
                                            var winImport = Ext.ClassManager.instantiateByAlias('widget.winimport');
                                            var form = Ext.getCmp('fmImport');
                                            var vibor =  'gerz';
                                            winImport.setTitle('Загрузка оплаты из ГЕРЦ)');

                                            winImport.show();

                                            form.getForm().findField('vibor').setValue(vibor);


                                        },
                                        id: 'btnImportGerz',
                                        width: 145,
                                        icon: 'resources/css/images/ico/door_in.png',
                                        text: 'Импорт из ГЕРЦ'
                                    },
                                    {
                                        xtype: 'button',
                                        handler: function(button, event) {
                                            //in use
                                            var winImport = Ext.ClassManager.instantiateByAlias('widget.winimport');
                                            var form = Ext.getCmp('fmImport');
                                            var vibor =  'gerz';
                                            winImport.setTitle('Загрузка оплаты ГЕРЦ)');

                                            winImport.show();

                                            form.getForm().findField('vibor').setValue(vibor);


                                        },
                                        hidden: true,
                                        id: 'btnImportPort5',
                                        width: 94,
                                        icon: 'resources/css/images/ico/door_in.png',
                                        text: 'Импорт'
                                    },
                                    {
                                        xtype: 'tbseparator'
                                    },
                                    {
                                        xtype: 'button',
                                        handler: function(button, event) {
                                            //COMBO
                                            var grid = button.findParentByType('grid');
                                            var store = grid.store;

                                            //STORE
                                            var stUser = Ext.data.StoreManager.get("StUser");
                                            var values =stUser.getAt(0);

                                            //LOGIKA
                                            var params = {
                                                login:values.get('login'),
                                                password:values.get('password'),
                                                what:'input_oplata_gerz'
                                            };


                                            //LOGIKA
                                            var myMask= Ext.Msg.show({
                                                title:'Запись оплаты ГЕРЦ...',
                                                msg: 'Запись в базу оплаты ЮКИС.Ожидайте...',
                                                buttons: Ext.Msg.CANCEL,
                                                wait: true,
                                                modal: true,
                                                icon: Ext.Msg.INFO
                                            });

                                            QueryAddress.updateRecords(params,function(results){
                                                if(results.success==="1"){

                                                    store.load({
                                                        params: {
                                                            what:'getGerz',
                                                            login:values.get('login'),
                                                            password:values.get('password')
                                                        }
                                                    });
                                                    myMask.close();
                                                    grid.getView().refresh();

                                                    Ext.MessageBox.show({
                                                        title:'Запись оплаты ГЕРЦ...',
                                                        msg: results.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.INFO
                                                    });
                                                } else {
                                                    myMask.close();
                                                    Ext.MessageBox.show({
                                                        title:'Запись оплаты ГЕРЦ...',
                                                        msg: results.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.ERROR
                                                    });

                                                }

                                            });
                                        },
                                        width: 310,
                                        icon: 'resources/css/images/ico/add.png',
                                        text: 'Ввод оплаты ГЕРЦ в базу оплаты ЮКИС'
                                    },
                                    {
                                        xtype: 'tbseparator'
                                    },
                                    {
                                        xtype: 'button',
                                        handler: function(button, event) {
                                            //COMBO

                                            //STORE
                                            var stUser = Ext.data.StoreManager.get("StUser");
                                            var values =stUser.getAt(0);

                                            //LOGIKA
                                            var params = {
                                                login:values.get('login'),
                                                password:values.get('password'),
                                                what:'control_oplata_gerz'
                                            };


                                            //LOGIKA
                                            var myMask= Ext.Msg.show({
                                                title:'Контроль суммы ...',
                                                msg: 'Контроль суммы в базе оплате.Ожидайте...',
                                                buttons: Ext.Msg.CANCEL,
                                                wait: true,
                                                modal: true,
                                                icon: Ext.Msg.INFO
                                            });

                                            QueryAddress.updateRecords(params,function(results){
                                                if(results.success==="1"){

                                                    myMask.close();
                                                    Ext.MessageBox.show({
                                                        title:'Контроль суммы ...',
                                                        msg: results.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.INFO
                                                    });
                                                } else {
                                                    myMask.close();
                                                    Ext.MessageBox.show({
                                                        title:'Контроль суммы ...',
                                                        msg: results.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.ERROR
                                                    });

                                                }

                                            });
                                        },
                                        hidden: true,
                                        width: 189,
                                        icon: 'resources/css/images/ico/schet.png',
                                        text: 'Контроль сумм в оплате'
                                    },
                                    {
                                        xtype: 'tbspacer',
                                        width: 100
                                    },
                                    {
                                        xtype: 'hiddenfield',
                                        fieldLabel: 'Label',
                                        name: 'usluga'
                                    }
                                ]
                            }
                        ],
                        columns: [
                            {
                                xtype: 'numbercolumn',
                                hidden: true,
                                width: 60,
                                dataIndex: 'rec_id',
                                menuDisabled: true,
                                text: 'Запись',
                                format: '0'
                            },
                            {
                                xtype: 'numbercolumn',
                                hidden: true,
                                width: 60,
                                dataIndex: 'god',
                                menuDisabled: true,
                                text: 'Период',
                                format: '0'
                            },
                            {
                                xtype: 'numbercolumn',
                                hidden: true,
                                width: 55,
                                dataIndex: 'raion_id',
                                menuDisabled: true,
                                text: 'Район',
                                format: '0'
                            },
                            {
                                xtype: 'datecolumn',
                                dataIndex: 'data',
                                menuDisabled: true,
                                text: 'Дата',
                                format: 'd-m-Y'
                            },
                            {
                                xtype: 'numbercolumn',
                                width: 65,
                                dataIndex: 'address_id',
                                menuDisabled: true,
                                text: 'Опл',
                                format: '0'
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 144,
                                dataIndex: 'address',
                                menuDisabled: true,
                                text: 'Адрес'
                            },
                            {
                                xtype: 'numbercolumn',
                                hidden: true,
                                width: 32,
                                dataIndex: 'izm',
                                menuDisabled: true,
                                text: 'Пр',
                                format: '0'
                            },
                            {
                                xtype: 'numbercolumn',
                                summaryRenderer: function(val, params, data) {
                                    var n =Ext.util.Format.number(val,'0,000.00');
                                    if (val >= 0) {
                                        return '<span style="color:#000; font-weight:bold;">' + n + '</span>';
                                    } else  {
                                        return '<span style="color:red; font-weight:bold;">' + n + '</span>';
                                    }
                                },
                                summaryType: 'sum',
                                width: 85,
                                dataIndex: 'kvartplata',
                                menuDisabled: true,
                                text: 'Кварт',
                                editor: {
                                    xtype: 'numberfield'
                                }
                            },
                            {
                                xtype: 'numbercolumn',
                                summaryRenderer: function(val, params, data) {
                                    var n =Ext.util.Format.number(val,'0,000.00');
                                    if (val >= 0) {
                                        return '<span style="color:#000; font-weight:bold;">' + n + '</span>';
                                    } else  {
                                        return '<span style="color:red; font-weight:bold;">' + n + '</span>';
                                    }
                                },
                                summaryType: 'sum',
                                width: 90,
                                dataIndex: 'otoplenie',
                                menuDisabled: true,
                                text: 'Отопл',
                                editor: {
                                    xtype: 'numberfield'
                                }
                            },
                            {
                                xtype: 'numbercolumn',
                                summaryRenderer: function(val, params, data) {
                                    var n =Ext.util.Format.number(val,'0,000.00');
                                    if (val >= 0) {
                                        return '<span style="color:#000; font-weight:bold;">' + n + '</span>';
                                    } else  {
                                        return '<span style="color:red; font-weight:bold;">' + n + '</span>';
                                    }
                                },
                                summaryType: 'sum',
                                width: 90,
                                dataIndex: 'ptn',
                                menuDisabled: true,
                                text: 'ПТН',
                                editor: {
                                    xtype: 'numberfield'
                                }
                            },
                            {
                                xtype: 'numbercolumn',
                                summaryRenderer: function(val, params, data) {
                                    var n =Ext.util.Format.number(val,'0,000.00');
                                    if (val >= 0) {
                                        return '<span style="color:#000; font-weight:bold;">' + n + '</span>';
                                    } else  {
                                        return '<span style="color:red; font-weight:bold;">' + n + '</span>';
                                    }
                                },
                                summaryType: 'sum',
                                width: 80,
                                dataIndex: 'podogrev',
                                menuDisabled: true,
                                text: 'Подог',
                                editor: {
                                    xtype: 'numberfield'
                                }
                            },
                            {
                                xtype: 'numbercolumn',
                                summaryRenderer: function(val, params, data) {
                                    var n =Ext.util.Format.number(val,'0,000.00');
                                    if (val >= 0) {
                                        return '<span style="color:#000; font-weight:bold;">' + n + '</span>';
                                    } else  {
                                        return '<span style="color:red; font-weight:bold;">' + n + '</span>';
                                    }
                                },
                                summaryType: 'sum',
                                width: 80,
                                dataIndex: 'voda',
                                menuDisabled: true,
                                text: 'Вода',
                                editor: {
                                    xtype: 'numberfield'
                                }
                            },
                            {
                                xtype: 'numbercolumn',
                                summaryRenderer: function(val, params, data) {
                                    var n =Ext.util.Format.number(val,'0,000.00');
                                    if (val >= 0) {
                                        return '<span style="color:#000; font-weight:bold;">' + n + '</span>';
                                    } else  {
                                        return '<span style="color:red; font-weight:bold;">' + n + '</span>';
                                    }
                                },
                                summaryType: 'sum',
                                width: 80,
                                dataIndex: 'stoki',
                                menuDisabled: true,
                                text: 'Стоки',
                                editor: {
                                    xtype: 'numberfield'
                                }
                            },
                            {
                                xtype: 'numbercolumn',
                                summaryRenderer: function(val, params, data) {
                                    var n =Ext.util.Format.number(val,'0,000.00');
                                    if (val >= 0) {
                                        return '<span style="color:#000; font-weight:bold;">' + n + '</span>';
                                    } else  {
                                        return '<span style="color:red; font-weight:bold;">' + n + '</span>';
                                    }
                                },
                                summaryType: 'sum',
                                width: 80,
                                dataIndex: 'tbo',
                                menuDisabled: true,
                                text: 'ТБО',
                                editor: {
                                    xtype: 'numberfield'
                                }
                            },
                            {
                                xtype: 'numbercolumn',
                                summaryRenderer: function(val, params, data) {
                                    var n =Ext.util.Format.number(val,'0,000.00');
                                    if (val >= 0) {
                                        return '<span style="color:#000; font-weight:bold;">' + n + '</span>';
                                    } else  {
                                        return '<span style="color:red; font-weight:bold;">' + n + '</span>';
                                    }
                                },
                                summaryType: 'sum',
                                width: 90,
                                dataIndex: 'summa',
                                menuDisabled: true,
                                text: 'Сумма',
                                editor: {
                                    xtype: 'numberfield'
                                }
                            },
                            {
                                xtype: 'actioncolumn',
                                editRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                    var val="";
                                    return val;
                                },
                                width: 30,
                                menuDisabled: true,
                                altText: 'Удалить запись',
                                icon: 'css/images/ico/no.png',
                                items: [
                                    {
                                        handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                            var grid = view.findParentByType('grid');
                                            var store = view.getStore();
                                            var plugin = grid.getPlugin('rowEditGerz');
                                            plugin.cancelEdit();
                                            Ext.MessageBox.show({
                                                title: 'Внимание!',
                                                msg: 'Вы удаляете запись ! Подтвердите или отмените свои действия!',
                                                buttons: Ext.MessageBox.OKCANCEL,
                                                icon: Ext.MessageBox.WARNING,

                                                buttonText:{
                                                    ok: "Удалить!",
                                                    cancel: "Отмена"
                                                },
                                                fn:function(btn){
                                                    if(btn=='ok'){
                                                        // view.getStore().removeAt(rowIndex);
                                                        store.remove(record);

                                                        store.sync({
                                                            success: function(){
                                                                Ext.MessageBox.show({title: 'Удаление записи',
                                                                    msg:'Запись удалена',
                                                                    buttons: Ext.MessageBox.OK,
                                                                    icon: Ext.MessageBox.INFO
                                                                });
                                                            },
                                                            failure: function(){
                                                                Ext.MessageBox.show({title: 'Удаление записи',
                                                                    msg:'Запись не удалена',
                                                                    buttons: Ext.MessageBox.OK,
                                                                    icon: Ext.MessageBox.ERROR
                                                                });

                                                            },
                                                            scope: this
                                                        });
                                                    }
                                                }

                                            });
                                        },
                                        icon: 'resources/css/images/ico/no.png'
                                    }
                                ]
                            }
                        ],
                        plugins: [
                            Ext.create('Ext.grid.plugin.BufferedRenderer', {

                            }),
                            Ext.create('Ext.grid.plugin.RowEditing', {
                                pluginId: 'rowEditGerz',
                                listeners: {
                                    edit: 'onRowEditingEdit'
                                }
                            })
                        ],
                        features: [
                            {
                                ftype: 'summary',
                                dock: 'top'
                            },
                            {
                                ftype: 'groupingsummary',
                                id: 'groupGerz',
                                depthToIndent: 1000,
                                startCollapsed: true
                            }
                        ],
                        selModel: Ext.create('Ext.selection.CheckboxModel', {
                            selType: 'checkboxmodel',
                            mode: 'SINGLE'
                        })
                    }
                ]
            };
        if (instanceConfig) {
            me.getConfigurator().merge(me, config, instanceConfig);
        }
        return me.callParent([config]);
    },

    onRowEditingEdit: function(editor, context, eOpts) {
        var grid = editor.grid;
        var store = grid.getStore();
        var sm = store.getUpdatedRecords();
        var data = grid.getSelectionModel();
        if(sm.length) {

            store.sync({

                success: function(){
                    store.load();
                },
                scope:this
            });
        }

    }

});