/*
 * File: app/view/sprav/TabDvodomerViewController.js
 * Date: Wed Jul 22 2020 23:36:58 GMT+0300 (EEST)
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Ykis.view.sprav.TabDvodomerViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.tabdvodomer',

    onGrDvodomerSelectionChange: function(model, selected, eOpts) {
        var stUser = Ext.data.StoreManager.get("StUser");
        var stWater = Ext.data.StoreManager.get("StAllPokDVodomera");
        var stTekPokVodomera = Ext.data.StoreManager.get("StTekPokDVodomera");
        var StOrgByDvodomer = Ext.data.StoreManager.get("StOrgByDvodomer");
        var StAOVodomer = Ext.data.StoreManager.get("StAOVodomer");
        var btnAddAOPokVod =  Ext.getCmp('btnAddAOPokVod');

        var values =stUser.getAt(0);
        var login = values.get('login');
        var password = values.get('password');
        var house_id = values.get('house_id');
        stUser.sync();

        //GRID
        var dt = new Date();
        var dataNachAvgVodomer = Ext.getCmp('dataNachAvgVodomer');

        var grHDVodomer = Ext.getCmp('grHDVodomer');
        var grAOVodomer = Ext.getCmp('grAOVodomer');
        var grAvgVodomer = Ext.getCmp('grAvgVodomer');
        var grAktPVoda = Ext.getCmp('grAktPVoda');

        var grAllPokDvodomera = Ext.getCmp('grAllPokDvodomera');
        var grOrgByDVodomer = Ext.getCmp('grOrgByDVodomer');
        var fmDVodomers = Ext.getCmp('fmDVodomers');

        grHDVodomer.setDisabled(false);
        grAOVodomer.setDisabled(false);
        grAvgVodomer.setDisabled(false);

        grAllPokDvodomera.setDisabled(false);
        grOrgByDVodomer.setDisabled(false);
        grAktPVoda.setDisabled(false);

        //FORMA

        var fmVodomer = Ext.getCmp('fmDVodomers');
        var insTekPokVod = fmVodomer.down('#insTekPokDVodomera');


        var tekValue = fmVodomer.getForm().findField('tekp');
        var newValue = fmVodomer.getForm().findField('newValue');
        var InsPoverkaDvod = fmVodomer.down('#InsPoverkaDvod');

        var AddMeedlePokVod = fmVodomer.down('#AddMeedlePokDVod');
        var insMeedlePokVod = fmVodomer.down('#insMeedlePokDVod');
        var date_ot = fmVodomer.getForm().findField('data_ot');
        var date_do = fmVodomer.getForm().findField('data_do');
        var date_ao = fmVodomer.getForm().findField('date_ao');
        var date_ar = fmVodomer.getForm().findField('date_ar');
        var pok_ot = fmVodomer.getForm().findField('pok_ot');
        var pok_do = fmVodomer.getForm().findField('pok_do');
        var rday = fmVodomer.getForm().findField('rday');
        var days = fmVodomer.getForm().findField('days');
        var kub_day = fmVodomer.getForm().findField('kub_day');
        var qty_kub = fmVodomer.getForm().findField('qty_kub');
        var newKubov = fmVodomer.getForm().findField('newKubov');
        var date_new = fmVodomer.getForm().findField('date_new').setValue(Ext.Date.format(dt, 'Y-m-d'));

        //LOGIKA

        grHDVodomer.getView().getSelectionModel().deselectAll();

        if (selected.length){
            values.set({'dvodomer_id':selected[0].data.dvodomer_id});
            btnAddAOPokVod.setDisabled(false);

            fmDVodomers.setTitle('<font color="#800000"> Технічна характеристика будинку' +
            '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; '+
            selected[0].data.house +
            '&nbsp;&nbsp;&nbsp;&nbsp;Будинковый водомір  № '+
            selected[0].data.dvodomer_id +
            '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'+
            selected[0].data.vvod + '</font>');

            stWater.load({
                params: {
                    login:login,
                    password:password,
                    what:'AllPokDVodomera',
                    what_id: selected[0].data.house_id,
                    dvodomer_id: selected[0].data.dvodomer_id
                },
                scope:this
            });
            StAOVodomer.load({
                params: {
                    login:login,
                    password:password,
                    what:'OnPoverkaVodomer',
                    what_id: selected[0].data.house_id,
                    dvodomer_id: selected[0].data.dvodomer_id
                },
                scope:this
            });

            stTekPokVodomera.load({
                params: {
                    login:login,
                    password:password,
                    what:'TekPokDVodomera',
                    what_id: selected[0].data.house_id,
                    house_id: selected[0].data.house_id,
                    dvodomer_id: selected[0].data.dvodomer_id
                },
                callback: function(records,operation,success){
                    if(success){
                        fmVodomer.getForm().loadRecord(records[0]);

                    }
                },
                scope:this
            });
            StOrgByDvodomer.load({
                params: {
                    login:login,
                    password:password,
                    what:'OrgByDvodomer',
                    what_id: selected[0].data.house_id,
                    house_id: selected[0].data.house_id,
                    dvodomer_id: selected[0].data.dvodomer_id
                },
                scope:this
            });
            if (selected[0].data.out===1){
                InsPoverkaDvod.setDisabled(false);
                AddMeedlePokVod.setDisabled(false);
                insMeedlePokVod.setDisabled(false);
                insTekPokVod.setDisabled(true);
                date_ao.setDisabled(false);
                date_ar.setDisabled(false);
                date_ot.setDisabled(true);
                date_do.setDisabled(true);
                qty_kub.setDisabled(true);
                pok_do.setDisabled(true);
                pok_ot.setDisabled(true);
                rday.setDisabled(true);
                days.setDisabled(true);
                qty_kub.setDisabled(true);
                kub_day.setDisabled(true);
                newKubov.setDisabled(true);
                newValue.setDisabled(true);

            } else {
                InsPoverkaDvod.setDisabled(true);
                AddMeedlePokVod.setDisabled(true);
                insMeedlePokVod.setDisabled(true);
                insTekPokVod.setDisabled(false);
                date_ao.setDisabled(true);
                date_ar.setDisabled(true);
                date_ot.setDisabled(true);
                date_do.setDisabled(true);
                pok_do.setDisabled(true);
                pok_ot.setDisabled(true);
                days.setDisabled(true);
                rday.setDisabled(true);
                qty_kub.setDisabled(true);
                kub_day.setDisabled(true);
                newKubov.setDisabled(true);
                newValue.setDisabled(false);
            }
        }

    },

    onDatefieldChange11: function(field, newValue, oldValue, eOpts) {
        Ext.getCmp('AddMeedlePokVod').setDisabled(false);

    },

    onDatefieldSelect1111: function(field, value, eOpts) {
        var form = field.findParentByType('form');
        var dt = new Date();
        var d = Ext.Date.getDaysInMonth(dt);
        var  date_ot = form.getForm().findField('data_ot');
        var  date_do = form.getForm().findField('data_do');
        date_ot.setDisabled(false);
        date_do.setDisabled(false);
        date_ot.setValue(value);
        date_do.setValue(Ext.Date.format(dt, 'Y-m-d'));



    },

    onDatefieldSelect211: function(field, value, eOpts) {
        var form = field.findParentByType('form');

        var  date_do = form.getForm().findField('data_do');
        Ext.getCmp('AddMeedlePokVod').setDisabled(false);
        Ext.getCmp('InsPoverka').setDisabled(false);

        date_do.setDisabled(false);
        date_do.setValue(value);

    },

    onDataNachAvgVodomerChange: function(field, newValue, oldValue, eOpts) {

        var stUser = Ext.data.StoreManager.get("StUser");
        var values =stUser.getAt(0);
        var login = values.get('login');
        var password = values.get('password');
        var dvodomer_id = values.get('dvodomer_id');
        var data =  Ext.getCmp('dataNachAvgVodomer').getValue();

        var StVodomerAvg = Ext.data.StoreManager.get("StVodomerAvg");

        var btnAddAvgPokVod =  Ext.getCmp('btnAddAvgPokVod');
        var btnRefreshAvgPokVod =  Ext.getCmp('btnRefreshAvgPokVod');


        if (dvodomer_id !== 0) {
            btnAddAvgPokVod.setDisabled(false);
            btnRefreshAvgPokVod.setDisabled(false);


            StVodomerAvg.load({
                params: {
                    login:login,
                    password:password,
                    what:'VodomerAvg',
                    data:data,
                    dvodomer_id: dvodomer_id
                },
                scope:this
            });

        }else {

            Ext.MessageBox.show({
                title: 'Начисление кубов по среднему',
                msg: 'Не выбран домовой водомер',
                buttons: Ext.MessageBox.OK,
                icon: Ext.MessageBox.ERROR
            });
        }
    },

    onDataNachAvgVodomerSelect: function(field, value, eOpts) {

        var stUser = Ext.data.StoreManager.get("StUser");
        var values =stUser.getAt(0);
        var login = values.get('login');
        var password = values.get('password');
        var dvodomer_id = values.get('dvodomer_id');
        var data =  Ext.getCmp('dataNachAvgVodomer').getValue();

        var StVodomerAvg = Ext.data.StoreManager.get("StVodomerAvg");

        var btnAddAvgPokVod =  Ext.getCmp('btnAddAvgPokVod');
        var btnRefreshAvgPokVod =  Ext.getCmp('btnRefreshAvgPokVod');


        if (dvodomer_id !== 0) {
            btnAddAvgPokVod.setDisabled(false);
            btnRefreshAvgPokVod.setDisabled(false);

            StVodomerAvg.load({
                params: {
                    login:login,
                    password:password,
                    what:'VodomerAvg',
                    data:data,
                    dvodomer_id: dvodomer_id
                },
                scope:this
            });

        }else {

            Ext.MessageBox.show({
                title: 'Начисление кубов по среднему',
                msg: 'Не выбран домовой водомер',
                buttons: Ext.MessageBox.OK,
                icon: Ext.MessageBox.ERROR
            });
        }
    }

});
