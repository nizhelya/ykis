/*
 * File: app/view/sprav/TabDogovor.js
 * Date: Fri Oct 16 2020 11:23:15 GMT+0300 (EEST)
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Ykis.view.sprav.TabDogovor', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.tabdogovor',

    requires: [
        'Ykis.view.sprav.TabDogovorViewModel',
        'Ext.grid.Panel',
        'Ext.view.Table',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.toolbar.Separator',
        'Ext.form.field.ComboBox',
        'Ext.grid.column.Number',
        'Ext.grid.column.Date',
        'Ext.grid.column.Action',
        'Ext.grid.feature.GroupingSummary',
        'Ext.grid.feature.Summary'
    ],

    viewModel: {
        type: 'tabdogovor'
    },
    id: 'tabDogovor',
    scrollable: true,
    layout: 'fit',
    closable: true,
    title: 'Договора',
    defaultListenerScope: true,

    items: [
        {
            xtype: 'gridpanel',
            id: 'grDogovor',
            scrollable: true,
            title: '',
            store: 'StDogovor',
            viewConfig: {
                emptyText: 'Нет договоров'
            },
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            handler: function(button, event) {
                                var grid = button.findParentByType('grid');
                                var gr = grid.getView().getFeature('groupDogovor');


                                if (gr.isAllCollapsed() ) {

                                    //  gr.expandAll();
                                } else {
                                    var myMask= Ext.Msg.show({
                                        title:'Свернуть...',
                                        msg: 'Свпрачивание таблиці по группам.Ожидайте...',
                                        buttons: Ext.Msg.CANCEL,
                                        wait: true,
                                        modal: true,
                                        icon: Ext.Msg.INFO
                                    });
                                    gr.collapseAll();
                                    myMask.close();
                                }

                            },
                            id: 'btnDogovorCollExpand',
                            icon: 'resources/css/images/ico/sprav.png',
                            text: '',
                            tooltip: 'Свернуть Развернуть'
                        },
                        {
                            xtype: 'tbseparator'
                        },
                        {
                            xtype: 'combobox',
                            width: 350,
                            fieldLabel: 'Организация',
                            labelWidth: 80,
                            name: 'org_id',
                            displayField: 'sname',
                            queryMode: 'local',
                            store: 'StCompany',
                            valueField: 'org_id',
                            listeners: {
                                select: 'onComboboxSelect2111'
                            }
                        },
                        {
                            xtype: 'button',
                            handler: function(button, event) {
                                var stUser = Ext.data.StoreManager.get("StUser");
                                var values =stUser.getAt(0);
                                var StDogovor = Ext.data.StoreManager.get("StDogovor");
                                var org_id = values.get('org_id');


                                if (org_id){

                                    StDogovor.load({
                                        params: {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            what:'getDogovor',
                                            org_id:org_id
                                        },
                                        scope:this
                                    });
                                }
                            },
                            disabled: true,
                            id: 'btnDogovorAll',
                            width: 132,
                            icon: 'resources/css/images/ico/add.png',
                            text: 'Все договора'
                        },
                        {
                            xtype: 'combobox',
                            disabled: true,
                            hideMode: 'visibility',
                            id: 'cbHouseDogovor',
                            width: 182,
                            fieldLabel: '',
                            name: 'house_id',
                            emptyText: 'Дом',
                            displayField: 'house',
                            queryMode: 'local',
                            store: 'StHousesOrg',
                            valueField: 'house_id',
                            listeners: {
                                select: 'onCbTabLgotnikHouseSelect11'
                            }
                        },
                        {
                            xtype: 'button',
                            handler: function(button, event) {
                                var stUser = Ext.data.StoreManager.get("StUser");
                                var tabPnCenter =  Ext.getCmp('tabPnCenter');
                                var cbHouseDogovor =  Ext.getCmp('cbHouseDogovor');

                                var values =stUser.getAt(0);
                                var report = 'DogovoraHouse';
                                var namereport = 'Договора';
                                var value = {
                                    login:values.get('login'),
                                    password:values.get('password'),
                                    org_id:values.get('org_id'),
                                    house_id:cbHouseDogovor.getValue(),
                                    report:report,
                                    what:report
                                };

                                var tab = tabPnCenter.child('#'+report);
                                if (!tab) {
                                    tab  = tabPnCenter.add({
                                        xtype:'tabreportorg',
                                        title:namereport,
                                        id:''+report+''
                                    });

                                }
                                tabPnCenter.setActiveTab(tab);
                                var reppan = tab.getComponent(0);
                                // Basic mask:
                                var myMask = Ext.Msg.show({
                                    title:'Формирование документа...',
                                    msg: 'Документ ...',
                                    buttons: Ext.Msg.CANCEL,
                                    wait: true,
                                    modal: true,
                                    icon: Ext.Msg.INFO
                                });
                                setTimeout(function(){

                                    QueryKassa.getRaspechatka(value,function(data){
                                        if (data){
                                            reppan.update(data.content);
                                            Ext.REPORTCONTENT =data.content;
                                            Ext.REPORTSQL =data.sql;
                                            Ext.REPORTTITLE =report;
                                            myMask.close();

                                        } else {

                                            myMask.close();
                                            Ext.MessageBox.show({
                                                title: 'Ошибка ',
                                                msg: 'Документ не создан',
                                                buttons: Ext.MessageBox.OK,
                                                icon: Ext.MessageBox.ERROR
                                            });
                                        }
                                    });
                                }, 1000);

                            },
                            disabled: true,
                            id: 'btnDogovorPrint',
                            width: 225,
                            icon: 'resources/css/images/ico/add.png',
                            text: 'Печать договоров  по дому'
                        }
                    ]
                }
            ],
            columns: [
                {
                    xtype: 'numbercolumn',
                    hidden: true,
                    width: 60,
                    dataIndex: 'rec_id',
                    menuDisabled: true,
                    text: 'Запись',
                    format: '0'
                },
                {
                    xtype: 'numbercolumn',
                    hidden: true,
                    width: 64,
                    dataIndex: 'house_id',
                    text: 'Дом_ид',
                    format: '0'
                },
                {
                    xtype: 'numbercolumn',
                    hidden: true,
                    width: 57,
                    dataIndex: 'address_id',
                    menuDisabled: true,
                    text: 'Ид',
                    format: '0'
                },
                {
                    xtype: 'numbercolumn',
                    summaryType: 'sum',
                    width: 67,
                    dataIndex: 'vkl',
                    menuDisabled: true,
                    text: 'вкл',
                    format: '0'
                },
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    width: 140,
                    dataIndex: 'house',
                    menuDisabled: true,
                    text: 'Дом'
                },
                {
                    xtype: 'gridcolumn',
                    width: 140,
                    dataIndex: 'address',
                    menuDisabled: true,
                    text: 'Адрес'
                },
                {
                    xtype: 'gridcolumn',
                    items: {
                        xtype: 'textfield',
                        flex: 1,
                        margin: 2,
                        enableKeyEvents: true,
                        listeners: {
                            keyup: function() {
                        var store = this.up('tablepanel').store;
                        store.clearFilter();
                        if (this.value) {
                        store.filter({
                        property     : 'nanim',
                        value         : this.value,
                        anyMatch      : true,
                        caseSensitive : false
                        });
                        }
                        },
                            buffer: 1000
                        }
                    },
                    width: 225,
                    dataIndex: 'nanim',
                    menuDisabled: true,
                    text: 'Ф.И.О.',
                    editor: {
                        xtype: 'textfield'
                    }
                },
                {
                    xtype: 'gridcolumn',
                    text: 'Договор',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'nomer',
                            text: '№'
                        },
                        {
                            xtype: 'datecolumn',
                            width: 90,
                            dataIndex: 'start',
                            menuDisabled: true,
                            text: 'Начало',
                            format: 'd-m-Y'
                        },
                        {
                            xtype: 'datecolumn',
                            width: 96,
                            dataIndex: 'finish',
                            menuDisabled: true,
                            text: 'Окончание',
                            format: 'd-m-Y'
                        }
                    ]
                },
                {
                    xtype: 'gridcolumn',
                    text: 'Паспортные данные',
                    columns: [
                        {
                            xtype: 'datecolumn',
                            width: 96,
                            dataIndex: 'viddata',
                            menuDisabled: true,
                            text: 'дата',
                            format: 'd-m-Y'
                        },
                        {
                            xtype: 'numbercolumn',
                            dataIndex: 'inn',
                            text: 'инн'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'passport',
                            text: 'Серия №'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'vidan',
                            text: 'Выдан'
                        },
                        {
                            xtype: 'actioncolumn',
                            editRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                var val="";
                                return val;
                            },
                            width: 30,
                            menuDisabled: true,
                            altText: 'Удалить запись',
                            icon: 'css/images/ico/no.png',
                            items: [
                                {
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        var stUser = Ext.data.StoreManager.get("StUser");
                                        var values =stUser.getAt(0);

                                        var params = {
                                            login:values.get('login'),
                                            password:values.get('password'),
                                            org_id:values.get('org_id'),
                                            what:'delDogovor'
                                        };

                                        //GRID
                                        var store = view.getStore();
                                        var value = record.data;


                                        //LOGIKA


                                        Ext.Object.merge(value, params);
                                        //console.log(value);

                                        Ext.MessageBox.confirm({
                                            title: 'Удаление записи',
                                            msg: 'Вы удаляете запись   <br> Подтвердите или отмените свои действия.',
                                            buttons: Ext.MessageBox.OKCANCEL,
                                            icon: Ext.MessageBox.ERROR,
                                            buttonText:{
                                                ok:'подтвеждаю',
                                                cancel:'отмена'
                                            },
                                            fn:function(btn,newValue){
                                                if(btn=='ok'){
                                                    QueryAddress.updateRecords(value,function(results){
                                                        if(results.success==="1"){
                                                            store.load({
                                                                params: {
                                                                    what:'getDogovor',
                                                                    login:values.get('login'),
                                                                    org_id:values.get('org_id'),
                                                                    password:values.get('password')
                                                                }
                                                            });

                                                            Ext.MessageBox.show({
                                                                title: 'Удаление записи',
                                                                msg: results.msg,
                                                                buttons: Ext.MessageBox.OK,
                                                                icon: Ext.MessageBox.INFO
                                                            });
                                                        } else {
                                                            Ext.MessageBox.show({
                                                                title: 'Удаление записи',
                                                                msg: results.msg,
                                                                buttons: Ext.MessageBox.OK,
                                                                icon: Ext.MessageBox.ERROR
                                                            });

                                                        }

                                                    });
                                                }
                                            }
                                        });
                                    },
                                    icon: 'resources/css/images/ico/no.png'
                                }
                            ]
                        }
                    ]
                }
            ],
            features: [
                {
                    ftype: 'groupingsummary',
                    id: 'groupDogovor',
                    startCollapsed: true
                },
                {
                    ftype: 'summary',
                    dock: 'top'
                }
            ]
        }
    ],

    onComboboxSelect2111: function(combo, record, eOpts) {
        //in use

        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var values =stUser.getAt(0);
        var login = values.get('login');
        var password = values.get('password');
        var btnDogovorAll =  Ext.getCmp('btnDogovorAll');
        var cbHouseDogovor =  Ext.getCmp('cbHouseDogovor');
        var StDogovor = Ext.data.StoreManager.get("StDogovor");

        //var form =  Ext.getCmp('fmHouseResidents');

        //LOGIN & PASSWORD

            if (record) {
                btnDogovorAll.setDisabled(false);
                cbHouseDogovor.setDisabled(false);
                values.set({'org_id':record.get('org_id')});
                stUser.sync();
                StDogovor.load({
                    params: {
                        what:'getDogovor',
                        login:login,
                        password:password,
                        org_id:record.get('org_id')
                    },
                    scope:this
                });
            }


    },

    onCbTabLgotnikHouseSelect11: function(combo, record, eOpts) {
        var stUser = Ext.data.StoreManager.get("StUser");
        var values =stUser.getAt(0);
        var login = values.get('login');
        var password = values.get('password');
        var org_id = values.get('org_id');

        var btnDogovorPrint =  Ext.getCmp('btnDogovorPrint');
        var StDogovor = Ext.data.StoreManager.get("StDogovor");

        if (record) {
            btnDogovorPrint.setDisabled(false);
            StDogovor.load({
                params: {
                    what:'getDogovorHouse',
                    login:login,
                    password:password,
                    house_id:record.get("house_id"),
                    org_id:org_id
                },
                scope:this
            });
        }
    }

});