/*
 * File: app/view/sprav/TabLgota.js
 * Date: Sun May 10 2015 11:55:47 GMT+0300 (EEST)
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Ykis.view.sprav.TabLgota', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.tablgota',

    requires: [
        'Ykis.view.sprav.TabLgotaViewModel',
        'Ext.grid.Panel',
        'Ext.view.Table',
        'Ext.panel.Tool',
        'Ext.grid.column.Action',
        'Ext.grid.column.Number',
        'Ext.form.field.Number',
        'Ext.form.field.TextArea',
        'Ext.selection.CheckboxModel',
        'Ext.grid.plugin.RowEditing',
        'Ext.grid.plugin.BufferedRenderer'
    ],

    viewModel: {
        type: 'tablgota'
    },
    id: 'tabLgota',
    scrollable: true,
    layout: 'fit',
    closable: true,
    title: 'Льгота',
    defaultListenerScope: true,

    listeners: {
        activate: 'onTabLgotaActivate'
    },

    initConfig: function(instanceConfig) {
        var me = this,
            config = {
                items: [
                    {
                        xtype: 'gridpanel',
                        id: 'grLgota',
                        scrollable: true,
                        collapseDirection: 'top',
                        title: 'Ввод новой льготы',
                        store: 'StLgota',
                        viewConfig: {
                            loadingText: 'Загрузка...'
                        },
                        tools: [
                            {
                                xtype: 'tool',
                                id: 'btnGrLgotaAdd',
                                tooltip: 'Добавить запись',
                                type: 'plus',
                                listeners: {
                                    click: 'onBtnGrLgotaAddClick'
                                }
                            }
                        ],
                        listeners: {
                            selectionchange: 'onGrLgotaSelectionChange'
                        },
                        columns: [
                            {
                                xtype: 'actioncolumn',
                                editRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                    var val="";
                                    return val;
                                },
                                width: 30,
                                menuDisabled: true,
                                items: [
                                    {
                                        handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                            var grid = view.findParentByType('grid');
                                            var store = view.store;
                                            var lgota = record.get('lgota');
                                            var lgota_ua = record.get('lgota_ua');
                                            var law_article = record.get('law_article');
                                            var percent = record.get('percent');
                                            var gr = record.get('gr');
                                            var plugin = grid.getPlugin('rowEditLgota');

                                            plugin.cancelEdit();

                                            var newRecord = store.model.create();
                                            newRecord = {category:1,lgota:lgota,lgota_ua:lgota_ua,percent:percent,gr:gr,law_article:law_article};
                                            store.insert(0, newRecord);
                                            plugin.startEdit(0, 0);
                                        },
                                        icon: 'resources/css/images/ico/add.png'
                                    }
                                ]
                            },
                            {
                                xtype: 'numbercolumn',
                                hidden: true,
                                width: 49,
                                dataIndex: 'lgota_id',
                                text: 'Ид',
                                format: '0'
                            },
                            {
                                xtype: 'numbercolumn',
                                width: 40,
                                dataIndex: 'category',
                                menuDisabled: true,
                                text: 'Кат',
                                format: '0',
                                editor: {
                                    xtype: 'numberfield',
                                    hideTrigger: true,
                                    decimalPrecision: 0
                                }
                            },
                            {
                                xtype: 'gridcolumn',
                                renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                    metaData.style = 'white-space:pre-wrap;';
                                    return value;

                                },
                                width: 209,
                                dataIndex: 'lgota',
                                text: 'Наименование льготы рус',
                                editor: {
                                    xtype: 'textareafield',
                                    hideLabel: true
                                }
                            },
                            {
                                xtype: 'gridcolumn',
                                renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                    metaData.style = 'white-space:pre-wrap;';
                                    return value;

                                },
                                width: 228,
                                dataIndex: 'lgota_ua',
                                menuDisabled: true,
                                text: 'Наименование льготы укр',
                                editor: {
                                    xtype: 'textareafield',
                                    hideLabel: true
                                }
                            },
                            {
                                xtype: 'numbercolumn',
                                width: 40,
                                dataIndex: 'percent',
                                menuDisabled: true,
                                text: '%',
                                format: '0',
                                editor: {
                                    xtype: 'numberfield',
                                    hideTrigger: true,
                                    decimalPrecision: 0
                                }
                            },
                            {
                                xtype: 'numbercolumn',
                                width: 40,
                                dataIndex: 'gr',
                                menuDisabled: true,
                                text: 'Гр',
                                format: '0',
                                editor: {
                                    xtype: 'numberfield',
                                    hideTrigger: true,
                                    decimalPrecision: 0
                                }
                            },
                            {
                                xtype: 'gridcolumn',
                                renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                    metaData.style = 'white-space:pre-wrap;';
                                    return value;

                                },
                                shrinkWrap: 3,
                                dataIndex: 'law_article',
                                menuDisabled: true,
                                text: 'Статья',
                                flex: 1,
                                editor: {
                                    xtype: 'textareafield',
                                    hideLabel: true
                                }
                            },
                            {
                                xtype: 'actioncolumn',
                                editRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                    var val="";
                                    return val;
                                },
                                width: 30,
                                menuDisabled: true,
                                items: [
                                    {
                                        handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                            var grid = view.findParentByType('grid');
                                            var store = view.getStore();
                                            var value = store.getAt(rowIndex).data;
                                            var plugin = grid.getPlugin('rowEditLgota');
                                            plugin.cancelEdit();
                                            Ext.MessageBox.show({
                                                title: 'Внимание!',
                                                msg: 'Вы удаляете данные ! Подтвердите свои действия!',
                                                buttons: Ext.MessageBox.OKCANCEL,
                                                icon: Ext.MessageBox.WARNING,

                                                buttonText:{
                                                    ok: "Удалить!",
                                                    cancel: "Отмена"
                                                },
                                                fn:function(btn){
                                                    if(btn=='ok'){
                                                        store.remove(record);

                                                        store.sync({
                                                            success: function(){
                                                                Ext.MessageBox.show({title: 'Удаление записи',
                                                                    msg:'Запись удалена',
                                                                    buttons: Ext.MessageBox.OK,
                                                                    icon: Ext.MessageBox.INFO
                                                                });
                                                            },
                                                            failure: function(){
                                                                Ext.MessageBox.show({title: 'Удаление записи',
                                                                    msg:'Невозможно удалить: льгота используется',
                                                                    buttons: Ext.MessageBox.OK,
                                                                    icon: Ext.MessageBox.ERROR
                                                                });

                                                            },
                                                            scope: this
                                                        });
                                                    }
                                                }

                                            });
                                        },
                                        icon: 'resources/css/images/ico/no.png'
                                    }
                                ]
                            }
                        ],
                        selModel: Ext.create('Ext.selection.CheckboxModel', {
                            selType: 'checkboxmodel',
                            mode: 'SINGLE'
                        }),
                        plugins: [
                            Ext.create('Ext.grid.plugin.RowEditing', {
                                pluginId: 'rowEditLgota',
                                listeners: {
                                    edit: 'onRowEditingEdit'
                                }
                            }),
                            Ext.create('Ext.grid.plugin.BufferedRenderer', {

                            })
                        ]
                    }
                ]
            };
        if (instanceConfig) {
            me.getConfigurator().merge(me, config, instanceConfig);
        }
        return me.callParent([config]);
    },

    onBtnGrLgotaAddClick: function(tool, e, owner, eOpts) {
        var me = this;
        var grid = tool.findParentByType('grid');
        var store = grid.store;
        var plugin = grid.getPlugin('rowEditLgota');
        plugin.cancelEdit();
        var newRecord = store.model.create();
        store.insert(0, newRecord);
        plugin.startEdit(0, 0);
    },

    onGrLgotaSelectionChange: function(model, selected, eOpts) {
        var btnAdd  = this.down('#btnGrLgotaAdd');
        btnAdd.setDisabled(false);

    },

    onRowEditingEdit: function(editor, context, eOpts) {
        var grid = editor.grid;
        var store = grid.getStore();
        var sm = store.getUpdatedRecords();
        var data = grid.getSelectionModel();
        if(sm.length) {
            store.sync({
                success: function(){
                    store.load();
                },
                scope:this
            });
        } else {
            store.sync({
                success: function(){
                    Ext.MessageBox.show({
                        title: 'Добавление льготника                ',
                        msg: 'Льготник добавлен',
                        buttons: Ext.MessageBox.OK,
                        icon: Ext.MessageBox.INFO
                    });
                    var btnAdd  = Ext.getCmp('btnGrLgotaAdd');
                    btnAdd.setDisabled(true);
                    store.load();
                },
                scope:this
            });
        }
    },

    onTabLgotaActivate: function(component, eOpts) {
        var login = Ext.data.StoreManager.get("StUser").getAt(0).get('login');
        var password = Ext.data.StoreManager.get("StUser").getAt(0).get('password');

        var StLgota = Ext.data.StoreManager.get("StLgota");

        StLgota.proxy.setExtraParam('login', login);
        StLgota.proxy.setExtraParam('password', password);
        StLgota.load();

    }

});