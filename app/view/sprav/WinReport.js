/*
 * File: app/view/sprav/WinReport.js
 * Date: Mon May 25 2020 10:40:10 GMT+0300 (EEST)
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Ykis.view.sprav.WinReport', {
    extend: 'Ext.window.Window',
    alias: 'widget.winreport',

    requires: [
        'Ykis.view.sprav.WinReportViewModel',
        'Ext.form.Panel',
        'Ext.form.FieldSet',
        'Ext.button.Button',
        'Ext.form.Label',
        'Ext.form.field.Date',
        'Ext.form.field.ComboBox',
        'Ext.form.RadioGroup',
        'Ext.form.field.Radio',
        'Ext.form.field.Number'
    ],

    viewModel: {
        type: 'winreport'
    },
    height: 516,
    id: 'winReport',
    width: 494,
    layout: 'fit',
    title: 'Выбор параметров',
    modal: true,
    defaultListenerScope: true,

    items: [
        {
            xtype: 'form',
            id: 'fmWinReport',
            layout: 'fit',
            title: '',
            items: [
                {
                    xtype: 'fieldset',
                    style: 'background-color: #DCDCDC;',
                    layout: 'absolute',
                    title: '',
                    items: [
                        {
                            xtype: 'button',
                            x: 260,
                            y: 420,
                            formBind: true,
                            height: 30,
                            id: 'btnWinReportOrg',
                            width: 170,
                            icon: 'resources/css/images/ico/add.png',
                            text: 'Сформировать'
                        },
                        {
                            xtype: 'button',
                            handler: function(button, event) {
                                var treeGrid = Ext.getCmp('treeMenuSpravView');
                                //var selectedItem = treeGrid.getSelectionModel().getSelection();
                                var model = treeGrid.getSelectionModel();
                                model.select(1);
                                this.up('#winReport').close();
                            },
                            x: 15,
                            y: 425,
                            height: 30,
                            width: 80,
                            icon: 'resources/css/images/ico/delete.png',
                            text: 'Отмена'
                        },
                        {
                            xtype: 'label',
                            height: 25,
                            id: 'headerReport',
                            style: '{color: #D15706; text-shadow: -1px -1px white, 1px 1px #333;font-size:14pt;}',
                            width: 435,
                            text: 'Наименование отчета'
                        },
                        {
                            xtype: 'fieldset',
                            x: 15,
                            y: 40,
                            height: 90,
                            id: 'fsGetPeriod',
                            maxWidth: 200,
                            style: 'background-color: #F1EEEE ;',
                            width: 170,
                            title: 'Период отчета',
                            items: [
                                {
                                    xtype: 'datefield',
                                    anchor: '100%',
                                    id: 'dateRepFrom',
                                    fieldLabel: 'С',
                                    labelWidth: 20,
                                    name: 'date_from',
                                    format: 'd-m-Y',
                                    submitFormat: 'Y-m-d',
                                    listeners: {
                                        afterrender: 'onDateRepFromAfterRender',
                                        validitychange: 'onDateRepFromValidityChange'
                                    }
                                },
                                {
                                    xtype: 'datefield',
                                    anchor: '100%',
                                    id: 'dateRepTo',
                                    fieldLabel: 'По',
                                    labelWidth: 20,
                                    name: 'date_to',
                                    format: 'd-m-Y',
                                    submitFormat: 'Y-m-d',
                                    listeners: {
                                        afterrender: 'onDateRepToAfterRender'
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'combobox',
                            x: 15,
                            y: 185,
                            hidden: true,
                            hideMode: 'visibility',
                            id: 'cbRepCat',
                            style: 'background-color: #F1EEEE ;',
                            width: 170,
                            fieldLabel: '',
                            labelStyle: 'background-color: #C2D9C9;',
                            name: 'cat_id',
                            emptyText: 'Категория',
                            displayField: 'name',
                            store: 'StOrgCat',
                            valueField: 'cat_id'
                        },
                        {
                            xtype: 'combobox',
                            x: 15,
                            y: 355,
                            hidden: true,
                            hideMode: 'visibility',
                            id: 'cbRepGrLgota',
                            style: 'background-color: #F1EEEE ;',
                            width: 430,
                            fieldLabel: '',
                            name: 'gr',
                            emptyText: 'Выберите группу льготников',
                            displayField: 'law_article',
                            store: 'StLgota',
                            valueField: 'gr'
                        },
                        {
                            xtype: 'combobox',
                            x: 285,
                            y: 80,
                            hidden: true,
                            hideMode: 'visibility',
                            id: 'cbRepRaion',
                            style: 'background-color: #F1EEEE ;',
                            width: 160,
                            fieldLabel: '',
                            name: 'raion_id',
                            emptyText: 'Район',
                            displayField: 'raion',
                            queryMode: 'local',
                            store: 'StRaionOrg',
                            valueField: 'raion_id',
                            listeners: {
                                select: 'onCbRepRaionSelect'
                            }
                        },
                        {
                            xtype: 'combobox',
                            x: 285,
                            y: 115,
                            hidden: true,
                            hideMode: 'visibility',
                            id: 'cbRepHouse',
                            style: 'background-color: #F1EEEE ;',
                            width: 160,
                            fieldLabel: '',
                            name: 'house_id',
                            emptyText: 'Дом',
                            displayField: 'house',
                            queryMode: 'local',
                            store: 'StHousesOrg',
                            valueField: 'house_id',
                            listeners: {
                                select: 'onCbRepHouseSelect'
                            }
                        },
                        {
                            xtype: 'combobox',
                            x: 15,
                            y: 290,
                            hidden: true,
                            hideMode: 'visibility',
                            id: 'cbRepOrg',
                            style: 'background-color: #F1EEEE ;',
                            width: 430,
                            fieldLabel: '',
                            name: 'org_id',
                            emptyText: 'Организация',
                            hideTrigger: true,
                            displayField: 'sname',
                            minChars: 3,
                            store: 'StOrg',
                            typeAhead: true,
                            valueField: 'org_id'
                        },
                        {
                            xtype: 'checkboxfield',
                            x: 25,
                            y: 150,
                            hidden: true,
                            id: 'chkRepCat',
                            style: 'background-color: #F1EEEE ;',
                            fieldLabel: '',
                            name: 'cat_yes',
                            boxLabel: 'По категории собственности',
                            inputValue: '1',
                            uncheckedValue: '0',
                            listeners: {
                                change: 'onCheckboxfieldChange'
                            }
                        },
                        {
                            xtype: 'checkboxfield',
                            x: 200,
                            y: 80,
                            hidden: true,
                            id: 'chkRepRaion',
                            style: 'background-color: #F1EEEE ;',
                            fieldLabel: '',
                            name: 'raion_yes',
                            boxLabel: 'По району',
                            inputValue: '1',
                            uncheckedValue: '0',
                            listeners: {
                                change: 'onCheckboxfieldChange1'
                            }
                        },
                        {
                            xtype: 'checkboxfield',
                            x: 280,
                            y: 45,
                            hidden: true,
                            id: 'chkRepCity',
                            style: 'background-color: #F1EEEE ;',
                            fieldLabel: '',
                            name: 'city_yes',
                            boxLabel: 'По городу',
                            inputValue: '1',
                            uncheckedValue: '0',
                            listeners: {
                                change: 'onCheckboxfieldChange11'
                            }
                        },
                        {
                            xtype: 'checkboxfield',
                            x: 200,
                            y: 115,
                            hidden: true,
                            id: 'chkRepHouse',
                            style: 'background-color: #F1EEEE ;',
                            fieldLabel: '',
                            name: 'house_yes',
                            boxLabel: 'По дому',
                            inputValue: '1',
                            uncheckedValue: '0',
                            listeners: {
                                change: 'onCheckboxfieldChange2'
                            }
                        },
                        {
                            xtype: 'checkboxfield',
                            x: 15,
                            y: 255,
                            hidden: true,
                            id: 'chkRepOrg',
                            style: 'background-color: #F1EEEE ;',
                            fieldLabel: '',
                            labelWidth: 120,
                            name: 'org_yes',
                            boxLabel: 'По организации',
                            inputValue: '1',
                            uncheckedValue: '0',
                            listeners: {
                                change: 'onCheckboxfieldChange3'
                            }
                        },
                        {
                            xtype: 'checkboxfield',
                            x: 20,
                            y: 320,
                            hidden: true,
                            id: 'chkGrLgota',
                            style: 'background-color: #F1EEEE ;',
                            fieldLabel: '',
                            labelWidth: 120,
                            name: 'lgota_yes',
                            boxLabel: 'По группе льготников',
                            checked: true,
                            inputValue: '1',
                            uncheckedValue: '0',
                            listeners: {
                                change: 'onCheckboxfieldChange31'
                            }
                        },
                        {
                            xtype: 'fieldset',
                            x: 220,
                            y: 150,
                            height: 125,
                            hidden: true,
                            id: 'fsDolg',
                            style: 'background-color: #F1EEEE ;',
                            width: 225,
                            layout: 'absolute',
                            title: 'Задолженность ',
                            items: [
                                {
                                    xtype: 'radiogroup',
                                    x: 0,
                                    y: 0,
                                    height: 35,
                                    id: 'rbgDolg',
                                    width: 190,
                                    fieldLabel: '',
                                    labelAlign: 'top',
                                    items: [
                                        {
                                            xtype: 'radiofield',
                                            handler: function(checkbox, checked) {
                                                var form = checkbox.findParentByType('form');
                                                if (checked) {
                                                    form.getForm().findField('start').setValue(0);
                                                    form.getForm().findField('finish').show();
                                                    form.getForm().findField('finish').setValue(20000);

                                                }else{
                                                    form.getForm().findField('start').setValue(3);
                                                    form.getForm().findField('finish').hide();


                                                }
                                            },
                                            name: 'rbDolg',
                                            boxLabel: 'Сумма',
                                            checked: true,
                                            inputValue: '1'
                                        },
                                        {
                                            xtype: 'radiofield',
                                            handler: function(checkbox, checked) {
                                                var form = checkbox.findParentByType('form');
                                                if (checked) {
                                                    form.getForm().findField('start').setValue(3);
                                                    form.getForm().findField('finish').hide();


                                                }else{
                                                    form.getForm().findField('start').setValue(0);
                                                    form.getForm().findField('finish').show();
                                                    form.getForm().findField('finish').setValue(20000);

                                                }
                                            },
                                            name: 'rbDolg',
                                            boxLabel: 'Месяцев',
                                            inputValue: '0'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 10,
                                    y: 40,
                                    width: 190,
                                    fieldLabel: 'Задолженность от ',
                                    labelWidth: 130,
                                    name: 'start',
                                    value: 0,
                                    hideTrigger: true,
                                    decimalPrecision: 0
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 10,
                                    y: 70,
                                    width: 190,
                                    fieldLabel: 'Задолженность по ',
                                    labelWidth: 130,
                                    name: 'finish',
                                    value: 50000,
                                    hideTrigger: true,
                                    decimalPrecision: 0
                                }
                            ]
                        },
                        {
                            xtype: 'combobox',
                            x: 205,
                            y: 50,
                            hidden: true,
                            id: 'cbPrixod',
                            style: 'background-color: #F1EEEE ;',
                            width: 225,
                            fieldLabel: 'Касса',
                            labelWidth: 50,
                            name: 'prixod_id',
                            emptyText: 'Приход',
                            displayField: 'prixod',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'StPrixod',
                            typeAhead: true,
                            valueField: 'prixod_id'
                        },
                        {
                            xtype: 'textfield',
                            x: 205,
                            y: 100,
                            hidden: true,
                            id: 'fieldKassir',
                            style: 'background-color: #C2D9C9;',
                            width: 225,
                            fieldLabel: 'Кассир',
                            labelWidth: 50,
                            name: 'kassir',
                            fieldStyle: 'background-color: #F1EEEE ;'
                        },
                        {
                            xtype: 'checkboxfield',
                            x: 40,
                            y: 135,
                            hidden: true,
                            id: 'chkRazv',
                            fieldLabel: '',
                            name: 'razv',
                            boxLabel: 'Развернутый',
                            inputValue: '1',
                            uncheckedValue: '0'
                        }
                    ]
                }
            ]
        }
    ],

    onDateRepFromAfterRender: function(component, eOpts) {
        component.setValue(Ext.Date.getFirstDateOfMonth(new Date()) );
    },

    onDateRepFromValidityChange: function(field, isValid, eOpts) {
        if(isValid){
            var cb = Ext.getCmp('dateRepTo');
            cb.setValue(Ext.Date.getLastDateOfMonth(field.value));
        }
    },

    onDateRepToAfterRender: function(component, eOpts) {
        component.setValue(Ext.Date.getLastDateOfMonth(new Date()) );
    },

    onCbRepRaionSelect: function(combo, record, eOpts) {
        var me = this;

        // STORE
        var form = combo.findParentByType('form');

        var StHouses = Ext.data.StoreManager.get("StHousesOrg");
        var btnWinReportOrg = Ext.getCmp('btnWinReportOrg');
        //if (fsDolg.isHidden()){fsDolg.show();}

        var store =combo.getStore();
        //COMBO
        //var btnWinReportOrg = Ext.getCmp('btnWinReportOrg');

        var cbHouse = Ext.getCmp("cbRepHouse");
        var selected = record;
        //if (btnWinReportOrg.isHidden()){btnWinReportOrg.show();}
        var btnWinReportOrg = Ext.getCmp('btnWinReportOrg');
        //if (fsDolg.isHidden()){fsDolg.show();}


        //LOGIKA
        if (btnWinReportOrg.isHidden()){btnWinReportOrg.show();}

        if (selected && !store.getById(selected.get('raion_id'))) {
            StHouses.removeAll();

            if (form.getForm().findField('chkRepCity').getValue()) {
                if (btnWinReportOrg.isHidden()){btnWinReportOrg.show();}
            }
            cbHouse.clearValue();

            StHouses.load({
                params: {
                    what:'HousesFromRaion',
                    what_id: selected.get('raion_id')
                },
                scope: this
            });
        }
    },

    onCbRepHouseSelect: function(combo, record, eOpts) {
        //COMBO
        //var fsDolg = Ext.getCmp('fsDolg');
        var btnWinReportOrg = Ext.getCmp('btnWinReportOrg');
        //if (fsDolg.isHidden()){fsDolg.show();}
        if (btnWinReportOrg.isHidden()){btnWinReportOrg.show();}



    },

    onCheckboxfieldChange: function(field, newValue, oldValue, eOpts) {
        var cb = Ext.getCmp('cbRepCat');

        if (newValue===true) {

            cb.show();

        }
        else {

            cb.hide();
        }
    },

    onCheckboxfieldChange1: function(field, newValue, oldValue, eOpts) {
        var cb = Ext.getCmp('cbRepRaion');


        if (newValue===true) {
            cb.show();
        }
        else {
            cb.hide();
        }
    },

    onCheckboxfieldChange11: function(field, newValue, oldValue, eOpts) {
        var form = field.findParentByType('form');
        var cbRaion = Ext.getCmp('cbRepRaion');
        var cbHouse = Ext.getCmp('cbRepHouse');
        var btnWinReportOrg = Ext.getCmp('btnWinReportOrg');

        if (newValue===true) {
            if (btnWinReportOrg.isHidden()){btnWinReportOrg.show();}
            cbRaion.hide();
            cbHouse.hide();
            form.getForm().findField('raion_yes').hide();
            form.getForm().findField('house_yes').hide();
        } else {
            if (!btnWinReportOrg.isHidden()){btnWinReportOrg.hide();}
            cbRaion.show();
            cbHouse.show();
            form.getForm().findField('raion_yes').show();
            form.getForm().findField('house_yes').show();
        }
    },

    onCheckboxfieldChange2: function(field, newValue, oldValue, eOpts) {
        var cb = Ext.getCmp('cbRepHouse');

        if (newValue===true) {
            cb.show();
        }
        else {
            cb.hide();
        }
    },

    onCheckboxfieldChange3: function(field, newValue, oldValue, eOpts) {
        var cb = Ext.getCmp('cbRepOrg');

        if (newValue===true) {
            cb.show();
            cb.focus();
        }
        else {
            cb.hide();
        }
    },

    onCheckboxfieldChange31: function(field, newValue, oldValue, eOpts) {
        var cb = Ext.getCmp('cbRepGrLgota');

        if (newValue===true) {
            cb.show();
            cb.focus();
        }
        else {
            cb.hide();
        }
    }

});