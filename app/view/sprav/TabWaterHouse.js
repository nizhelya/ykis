/*
 * File: app/view/sprav/TabWaterHouse.js
 * Date: Tue May 12 2020 01:39:10 GMT+0300 (EEST)
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Ykis.view.sprav.TabWaterHouse', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.tabwaterhouse',

    requires: [
        'Ykis.view.sprav.TabWaterHouseViewModel',
        'Ext.grid.Panel',
        'Ext.view.Table',
        'Ext.grid.column.Number',
        'Ext.grid.column.Boolean',
        'Ext.grid.column.Date',
        'Ext.toolbar.Toolbar',
        'Ext.form.field.Date',
        'Ext.form.field.ComboBox',
        'Ext.form.field.Number',
        'Ext.toolbar.Fill',
        'Ext.button.Button',
        'Ext.selection.CheckboxModel'
    ],

    viewModel: {
        type: 'tabwaterhouse'
    },
    id: 'tabWaterHouse',
    scrollable: true,
    layout: 'fit',
    closable: true,
    icon: 'resources/css/images/ico/sprav.png',
    title: 'Вода',
    defaultListenerScope: true,

    listeners: {
        activate: 'onTabWaterHouseActivate'
    },

    initConfig: function(instanceConfig) {
        var me = this,
            config = {
                items: [
                    {
                        xtype: 'gridpanel',
                        id: 'grWaterHouse',
                        frameHeader: false,
                        header: false,
                        title: '',
                        columnLines: true,
                        store: 'StWaterHouse',
                        columns: [
                            {
                                xtype: 'numbercolumn',
                                hidden: true,
                                dataIndex: 'dvodomer_id',
                                text: 'Дводомер_ид',
                                format: '0'
                            },
                            {
                                xtype: 'booleancolumn',
                                hidden: true,
                                dataIndex: 'vodomer',
                                text: 'дводомер'
                            },
                            {
                                xtype: 'numbercolumn',
                                hidden: true,
                                dataIndex: 'house_id',
                                text: 'ид_Дом',
                                format: '0'
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 160,
                                dataIndex: 'house',
                                locked: true,
                                menuDisabled: true,
                                text: 'Дом'
                            },
                            {
                                xtype: 'gridcolumn',
                                hidden: true,
                                width: 50,
                                dataIndex: 'raion',
                                menuDisabled: true,
                                text: 'Район'
                            },
                            {
                                xtype: 'numbercolumn',
                                hidden: true,
                                dataIndex: 'raion_id',
                                text: 'Raion_id',
                                format: '0'
                            },
                            {
                                xtype: 'numbercolumn',
                                hidden: true,
                                dataIndex: 'street_id',
                                text: 'улица_ид',
                                format: '0'
                            },
                            {
                                xtype: 'gridcolumn',
                                menuDisabled: true,
                                text: 'Период начисления',
                                columns: [
                                    {
                                        xtype: 'datecolumn',
                                        hidden: true,
                                        dataIndex: 'data',
                                        text: 'период',
                                        format: 'F,Y'
                                    },
                                    {
                                        xtype: 'numbercolumn',
                                        width: 72,
                                        dataIndex: 'god',
                                        menuDisabled: true,
                                        text: 'год',
                                        format: '0'
                                    },
                                    {
                                        xtype: 'gridcolumn',
                                        width: 66,
                                        dataIndex: 'mec',
                                        menuDisabled: true,
                                        text: 'мес'
                                    },
                                    {
                                        xtype: 'gridcolumn',
                                        menuDisabled: true,
                                        text: 'Дней с ',
                                        columns: [
                                            {
                                                xtype: 'numbercolumn',
                                                width: 64,
                                                align: 'center',
                                                dataIndex: 'day_xv',
                                                menuDisabled: true,
                                                text: 'Хв',
                                                format: '0'
                                            },
                                            {
                                                xtype: 'numbercolumn',
                                                width: 67,
                                                align: 'center',
                                                dataIndex: 'day_gv',
                                                menuDisabled: true,
                                                text: 'Гв',
                                                format: '0'
                                            }
                                        ]
                                    },
                                    {
                                        xtype: 'gridcolumn',
                                        menuDisabled: true,
                                        text: 'Перер',
                                        columns: [
                                            {
                                                xtype: 'gridcolumn',
                                                width: 75,
                                                dataIndex: 'pkub',
                                                menuDisabled: true,
                                                text: 'куб/чел'
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                xtype: 'gridcolumn',
                                menuDisabled: true,
                                text: 'Характеристика ввода',
                                columns: [
                                    {
                                        xtype: 'numbercolumn',
                                        width: 60,
                                        dataIndex: 'dvodomer_id',
                                        menuDisabled: true,
                                        text: '№',
                                        format: '0'
                                    },
                                    {
                                        xtype: 'gridcolumn',
                                        width: 86,
                                        dataIndex: 'vvod',
                                        menuDisabled: true,
                                        text: 'Ввод'
                                    },
                                    {
                                        xtype: 'gridcolumn',
                                        hidden: true,
                                        dataIndex: 'appartment',
                                        text: 'Квартиры'
                                    },
                                    {
                                        xtype: 'gridcolumn',
                                        menuDisabled: true,
                                        text: 'квартиры',
                                        columns: [
                                            {
                                                xtype: 'numbercolumn',
                                                width: 63,
                                                align: 'center',
                                                dataIndex: 'first_app',
                                                menuDisabled: true,
                                                text: 'с',
                                                format: '0'
                                            },
                                            {
                                                xtype: 'numbercolumn',
                                                width: 67,
                                                align: 'center',
                                                dataIndex: 'last_app',
                                                menuDisabled: true,
                                                text: 'по',
                                                format: '0'
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                xtype: 'gridcolumn',
                                hidden: true,
                                dataIndex: 'place',
                                text: 'место'
                            },
                            {
                                xtype: 'numbercolumn',
                                hidden: true,
                                dataIndex: 'people_all',
                                text: 'человек',
                                format: '0'
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 150,
                                dataIndex: 'note',
                                text: 'Инфо'
                            },
                            {
                                xtype: 'gridcolumn',
                                hidden: true,
                                dataIndex: 'operator',
                                text: 'Оператор'
                            },
                            {
                                xtype: 'datecolumn',
                                hidden: true,
                                dataIndex: 'data_in',
                                text: 'дата ввода'
                            }
                        ],
                        dockedItems: [
                            {
                                xtype: 'toolbar',
                                dock: 'top',
                                style: 'background-color: #e0e0e0;',
                                items: [
                                    {
                                        xtype: 'datefield',
                                        id: 'dataWaterHouse',
                                        width: 144,
                                        fieldLabel: 'период',
                                        labelAlign: 'top',
                                        labelWidth: 50,
                                        name: 'data',
                                        format: 'F,Y',
                                        startDay: 1,
                                        submitFormat: 'Ymd',
                                        listeners: {
                                            select: 'onDataWaterHouseSelect'
                                        }
                                    },
                                    {
                                        xtype: 'combobox',
                                        id: 'viborRaion',
                                        width: 145,
                                        fieldLabel: 'Район',
                                        labelAlign: 'top',
                                        labelWidth: 45,
                                        name: 'raion_id',
                                        displayField: 'raion',
                                        queryMode: 'local',
                                        store: 'StRaionOrg',
                                        valueField: 'raion_id',
                                        listeners: {
                                            select: 'onComboboxSelectRaion'
                                        }
                                    },
                                    {
                                        xtype: 'combobox',
                                        id: 'cbViborVoda',
                                        width: 100,
                                        fieldLabel: 'вода',
                                        labelAlign: 'top',
                                        labelWidth: 50,
                                        name: 'viborVoda',
                                        displayField: 'name',
                                        queryMode: 'local',
                                        store: 'StTypeVoda',
                                        valueField: 'voda',
                                        listeners: {
                                            select: 'onCbViborVodaSelect'
                                        }
                                    },
                                    {
                                        xtype: 'numberfield',
                                        id: 'qtyDay',
                                        width: 86,
                                        fieldLabel: 'кол-во дней',
                                        labelAlign: 'top',
                                        labelWidth: 90,
                                        name: 'qty_day',
                                        value: 0,
                                        fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                        hideTrigger: true,
                                        allowDecimals: false,
                                        decimalPrecision: 0
                                    },
                                    {
                                        xtype: 'numberfield',
                                        id: 'qtyKub',
                                        width: 86,
                                        fieldLabel: 'перер кубов',
                                        labelAlign: 'top',
                                        labelWidth: 90,
                                        name: 'qty_kub',
                                        value: 0,
                                        fieldStyle: 'background-color:#F0F8FF;font-size:10pt;text-align:right;',
                                        hideTrigger: true,
                                        decimalPrecision: 3
                                    },
                                    {
                                        xtype: 'textfield',
                                        id: 'inform',
                                        width: 294,
                                        fieldLabel: 'Инфо',
                                        labelAlign: 'top',
                                        name: 'note'
                                    },
                                    {
                                        xtype: 'tbfill'
                                    },
                                    {
                                        xtype: 'button',
                                        handler: function(button, event) {
                                            // in use
                                            //var value = button.findParentByType('form').getValues();
                                            //STORE
                                            var stUser = Ext.data.StoreManager.get("StUser");
                                            var StWaterHouse = Ext.data.StoreManager.get("StWaterHouse");

                                            //LOGIN & PASSWORD
                                            var qtyDay = Ext.getCmp('qtyDay');
                                            var qtyKub = Ext.getCmp('qtyKub');

                                            var cbViborVoda = Ext.getCmp('cbViborVoda');
                                            var viborRaion = Ext.getCmp('viborRaion');
                                            var btnInsQtyDay = Ext.getCmp('btnInsQtyDay');
                                            var data = Ext.getCmp('dataWaterHouse').getValue();
                                            var note = Ext.getCmp('inform');



                                            //LOGIKA
                                            var grid = Ext.getCmp('grWaterHouse');
                                            var gridRowSelectedRecords  = grid.getView().getSelectionModel().getSelection();
                                            var size = Ext.Object.getSize(gridRowSelectedRecords) ;
                                            //console.log(gridRowSelectedRecords.data);
                                            var values =stUser.getAt(0);
                                            var login = values.get('login');
                                            var password = values.get('password');
                                            var params =[];
                                            if (size >= 1){
                                                params = {
                                                    login:values.get('login'),
                                                    password:values.get('password'),
                                                    what:"updateVvodWaterHouseDay",
                                                    data:data,
                                                    voda:cbViborVoda.getValue(),
                                                    info:note.getValue(),
                                                    qtyDay:qtyDay.getValue(),
                                                    qtyKub:qtyKub.getValue()

                                                };

                                                var myMask = Ext.Msg.show({
                                                    title:'Ввод данных...',
                                                    msg: 'Ввод данных.Ожидайте...',
                                                    buttons: Ext.Msg.CANCEL,
                                                    wait: true,
                                                    modal: true,
                                                    icon: Ext.Msg.INFO
                                                });

                                                Ext.Object.each(gridRowSelectedRecords, function(key, val, myself) {
                                                    Ext.Object.merge(val.data, params);
                                                    // console.log(val.data);

                                                    QueryVodomer.updateVodomer(val.data,function(results){
                                                        if(results.success){
                                                            return  true;
                                                        }  else {
                                                            return  false;
                                                        }
                                                    });

                                                });



                                                StWaterHouse.load({
                                                    params: {
                                                        what:'AllWaterHouseRaion',
                                                        login:login,
                                                        password:password,
                                                        data:data,
                                                        raion_id: viborRaion.getValue()
                                                    },
                                                    callback: function(records,operation,success){
                                                        if(success){
                                                            cbViborVoda.clearValue();
                                                            cbViborVoda.setDisabled(true);
                                                            btnInsQtyDay.setDisabled(true);
                                                            button.setDisabled(true);
                                                            qtyDay.setValue(0);
                                                            note.setValue("");

                                                            myMask.close();

                                                        } else {
                                                            myMask.close();
                                                        }
                                                    },
                                                    scope:this
                                                });
                                            }
                                        },
                                        disabled: true,
                                        height: 24,
                                        id: 'btnInsQtyDay',
                                        width: 139,
                                        icon: 'resources/css/images/ico/yes.png',
                                        text: 'Записать'
                                    }
                                ]
                            }
                        ],
                        selModel: Ext.create('Ext.selection.CheckboxModel', {
                            selType: 'checkboxmodel'
                        }),
                        listeners: {
                            selectionchange: 'onGrWaterHouseSelectionChange'
                        }
                    }
                ]
            };
        if (instanceConfig) {
            me.getConfigurator().merge(me, config, instanceConfig);
        }
        return me.callParent([config]);
    },

    onDataWaterHouseSelect: function(field, value, eOpts) {
        //in use

        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var StWaterHouse = Ext.data.StoreManager.get("StWaterHouse");

        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var login = values.get('login');
        var password = values.get('password');

        //LOGIKA

        if (value) {
            StWaterHouse.load({
                params: {
                    what:'AllWaterHouseData',
                    login:login,
                    password:password,
                    data: value
                },
                scope:this
            });
        }
    },

    onComboboxSelectRaion: function(combo, record, eOpts) {
        //in use

        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var StWaterHouse = Ext.data.StoreManager.get("StWaterHouse");
        var cbViborVoda = Ext.getCmp('cbViborVoda');
        var qtyDay = Ext.getCmp('qtyDay');
        var info = Ext.getCmp('inform');

        var data = Ext.getCmp('dataWaterHouse').getValue();
        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var login = values.get('login');
        var password = values.get('password');

        //LOGIKA

        if (record) {
            StWaterHouse.load({
                params: {
                    what:'AllWaterHouseRaion',
                    login:login,
                    password:password,
                    data:data,
                    raion_id: record.get('raion_id')

                },
                callback: function(record,operation,success){
                    if(success){
                        cbViborVoda.clearValue();
                        cbViborVoda.setDisabled(true);
                        qtyDay.setValue(0);
                        info.setValue("");
                    }
                },
                scope:this
            });
        }
    },

    onCbViborVodaSelect: function(combo, record, eOpts) {
        //in use

        //STORE

        var form = combo.findParentByType('form');
        var grid = Ext.getCmp('grWaterHouse');
        var btnInsQtyDay = Ext.getCmp('btnInsQtyDay');
        var qtyDay = Ext.getCmp('qtyDay');
        var note = Ext.getCmp('inform');

        //console.log(records[0]);
        if (record) {
            //  var gridRowSelectedRecords  = grid.getView().getSelectionModel().getSelection();
            var gridRowSelectedRecords  = grid.getView().getSelectionModel().getSelection()[0];

            btnInsQtyDay.setDisabled(false);


            qtyDay.setValue(gridRowSelectedRecords.get(record.get('voda')));
            note.setValue(gridRowSelectedRecords.get('note'));

        }

    },

    onGrWaterHouseSelectionChange: function(model, selected, eOpts) {
        //STORE


        var cbViborVoda = Ext.getCmp('cbViborVoda');
        var btnInsQtyDay = Ext.getCmp('btnInsQtyDay');
        var qtyDay = Ext.getCmp('qtyDay');
        var info = Ext.getCmp('inform');

        var dt = new Date();
        var lastDay = Ext.Date.getLastDateOfMonth( dt ) ;
        var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;

        //console.log(selected);
        if (selected.length > 0) {
            cbViborVoda.clearValue();
            cbViborVoda.setDisabled(false);
            qtyDay.setValue(0);
            info.setValue(0);

        }
    },

    onTabWaterHouseActivate: function(component, eOpts) {
        //in use

        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var StWaterHouse = Ext.data.StoreManager.get("StWaterHouse");
        var dataWaterHouse = Ext.getCmp('dataWaterHouse');

        //LOGIN & PASSWORD


        var values =stUser.getAt(0);
        var login = values.get('login');
        var password = values.get('password');

        //LOGIKA
        var dt = new Date();
        dataWaterHouse.setValue(Ext.Date.format(dt, 'Y-m-d'));


    }

});