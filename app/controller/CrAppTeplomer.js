/*
 * File: app/controller/CrAppTeplomer.js
 * Date: Wed Dec 09 2020 11:56:29 GMT+0200 (EET)
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Ykis.controller.CrAppTeplomer', {
    extend: 'Ext.app.Controller',
    alias: 'controller.crAppTeplomer',

    refs: {
        WinAddTeplomer: {
            autoCreate: true,
            selector: '#winAddTeplomer',
            xtype: 'winaddteplomer'
        }
    },

    control: {
        "#tabAppTeplomer": {
            activate: 'onTabAppTeplomerActivate'
        },
        "#addAppTeplomer": {
            click: 'onAddAppTeplomerClick'
        },
        "#newPokAppTepl": {
            specialkey: 'onNewPokAppTeplSpecialkey'
        },
        "#btAddTeplomer": {
            click: 'onBtAddTeplomerClick'
        },
        "#grAppHTeplomer": {
            selectionchange: 'onGrAppHTeplomerSelectionChange'
        }
    },

    onTabAppTeplomerActivate: function(component, eOpts) {
        //in use
        var me = this;

        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");

        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var login = values.get('login');
        var password = values.get('password');
        var address_id = values.get('address_id');
        var address = values.get('address');
        var house_id = values.get('house_id');
        var prixod_id = values.get('prixod_id');

        //LOGIKA

        //var showAddressAppTeplomer = Ext.getCmp('showAddressAppTeplomer');
        //FORM
        var fmAppTeplomer = Ext.getCmp('fmAppTeplomer');

        //STORE
        var stTeplomer = Ext.data.StoreManager.get("StTeplomer");//QueryTeplomer.getResults  <AppTeplomer>
        var stHTeplomer = Ext.data.StoreManager.get("StHTeplomer");//QueryTeplomer.getResults <AppHTeplomer>
        var StAllPokTeplomera = Ext.data.StoreManager.get("StAllPokTeplomera");//QueryTeplomer.getResults <AppHTeplomer>
        StAllPokTeplomera.removeAll();

        //showAddressAppTeplomer.setText(address).show();


        //tabAppTeplomer

        fmAppTeplomer.getForm().reset();


        stTeplomer.load({
            params: {
                what:'AppTeplomer',
                what_id: address_id,
                address_id: address_id,
                login:login,
                password:password
            },
            scope:this
        });


        stHTeplomer.load({
            params: {
                what:'AppHTeplomer',
                what_id: address_id,
                address_id: address_id,
                login:login,
                password:password
            },
            scope:this
        });

    },

    onAddAppTeplomerClick: function(button, e, eOpts) {
        //in use
        var me=this;
        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var StDTeplomerCb = Ext.data.StoreManager.get("StDTeplomerCb");//QueryTeplomer.getResults  <AllPokTeplomera>

        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var house_id = values.get('house_id');

        //LOGIKA
        values.set({'vibor':'addAppTeplomer'});
        stUser.sync();

        var dt = new Date();
        var WinAddTeplomer = me.getWinAddTeplomer();
        var form = WinAddTeplomer.down('#fmAddTeplomer');

        /*
        LOGIKA
        */

        StDTeplomerCb.removeAll();
        StDTeplomerCb.load({
            params: {
                what_id:house_id,
                what:'DteplomerHouse'
            },
            scope:this
        });
        //form.getForm().findField('pdate').setValue(Ext.Date.format(dt, 'Y-m-d'));
        //form.getForm().findField('sdate').setValue(Ext.Date.format(dt, 'Y-m-d'));
        form.getForm().findField('pp').setValue(4);
        form.getForm().findField('fpdate').hide();

        WinAddTeplomer.show();




    },

    onNewPokAppTeplSpecialkey: function(field, e, eOpts) {
        var value = field.getValue();
        if (e.getKey() === e.ENTER && !Ext.isEmpty(value)) {
            this.onInsTekPokTeplomerClick();
        }
    },

    onBtAddTeplomerClick: function(button, e, eOpts) {
        // in use
        var me = this;
        //CONTROLLER

        var CrOrgTeplomer = this.application.getController('CrOrgTeplomer');
        var value = button.findParentByType('form').getValues();
        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var values =stUser.getAt(0);
        var vibor = values.get('vibor');
        this.getWinAddTeplomer().close();
        switch (vibor){
            case 'addOrgTeplomer':// ВЫБРАНА ОРГАНИЗАЦИЯ
            CrOrgTeplomer.addOrgTeplomer(value);
            break;
            case 'editOrgTeplomer':// ВЫБРАНА ОРГАНИЗАЦИЯ  - edit
            CrOrgTeplomer.editOrgTeplomer(value);
            break;
            case 'changeOrgTeplomer':// ВЫБРАНА ОРГАНИЗАЦИЯ  - замена
            CrOrgTeplomer.changeOrgTeplomer(value);
            break;
            case 'addAppTeplomer':  // ВЫБРАНА КВАРТИРА
            me.addAppTeplomer(value);
            break;
            case 'editAppTeplomer':// ВЫБРАНА КВАРТИРА  - edit
            me.editAppTeplomer(value);
            break;
            case 'changeAppTeplomer':  // ВЫБРАНА КВАРТИРА
            me.changeAppTeplomer(value);
            break;
        }
    },

    onGrAppHTeplomerSelectionChange: function(model, selected, eOpts) {
        //in use
        var me =this;

        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var stTekPokTeplomera = Ext.data.StoreManager.get("StTekPokTeplomera");
        var stAllPokTeplomera = Ext.data.StoreManager.get("StAllPokTeplomera");

        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var login = values.get('login');
        var password = values.get('password');
        var address_id = values.get('address_id');
        var house_id = values.get('house_id');

        //GRID

        var grAppTeplomer = Ext.getCmp('grAppTeplomer');

        //FORMA

        var fmAppTeplomer = Ext.getCmp('fmAppTeplomer');

        //LOGIKA

        grAppTeplomer.getView().getSelectionModel().deselectAll();

        if (selected.length){
            stTekPokTeplomera.removeAll();

            stAllPokTeplomera.load({
                params: {
                    login:login,
                    password:password,
                    address_id: address_id,
                    what:'AllPokTeplomera',
                    what_id: selected[0].data.teplomer_id,
                    teplomer_id: selected[0].data.teplomer_id,
                    nomer: selected[0].data.nomer
                },
                scope:this
            });
            fmAppTeplomer.getForm().reset();

        }

    },

    addAppTeplomer: function(value) {
        // in use
        var me = this;

        //STORE
        //teplomers
        var stUser = Ext.data.StoreManager.get("StUser");
        var stTekPokTeplomera = Ext.data.StoreManager.get("StTekPokTeplomera");//QueryTeplomer.getResults <TekPokTeplomera>
        var stAllPokTeplomera = Ext.data.StoreManager.get("StAllPokTeplomera");//QueryTeplomer.getResults <>
        var stTeplomer = Ext.data.StoreManager.get("StTeplomer");//QueryTeplomer.getResults  <AppTeplomer>
        var stTekPokTeplomerov = Ext.data.StoreManager.get("StTekPokTeplomerov");//QueryTeplomer.getResults  <TekPokTeplomerov>
        //var stTekNach = Ext.data.StoreManager.get("StTekNach");//QueryKassa.getResults


        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            address_id:values.get('address_id'),
            house_id:values.get('house_id'),
            what:"addAppTeplomer"
        };
        //WIN

        var winAddTeplomer = this.getWinAddTeplomer();

        //GRID

        var grAppTeplomer = Ext.getCmp('grAppTeplomer');
        var grAppHTeplomer = Ext.getCmp('grAppHTeplomer');


        //FORMA

        var fmAppTeplomer = Ext.getCmp('fmAppTeplomer');
        var fmAddTeplomer = Ext.getCmp('fmAddTeplomer');
        //var value = fmAddTeplomer.getValues();

        //LOGIKA

        Ext.Object.merge(value, params);
        //console.log(value);
        QueryTeplomer.addTeplomer(value,function(results){
            if (results.success){
                stTekPokTeplomera.removeAll();
                stTeplomer.removeAll();
                stTekPokTeplomerov.removeAll();

                fmAppTeplomer.getForm().findField('newValue').setValue(0);
                stTeplomer.load({
                    params: {
                        what:'AppTeplomer',
                        address_id: value.address_id,
                        teplomer_id: results.teplomer_id,
                        login:value.login,
                        password:value.password
                    },
                    scope:this
                });
                stTekPokTeplomerov.load({
                    params: {
                        what:'AllPokTeplomera',
                        address_id: value.address_id,
                        teplomer_id: results.teplomer_id,
                        login:value.login,
                        password:value.password
                    },
                    scope:this
                });
                stTekPokTeplomera.load({
                    params: {
                        what:'TekPokTeplomera',
                        address_id: value.address_id,
                        teplomer_id: results.teplomer_id,
                        login:value.login,
                        password:value.password
                    },
                    callback: function(records,operation,success){
                        if(success){
                            fmAppTeplomer.getForm().loadRecord(records[0]);
                        }
                    },
                    scope:this
                });



                stAllPokTeplomera.load({
                    params: {
                        login:value.login,
                        password:value.password,
                        address_id: value.address_id,
                        what:'AllPokTeplomera',
                        what_id: results.teplomer_id,
                        teplomer_id: results.teplomer_id
                        //nomer: selections[0].data.nomer
                    },
                    scope:this
                });



                winAddTeplomer.close();

                setTimeout(function(){
                    var first = stTeplomer.getAt(0);
                    if (first) {
                        grAppTeplomer.getView().getSelectionModel().select(first);
                    }
                }, 500);
            }
        });
    },

    editAppTeplomer: function(value) {
        // in use
        var me = this;
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var StATeplomer = Ext.data.StoreManager.get("StTeplomer");//QueryTeplomer.getResults  <OrgTeplomer>
        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            org_id:values.get('org_id'),
            address_id:values.get('address_id'),
            address:values.get('address'),
            rowind:values.get('rowind'),
            what:"editAppTeplomer"
        };

        //GRID
        var grAppTeplomer = Ext.getCmp('grAppTeplomer');
        //LOGIKA

        Ext.Object.merge(value, params);
        QueryTeplomer.addTeplomer(value,function(results){
            if (results.success){
                StATeplomer.load({
                    params: {
                        what:'AppTeplomer',
                        address_id: value.address_id,
                        teplomer_id: value.teplomer_id,
                        login:value.login,
                        password:value.password
                    },
                    callback: function(records,operation,success){
                        if(success){
                            grAppTeplomer.getView().getSelectionModel().select(value.rowind);
                            Ext.MessageBox.show({
                                title: 'Оновлення приладу обліку',
                                msg: results.msg,
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.INFO
                            });
                        }
                    },
                    scope:this
                });

            }
        });

    },

    changeAppTeplomer: function(value) {
        // in use
        var me = this;
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var StTeplomer = Ext.data.StoreManager.get("StTeplomer");//QueryTeplomer.getResults  <OrgTeplomer>
        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            org_id:values.get('org_id'),
            address_id:values.get('address_id'),
            address:values.get('address'),
            rowind:values.get('rowind'),
            what:"changeAppTeplomer"
        };

        //GRID
        var grAppTeplomer = Ext.getCmp('grAppTeplomer');
        //LOGIKA

        Ext.Object.merge(value, params);
        QueryTeplomer.addTeplomer(value,function(results){
            if (results.success){
                StTeplomer.load({
                    params: {
                        what:'AppTeplomer',
                        address_id: value.address_id,
                        teplomer_id: value.teplomer_id,
                        login:value.login,
                        password:value.password
                    },
                    callback: function(records,operation,success){
                        if(success){
                            grAppTeplomer.getView().getSelectionModel().select(value.rowind);
                            Ext.MessageBox.show({
                                title: 'Заміна приладу обліку',
                                msg: results.msg,
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.INFO
                            });
                        }
                    },
                    scope:this
                });

            }
        });

    }

});
