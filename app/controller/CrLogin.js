/*
 * File: app/controller/CrLogin.js
 * Date: Mon Jun 08 2015 15:43:31 GMT+0300 (EEST)
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Ykis.controller.CrLogin', {
    extend: 'Ext.app.Controller',
    alias: 'controller.crLogin',

    models: [
        'MdLogin',
        'MdUser',
        'MdStreet',
        'MdRaion',
        'MdHouses',
        'MdOrgCat'
    ],
    stores: [
        'StLogin',
        'StUser',
        'StStreet',
        'StRaion',
        'StHouses',
        'StOrgCat'
    ],
    views: [
        'VpKommuna',
        'user.WinLogin',
        'menu.TabPnCenter'
    ],

    refs: {
        WinLogin: {
            autoCreate: true,
            forceCreate: true,
            selector: 'winLogin',
            xtype: 'winlogin'
        },
        VpKommuna: '#vpKommuna',
        Vplogin: '#vplogin',
        CbStreet: '#cbStreet',
        CbRaion: '#cbRaion',
        TabPnCenter: '#tabPnCenter'
    },

    control: {
        "#btninput": {
            click: 'onBtninputClick'
        }
    },

    onBtninputClick: function(button, e, eOpts) {
        // in use
        var me = this;
        //WIN
        var win = Ext.getCmp('winLogin');

        //var WinLogin = me.getWinLogin();
        //STORE
        var stUser = me.getStUserStore();
        var storeRaion = me.getStRaionStore();
        var storeStreet = me.getStStreetStore();
        // ALL STORES

        var StRaion = Ext.data.StoreManager.get("StRaion");
        var StStreet = Ext.data.StoreManager.get("StStreet");
        var storeLocal = Ext.data.StoreManager.get("StLoginLocal");

        //FORM
        var chekLogin = Ext.getCmp('chekLogin');

        var form =Ext.getCmp('fmLogin');

        //var form = me.getFmLogin();
        var values = form.getValues();
        var attempt = 0;

        //LOGIKA
        attempt += parseInt(values.attempt,10)+1 ;
        QueryUserLogin.login(values,function(results){
            if (results.success===true){

                stUser.add({'login':results.login,'user_id':results.user_id,
                'password':results.password,'role':results.role,'prixod_id':results.prixod_id});
                stUser.sync();

                if((values.remember)){
                    // проверяем нужно ли сохранять его в локальном хранилище, если да(remember=1)
                    // получаем обьект локального хранилища StUserLocal и добавляем в него пользователя
                    // после чего показываем окно завершения регистрации
                    storeLocal.load();
                    storeLocal.add({login:results.login,password:results.password,remember:1});
                    storeLocal.sync();

                }
                if((values.erase)){
                    // проверяем нужно ли удалить пользователя из локального хранилища, если да(erase=1)
                    // Получаем обьект хранилища StLogin  и загружаем  в него c сервера данные о пользователе
                    // получаем обьект локального хранилища StUserLocal и удаляем из него пользователя
                    var r = storeLocal.last();
                    storeLocal.remove(r);
                    storeLocal.sync();
                    Ext.MessageBox.show({
                        title: 'Авторизация',
                        msg: '<center> До свидания !!!</center>',
                        buttons: null,
                        icon: Ext.MessageBox.ERROR
                    });
                    location.href = "http://ya.ru";
                }

                StRaion.proxy.setExtraParam('login', results.login);
                StRaion.proxy.setExtraParam('password', results.password);

                StStreet.proxy.setExtraParam('login', results.login);
                StStreet.proxy.setExtraParam('password', results.password);


                // ЛЕВОЕ МЕНЮ (ЖФ)
                storeRaion.load({
                    params: {
                        what:'raion',
                        login:results.login,
                        password:results.password
                    },
                    scope: this
                });
                storeStreet.load({
                    params: {
                        what:'street',
                        login:results.login,
                        password:results.password
                    },
                    scope: this
                });
                // console.log(WinLogin);

                win.close();

            } else {
                if (attempt>5){

                    Ext.MessageBox.show({
                        title: 'Авторизация',
                        msg: '<center>Вы исчерпали количество попыток !!! <br> Логин или пароль неверный, <br> До свидания !!!</center>',
                        buttons: null,
                        icon: Ext.MessageBox.ERROR
                    });
                    setTimeout(function(){
                        location.href = "http://ya.ru";

                    }, 5000);
                }
                form.getForm().findField('attempt').setValue(attempt);
                chekLogin.setText('Логин или пароль неверный. Попытка № '+attempt).show();
            }
        });

    },

    onLaunch: function() {

        //in use
        var me=this;
        //TAB
        //console.log('tab');

        var tabPnCenter = me.getTabPnCenter();
        //ДОМА
        tabPnCenter.child('#tabDteplomer').tab.hide();
        tabPnCenter.child('#tabDvodomer').tab.hide();
        //tabPnCenter.child('#tabWaterHouse').tab.hide();



        //КВАРТИРЫ
        tabPnCenter.child('#tabAppBti').tab.hide();
        tabPnCenter.child('#tabKassa').tab.hide();
        tabPnCenter.child('#tabNachApp').tab.hide();
        tabPnCenter.child('#tabAppVodomer').tab.hide();
        tabPnCenter.child('#tabAppTeplomer').tab.hide();

        //ОБЬЕКТЫ
        tabPnCenter.child('#tabOrgVodomer').tab.hide();
        tabPnCenter.child('#tabOrgTeplomer').tab.hide();
        tabPnCenter.child('#tabFilial').tab.hide();
        tabPnCenter.child('#tabNachFilial').tab.hide();


        //ОРГАНИЗАЦИИ
        //tabPnCenter.child('#tabDog').tab.hide();
        tabPnCenter.child('#tabOrg').tab.hide();

        //СПРАВОЧНИК
        //tabPnCenter.child('#tabSprav').tab.hide();
        //tabPnCenter.child('#tabReportOrg').tab.hide();
        tabPnCenter.child('#tabLogin').tab.hide();

        /*
        COMPONENT
        */
        var WinLogin = me.getWinLogin();
        WinLogin.show();
        var form =Ext.getCmp('fmLogin');

        var fmLogin =  form.getForm();
        var info_remember = Ext.getCmp('info_remember');

        var values = fmLogin.getValues();

        //получаем обьект локального хранилища
        var storeLocal = Ext.data.StoreManager.get("StLoginLocal");
        //получаем обьект хранилища в котором будут находиться  данные о пользователе
        // загружаем сохраненные данные на машине пользователя в локальное хранилище
        storeLocal.load();
        //var user = storeLocal.last().get('login');
        //var count = storeLocal.data.length;
        //console.log(count);

        if(storeLocal.data.length){
            var login = storeLocal.last().get('login');
            var passwd = storeLocal.last().get('password');
            // console.log(1);


            if(Ext.isEmpty(login)){
                //Проверяем локальное хранилище
                //Если есть сохраненные данные,то
                //находим последнюю запись и получаем ид пользователя и пароль;
                //   console.log(2);


            } else {
                fmLogin.findField('login').setValue(login);
                fmLogin.findField('password').setValue(passwd);
                // console.log(3);

            }
        }




    }

});
