/*
 * File: app/controller/CrDTeplomer.js
 * Date: Wed Jan 06 2021 00:22:51 GMT+0200 (EET)
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Ykis.controller.CrDTeplomer', {
    extend: 'Ext.app.Controller',
    alias: 'controller.CrDTeplomer',

    views: [
        'sprav.WinAddDTeplomer',
        'sprav.WinAddAktClaim'
    ],

    refs: {
        WinAddDTeplomer: '#winAddDTeplomer',
        WinAddAktClaim: '#winAddAktClaim'
    },

    control: {
        "#tabDteplomer": {
            activate: 'onTabDteplomerActivate'
        },
        "#delTekPokDteplomera": {
            click: 'onDelTekPokDteplomeraClick'
        },
        "#insTekPokDTeplomer": {
            click: 'onInsTekPokDteplomerClick'
        },
        "#insGkalDTeplomer": {
            click: 'onInsGkalDTeplomerClick'
        },
        "#insNachOtoplenieSquare": {
            click: 'onInsNachOtoplenieSquareClick'
        },
        "#insNachHouse": {
            click: 'onInsNachHouseClick'
        },
        "#newPokDTeplomera": {
            specialkey: 'onNewPokDTeplomeraSpecialkey'
        },
        "#btAddDTeplomer": {
            click: 'onBtAddDTeplomerClick'
        },
        "#insTekPokAverage": {
            click: 'onInsTekPokAverageClick'
        },
        "#insTekPokMiddle": {
            click: 'onInsTekPokMiddleClick'
        },
        "#insNachGvsHouse": {
            click: 'onInsNachGvsHouseClick'
        },
        "#insPererDTeplomer": {
            click: 'onInsPererDTeplomerClick'
        },
        "#insPererSquare": {
            click: 'onInsPererSquareClick'
        },
        "#NachislenieDTeplomer": {
            click: 'onNachislenieDTeplomerClick'
        },
        "#toolAddTeplomer": {
            click: 'onToolAddTeplomerClick'
        },
        "#btnInsertAktClaim": {
            click: 'onBtnInsertAktClaimClick'
        }
    },

    onTabDteplomerActivate: function(component, eOpts) {
        //CONTROLLER

        var CrLeftMenu = this.application.getController('CrLeftMenu');
        //console.log(1);
        CrLeftMenu.LoadTabDteplomer();

    },

    onDelTekPokDteplomeraClick: function(button, e, eOpts) {
        // in use
        var me = this;
        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var StHeatHouse = Ext.data.StoreManager.get("StHeatHouse");//QueryTeplomer.getResults
        var StAllPokDTeplomera = Ext.data.StoreManager.get("StAllPokDTeplomera");//QueryTeplomer.getResults  <AllPokDTeplomera>
        var StTekPokDTeplomera = Ext.data.StoreManager.get("StTekPokDTeplomera");//QueryTeplomer.getResults <TekPokDTeplomera>
        var StOrgByDteplomer = Ext.data.StoreManager.get("StOrgByDteplomer");//QueryTeplomer.getResults

        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            house_id:values.get('house_id'),
            what:"Dteplomer"
        };

        //FORMA
        //var fmHeatHouse = Ext.getCmp('fmHeatHouse');
        var fmDTeplomers = Ext.getCmp('fmDTeplomers');
        var value = fmDTeplomers.getValues();
        //LOGIKA

        //console.log(value);
        Ext.Object.merge(value, params);
        //console.log(value);
        Ext.MessageBox.confirm({
            title: 'Удаление последних показаний счетчика воды',
            msg: 'Вы удаляете последнее показание по счетчику <br>Показание<b>'+value.tek+
            '</b><br>Подтвердите или отмените свои действия.',
            buttons: Ext.MessageBox.OKCANCEL,
            icon: Ext.MessageBox.ERROR,
            buttonText:{
                ok:'подтвеждаю',
                cancel:'отмена'
            },
            fn:function(btn,newValue){
                if(btn=='ok'){
                    QueryTeplomer.delPokTeplomera(value,function(results){
                        if (results.success !=='0'){
                            Ext.MessageBox.show({title: 'Удаление последних показаний ',
                                                 msg: results.msg,
                                                 buttons: Ext.MessageBox.OK,
                                                 icon: Ext.MessageBox.INFO
                                                });
                            fmDTeplomers.down('#newPokDTeplomera').setValue(0);
                            fmDTeplomers.down('#newPokDTeplomera').focus();
                            StAllPokDTeplomera.removeAll();
                            StTekPokDTeplomera.removeAll();
                            StOrgByDteplomer.removeAll();
                            StTekPokDTeplomera.load({
                                params: {
                                    what:'TekPokDTeplomera',
                                    dteplomer_id: value.dteplomer_id,
                                    login:value.login,
                                    password:value.password
                                },
                                callback: function(records,operation,success){
                                    if((success) && (records.length)){
                                        fmDTeplomers.getForm().loadRecord(records[0]);
                                        fmDTeplomers.doLayout();
                                        StAllPokDTeplomera.load({
                                            params: {
                                                what:'AllPokDTeplomera',
                                                dteplomer_id: value.dteplomer_id,
                                                login:value.login,
                                                password:value.password
                                            },
                                            scope:this
                                        });
                                        StOrgByDteplomer.load({
                                            params: {
                                                login:value.login,
                                                password:value.password,
                                                house_id:value.house_id,
                                                what_id:value.dteplomer_id,
                                                data:records[0].data.data,
                                                dteplomer_id:value.dteplomer_id
                                            },
                                            scope:this
                                        });
                                        StHeatHouse.load({
                                            params: {
                                                house_id:value.house_id,
                                                what:'TekPokHeatHouse',
                                                data:records[0].data.data,
                                                dteplomer_id: value.dteplomer_id,
                                                login:value.login,
                                                password:value.password
                                            },
                                            callback: function(rec,operation,success){
                                                if((success) && (rec.length)){
                                                   // fmHeatHouse.getForm().loadRecord(rec[0]);
                                                }
                                            },
                                            scope:this
                                        });
                                    }
                                },
                                scope:this
                            });

                        }else{
                            Ext.MessageBox.show({title: 'Удаление последних показаний счетчика',
                                                 msg: results.msg,
                                                 buttons: Ext.MessageBox.OK,
                                                 icon: Ext.MessageBox.ERROR
                                                });
                        }
                    });
                }
            }
        });
    },

    onInsTekPokDteplomerClick: function(button, e, eOpts) {
        // in use
        var me = this;
        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var StHeatHouse = Ext.data.StoreManager.get("StHeatHouse");//QueryTeplomer.getResults
        var StAllPokDTeplomera = Ext.data.StoreManager.get("StAllPokDTeplomera");//QueryTeplomer.getResults  <AllPokDTeplomera>
        var StTekPokDTeplomera = Ext.data.StoreManager.get("StTekPokDTeplomera");//QueryTeplomer.getResults <TekPokDTeplomera>
        var StOrgByDteplomer = Ext.data.StoreManager.get("StOrgByDteplomer");//QueryTeplomer.getResults
        var StMop = Ext.data.StoreManager.get("StMop");//QueryTeplomer.getResults


        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            house_id:values.get('house_id'),
            what:"Dteplomer"
        };

        //FORMA
        //var fmHeatHouse = Ext.getCmp('fmHeatHouse');
        var fmDTeplomers = Ext.getCmp('fmDTeplomers');
        var value = fmDTeplomers.getValues();
        //LOGIKA

        Ext.Object.merge(value, params);
        var newValue = value.newValue;
        var max =newValue - value.tek;
        if (isNaN(newValue)){
            Ext.MessageBox.show({
                title: 'Проверка вводимых данных',
                msg: 'Введите число',
                buttons: Ext.MessageBox.OK,
                icon: Ext.MessageBox.ERROR
            });
            return false;
        }else if (max<0){
            Ext.MessageBox.show({
                title: 'Проверка вводимых данных',
                msg: 'Текущие показания <b>'+value.tek+'</b><br>Новые показания <b>'+newValue+'</b><br>Введите правильные показания !.',
                buttons: Ext.MessageBox.CANCEL,
                icon: Ext.MessageBox.ERROR,
                buttonText:{
                    cancel:'отмена'
                },
                fn:function(btn,newValue){
                    if(btn=='cancel'){
                        fmDTeplomers.down('#newPokDTeplomera').setValue(0);
                        fmDTeplomers.down('#newPokDTeplomera').focus();
                        return false;
                    }
                }
            });
        }  else {
            // Basic mask:
            var myMask= Ext.Msg.show({
                title:'Начисление...',
                msg: 'Начисление ГВС.Ожидайте...',
                buttons: Ext.Msg.CANCEL,
                wait: true,
                modal: true,
                icon: Ext.Msg.INFO
            });

            QueryTeplomer.newPokTeplomera(value,function(data){
                Ext.MessageBox.confirm({
                    title: 'Проверка вводимых данных',
                    msg:data.msg,
                    buttons: Ext.MessageBox.OK,
                    icon: Ext.MessageBox.INFO
                });
                if (data.success){
                    //console.log(data.success);
                    fmDTeplomers.down('#newPokDTeplomera').setValue(0);
                    StTekPokDTeplomera.load({
                        params: {
                            what:'TekPokDTeplomera',
                            dteplomer_id: value.dteplomer_id,
                            login:value.login,
                            password:value.password
                        },
                        callback: function(records,operation,success){
                            if(success){
                                fmDTeplomers.getForm().loadRecord(records[0]);
                                StAllPokDTeplomera.load({
                                    params: {
                                        house_id:records[0].data.house_id,
                                        what:'AllPokDTeplomera',
                                        login:value.login,
                                        password:value.password,
                                        dteplomer_id:value.dteplomer_id
                                    },
                                    scope:this
                                });
                                StOrgByDteplomer.load({
                                    params: {
                                        login:value.login,
                                        password:value.password,
                                        data:records[0].data.data,
                                        house_id:records[0].data.house_id,
                                        what_id:value.dteplomer_id,
                                        dteplomer_id:value.dteplomer_id
                                    },
                                    scope:this
                                });
                                StMop.removeAll();
                                StMop.load({
                                    params: {
                                        login:value.login,
                                        password:value.password,
                                        data:records[0].data.data,
                                        house_id:records[0].data.house_id,
                                        what_id:value.dteplomer_id,
                                        dteplomer_id:value.dteplomer_id
                                    },
                                    scope:this
                                });
                                StHeatHouse.load({
                                    params: {
                                        house_id:records[0].data.house_id,
                                        what:'TekPokHeatHouse',
                                        login:value.login,
                                        password:value.password,
                                        data:records[0].data.data,
                                        dteplomer_id:value.dteplomer_id
                                    },
                                    callback: function(rec,operation,success){
                                        if((success) && (rec.length)){
                                            //console.log(rec[0].data);
                                            //fmHeatHouse.getForm().loadRecord(rec[0]);
                                        }
                                    },
                                    scope:this
                                });
                            }
                        },
                        scope:this
                    });

                }
            });
            myMask.hide();
        }

    },

    onInsGkalDTeplomerClick: function(button, e, eOpts) {
        // in use
        var me = this;
        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var StHeatHouse = Ext.data.StoreManager.get("StHeatHouse");//QueryTeplomer.getResults
        var StAllPokDTeplomera = Ext.data.StoreManager.get("StAllPokDTeplomera");//QueryTeplomer.getResults  <AllPokDTeplomera>
        var StTekPokDTeplomera = Ext.data.StoreManager.get("StTekPokDTeplomera");//QueryTeplomer.getResults <TekPokDTeplomera>
        var StOrgByDteplomer = Ext.data.StoreManager.get("StOrgByDteplomer");//QueryTeplomer.getResults
        var StMop = Ext.data.StoreManager.get("StMop");//QueryTeplomer.getResults


        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            house_id:values.get('house_id'),
            what:"HeatHouse"
        };

        //FORMA
        //var fmHeatHouse = Ext.getCmp('fmHeatHouse');
        var fmDTeplomers = Ext.getCmp('fmDTeplomers');
        var value = fmDTeplomers.getValues();
        //LOGIKA

        Ext.Object.merge(value, params);
        var newValue = value.newValue;
        if (isNaN(newValue)){
            Ext.MessageBox.show({
                title: 'Проверка вводимых данных',
                msg: 'Введите число',
                buttons: Ext.MessageBox.OK,
                icon: Ext.MessageBox.ERROR
            });
            return false;

        }  else {
            // Basic mask:
            var myMask= Ext.Msg.show({
                title:'Начисление...',
                msg: 'Начисление .Ожидайте...',
                buttons: Ext.Msg.CANCEL,
                wait: true,
                modal: true,
                icon: Ext.Msg.INFO
            });

            QueryTeplomer.newPokTeplomera(value,function(data){
                Ext.MessageBox.confirm({
                    title: 'Проверка вводимых данных',
                    msg:data.msg,
                    buttons: Ext.MessageBox.OK,
                    icon: Ext.MessageBox.INFO
                });
                if (data.success){
                    //console.log(data.success);
                    fmDTeplomers.down('#newPokDTeplomera').setValue(0);
                    StTekPokDTeplomera.load({
                        params: {
                            what:'TekPokDTeplomera',
                            dteplomer_id: value.dteplomer_id,
                            login:value.login,
                            password:value.password
                        },
                        callback: function(records,operation,success){
                            if(success){
                                fmDTeplomers.getForm().loadRecord(records[0]);
                                StAllPokDTeplomera.load({
                                    params: {
                                        house_id:records[0].data.house_id,
                                        what:'AllPokDTeplomera',
                                        login:value.login,
                                        password:value.password,
                                        dteplomer_id:value.dteplomer_id
                                    },
                                    scope:this
                                });
                                StOrgByDteplomer.load({
                                    params: {
                                        login:value.login,
                                        password:value.password,
                                        data:records[0].data.data,
                                        house_id:records[0].data.house_id,
                                        what_id:value.dteplomer_id,
                                        dteplomer_id:value.dteplomer_id
                                    },
                                    scope:this
                                });
                                StMop.removeAll();
                                StMop.load({
                                    params: {
                                        login:value.login,
                                        password:value.password,
                                        data:records[0].data.data,
                                        house_id:records[0].data.house_id,
                                        what_id:value.dteplomer_id,
                                        dteplomer_id:value.dteplomer_id
                                    },
                                    scope:this
                                });
                                StHeatHouse.load({
                                    params: {
                                        house_id:records[0].data.house_id,
                                        what:'TekPokHeatHouse',
                                        login:value.login,
                                        password:value.password,
                                        data:records[0].data.data,
                                        dteplomer_id:value.dteplomer_id
                                    },
                                    callback: function(rec,operation,success){
                                        if((success) && (rec.length)){

                                        }
                                    },
                                    scope:this
                                });
                            }
                        },
                        scope:this
                    });

                }
            });
            myMask.hide();
        }

    },

    onInsNachOtoplenieSquareClick: function(button, e, eOpts) {
        // in use
        var me = this;
        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var StHeatHouse = Ext.data.StoreManager.get("StHeatHouse");//QueryTeplomer.getResults
        var StOrgByDteplomer = Ext.data.StoreManager.get("StOrgByDteplomer");//QueryTeplomer.getResults
        var StMop = Ext.data.StoreManager.get("StMop");//QueryTeplomer.getResults


        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var params = {
            house_id:values.get('house_id'),
            login:values.get('login'),
            dteplomer_id:values.get('dteplomer_id'),
            password:values.get('password'),
            what:"NachOtoplenieSquare"
        };

        //FORMA
        var fmHeatHouse = Ext.getCmp('fmHeatHouse');
        var fmDTeplomers = Ext.getCmp('fmDTeplomers');
        var value = fmDTeplomers.getValues();
        var valueh = fmHeatHouse.getValues();

        var dt = new Date();
        var tek_date=Ext.Date.format(dt, 'Y-m-d');

        //console.log(value);
        Ext.Object.merge(value, valueh);
        Ext.Object.merge(value, params);

        var myMask= Ext.Msg.show({
            title:'Начисление...',
            msg: 'Начисление отопления по площади.Ожидайте...',
            buttons: Ext.Msg.CANCEL,
            wait: true,
            modal: true,
            icon: Ext.Msg.INFO
        });

        QueryTeplomer.newPokTeplomera(value,function(data){
            if (data.success){
                StMop.removeAll();
                StMop.load({
                    params: {
                        login:value.login,
                        password:value.password,
                        house_id:value.house_id,
                        what_id:value.dteplomer_id,
                        dteplomer_id:value.dteplomer_id
                    },
                    scope:this
                });

                StOrgByDteplomer.removeAll();
                StOrgByDteplomer.load({
                    params: {
                        login:value.login,
                        password:value.password,
                        house_id:value.house_id,
                        what_id:value.dteplomer_id,
                        dteplomer_id:value.dteplomer_id
                    },
                    scope:this
                });
                StHeatHouse.load({
                    params: {
                        house_id:value.house_id,
                        what:'TekPokHeatHouse',
                        data:tek_date,
                        dteplomer_id: value.dteplomer_id,
                        login:value.login,
                        password:value.password
                    },
                    callback: function(rec,operation,success){
                        if((success) && (rec.length)){
                            fmHeatHouse.getForm().loadRecord(rec[0]);
                        }
                    },
                    scope:this
                });
                myMask.close();
                Ext.MessageBox.confirm({
                    title: 'Проверка вводимых данных',
                    msg:data.msg,
                    buttons: Ext.MessageBox.OK,
                    icon: Ext.MessageBox.INFO
                });

            }
        });
    },

    onInsNachHouseClick: function(button, e, eOpts) {
        // in use
        var me = this;
        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var StHeatHouse = Ext.data.StoreManager.get("StHeatHouse");//QueryTeplomer.getResults
        var StOrgByDteplomer = Ext.data.StoreManager.get("StOrgByDteplomer");//QueryTeplomer.getResults
        var StMop = Ext.data.StoreManager.get("StMop");//QueryTeplomer.getResults


        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var params = {
            house_id:values.get('house_id'),
            login:values.get('login'),
            dteplomer_id:values.get('dteplomer_id'),
            password:values.get('password'),
            what:"HeatHouse"
        };

        //FORMA
        var fmHeatHouse = Ext.getCmp('fmHeatHouse');
        var fmDTeplomers = Ext.getCmp('fmDTeplomers');
        var value = fmDTeplomers.getValues();
        var dt = new Date();
        var tek_date=Ext.Date.format(dt, 'Y-m-d');

        //console.log(value);
        Ext.Object.merge(value, params);

        var myMask= Ext.Msg.show({
            title:'Начисление...',
            msg: 'Начисление отопления по нагрузке.Ожидайте...',
            buttons: Ext.Msg.CANCEL,
            wait: true,
            modal: true,
            icon: Ext.Msg.INFO
        });

        QueryTeplomer.newPokTeplomera(value,function(data){
            if (data.success){
                StMop.removeAll();
                StMop.load({
                    params: {
                        login:value.login,
                        password:value.password,
                        house_id:value.house_id,
                        what_id:value.dteplomer_id,
                        dteplomer_id:value.dteplomer_id
                    },
                    scope:this
                });

                StOrgByDteplomer.removeAll();
                StOrgByDteplomer.load({
                    params: {
                        login:value.login,
                        password:value.password,
                        house_id:value.house_id,
                        what_id:value.dteplomer_id,
                        dteplomer_id:value.dteplomer_id
                    },
                    scope:this
                });
                StHeatHouse.load({
                    params: {
                        house_id:value.house_id,
                        what:'TekPokHeatHouse',
                        data:tek_date,
                        dteplomer_id: value.dteplomer_id,
                        login:value.login,
                        password:value.password
                    },
                    callback: function(rec,operation,success){
                        if((success) && (rec.length)){
                            fmHeatHouse.getForm().loadRecord(rec[0]);
                        }
                    },
                    scope:this
                });
                myMask.close();
                Ext.MessageBox.confirm({
                    title: 'Проверка вводимых данных',
                    msg:data.msg,
                    buttons: Ext.MessageBox.OK,
                    icon: Ext.MessageBox.INFO
                });
            }

        });
    },

    onNewPokDTeplomeraSpecialkey: function(field, e, eOpts) {
        var value = field.getValue();
        if (e.getKey() === e.ENTER && !Ext.isEmpty(value)) {
            this.onInsTekPokDteplomerClick();
        }
    },

    onBtAddDTeplomerClick: function(button, e, eOpts) {
        // in use
        var me = this;
        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");

        var values =stUser.getAt(0);
        var vibor = values.get('vibor');

        switch (vibor){
            case 'change_dteplomer':  // ВЫБРАНА ЗАМЕНА ДОМОВОГО ТЕПЛОМЕРА
            me.changeDTeplomer();
            break;
            case 'add_dteplomer'://ДОБАВЛЕНИЕ ДОМОВОГО ТЕПЛОМЕРА
            me.addDTeplomer();
            break;
            case 'edit_dteplomer':// РЕДАКТИРОВАНИЕ ДОМОВОГО ТЕПЛОМЕРА
            me.editDTeplomer();
            break;
        }
    },

    onInsTekPokAverageClick: function(button, e, eOpts) {
        // in use
        var me = this;
        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var StHeatHouse = Ext.data.StoreManager.get("StHeatHouse");//QueryTeplomer.getResults


        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var params = {
            house_id:values.get('house_id'),
            login:values.get('login'),
            password:values.get('password'),
            what:"HeatHouse"
        };

        //FORMA
        var fmHeatHouse = Ext.getCmp('fmHeatHouse');
        var fmDTeplomers = Ext.getCmp('fmDTeplomers');
        var value = fmDTeplomers.getValues();
        //LOGIKA

        //console.log(value);
        Ext.Object.merge(value, params);

        QueryTeplomer.newPokTeplomera(value,function(data){
            if (data.success){
                Ext.MessageBox.confirm({
                    title: 'Проверка вводимых данных',
                    msg: 'Новые показания введены',
                    buttons: Ext.MessageBox.OK,
                    icon: Ext.MessageBox.INFO
                });
                StHeatHouse.removeAll();
                StHeatHouse.load({
                    params: {
                        house_id:value.house_id,
                        what:'TekPokHeatHouse',
                        login:value.login,
                        password:value.password,
                        dteplomer_id:value.dteplomer_id
                    },
                    callback: function(records,operation,success){
                        if((success) && (records.length)){
                            fmHeatHouse.getForm().loadRecord(records[0]);
                        }
                    },
                    scope:this
                });
            } else {
                Ext.MessageBox.show({
                    title: 'Ошибка вводимых данных',
                    msg: 'Новые показания НЕ введены',
                    buttons: Ext.MessageBox.OK,
                    icon: Ext.MessageBox.ERROR
                });
            }
        });
    },

    onInsTekPokMiddleClick: function(button, e, eOpts) {
        // in use
        var me = this;
        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var StHeatHouse = Ext.data.StoreManager.get("StHeatHouse");//QueryTeplomer.getResults


        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var params = {
            house_id:values.get('house_id'),
            login:values.get('login'),
            password:values.get('password'),
            what:"Middle"
        };

        //FORMA
        var fmHeatHouse = Ext.getCmp('fmHeatHouse');
        var fmDTeplomers = Ext.getCmp('fmDTeplomers');
        var value = fmDTeplomers.getValues();
        //LOGIKA

        //console.log(value);
        Ext.Object.merge(value, params);

        QueryTeplomer.newPokTeplomera(value,function(data){
            if (data.success){
                Ext.MessageBox.confirm({
                    title: 'Проверка вводимых данных',
                    msg: 'Новые показания введены',
                    buttons: Ext.MessageBox.OK,
                    icon: Ext.MessageBox.INFO
                });
                StHeatHouse.removeAll();
                StHeatHouse.load({
                    params: {
                        house_id:value.house_id,
                        what:'TekPokHeatHouse',
                        login:value.login,
                        password:value.password,
                        dteplomer_id:value.dteplomer_id
                    },
                    callback: function(records,operation,success){
                        if((success) && (records.length)){
                            fmHeatHouse.getForm().loadRecord(records[0]);
                        }
                    },
                    scope:this
                });
            } else {
                Ext.MessageBox.show({
                    title: 'Ошибка вводимых данных',
                    msg: 'Новые показания НЕ введены',
                    buttons: Ext.MessageBox.OK,
                    icon: Ext.MessageBox.ERROR
                });
            }
        });
    },

    onInsNachGvsHouseClick: function(button, e, eOpts) {
        // in use
        var me = this;
        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var StHeatHouse = Ext.data.StoreManager.get("StHeatHouse");//QueryTeplomer.getResults
        var StOrgByDteplomer = Ext.data.StoreManager.get("StOrgByDteplomer");//QueryTeplomer.getResults
        var StMop = Ext.data.StoreManager.get("StMop");//QueryTeplomer.getResults


        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var params = {
            house_id:values.get('house_id'),
            login:values.get('login'),
            dteplomer_id:values.get('dteplomer_id'),
            password:values.get('password'),
            what:"HotWater"
        };

        //FORMA
        var fmHeatHouse = Ext.getCmp('fmHeatHouse');
        var value = fmHeatHouse.getValues();
        var dt = new Date();
        var tek_date=Ext.Date.format(dt, 'Y-m-d');
        //LOGIKA

        //console.log(value);
        Ext.Object.merge(value, params);
        var myMask= Ext.Msg.show({
            title:'Начисление...',
            msg: 'Начисление ГВС.Ожидайте...',
            buttons: Ext.Msg.CANCEL,
            wait: true,
            modal: true,
            icon: Ext.Msg.INFO
        });

        QueryTeplomer.newPokTeplomera(value,function(data){

            if (data.success){

                StOrgByDteplomer.removeAll();
                StOrgByDteplomer.load({
                    params: {
                        login:value.login,
                        password:value.password,
                        house_id:value.house_id,
                        what_id:value.dteplomer_id,
                        dteplomer_id:value.dteplomer_id
                    },
                    scope:this
                });
                StHeatHouse.load({
                    params: {
                        house_id:value.house_id,
                        what:'TekPokHeatHouse',
                        data:tek_date,
                        dteplomer_id: value.dteplomer_id,
                        login:value.login,
                        password:value.password
                    },
                    callback: function(rec,operation,success){
                        if((success) && (rec.length)){
                            fmHeatHouse.getForm().loadRecord(rec[0]);
                        }
                    },
                    scope:this
                });
                myMask.close();
                Ext.MessageBox.confirm({
                    title: 'Проверка вводимых данных',
                    msg:data.msg,
                    buttons: Ext.MessageBox.OK,
                    icon: Ext.MessageBox.INFO
                });
            }
        });
    },

    onInsPererDTeplomerClick: function(button, e, eOpts) {
        // in use
        var me = this;
        var chekOut ="";

        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        //FORMA
        var fmDTeplomersPerer = Ext.getCmp('fmDTeplomers');

        //LOGIN & PASSWORD
        var value = fmDTeplomersPerer.getValues();
        chekOut ="PererDteplomer";

        var values =stUser.getAt(0);

        var params = {
            login:values.get('login'),
            password:values.get('password'),
            house_id:values.get('house_id'),
            what:chekOut
        };
        //LOGIKA
        Ext.Object.merge(value, params);
        var newValue = value.gkal_perer;
        if (newValue !== 0){
            Ext.MessageBox.confirm({
                title: 'Перерасчет по домовому тепломеру ',
                msg: 'Перерасчет затронет все обьекты по домовому тепломеру <br>Вы желаете продолжать.',
                buttons: Ext.MessageBox.OKCANCEL,
                icon: Ext.MessageBox.ERROR,
                buttonText:{
                    ok:'Да',
                    cancel:'отмена'
                },
                fn:function(btn,newValue){
                    if(btn=='ok'){
                        var myMask= Ext.Msg.show({
                            title:'Перерасчет...',
                            msg: 'Перерасчет по домовому тепломеру.Ожидайте...',
                            buttons: Ext.Msg.CANCEL,
                            wait: true,
                            modal: true,
                            icon: Ext.Msg.INFO
                        });
                        QueryTeplomer.newPokTeplomera(value,function(data){
                            if (data.success !=='0'){
                                myMask.close();
                                Ext.MessageBox.confirm({
                                    title: 'Проверка вводимых данных',
                                    msg: data.msg,
                                    buttons: Ext.MessageBox.OK,
                                    icon: Ext.MessageBox.INFO
                                });
                            }else{
                                myMask.close();
                            }
                        });
                    }
                }
            });
        }


    },

    onInsPererSquareClick: function() {
        // in use
        var me = this;

        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        //FORMA
        var fmDTeplomersPerer = Ext.getCmp('fmDTeplomersPerer');

        //LOGIN & PASSWORD
        var value = fmDTeplomersPerer.getValues();
        var values =stUser.getAt(0);

        var params = {
            login:values.get('login'),
            password:values.get('password'),
            house_id:values.get('house_id'),
            what:"PererOtoplenieSquare"
        };
        //LOGIKA
        Ext.Object.merge(value, params);

            Ext.MessageBox.confirm({
                title: 'Перерасчет по площади ',
                msg: 'Перерасчет по площади <br>Вы желаете продолжать.',
                buttons: Ext.MessageBox.OKCANCEL,
                icon: Ext.MessageBox.ERROR,
                buttonText:{
                    ok:'Да',
                    cancel:'отмена'
                },
                fn:function(btn,newValue){
                    if(btn=='ok'){
                        var myMask= Ext.Msg.show({
                            title:'Перерасчет...',
                            msg: 'Перерасчет по площади.Ожидайте...',
                            buttons: Ext.Msg.CANCEL,
                            wait: true,
                            modal: true,
                            icon: Ext.Msg.INFO
                        });
                        QueryTeplomer.newPokTeplomera(value,function(data){
                            if (data.success !=='0'){
                                myMask.close();
                                Ext.MessageBox.confirm({
                                    title: 'Проверка вводимых данных',
                                    msg: data.msg,
                                    buttons: Ext.MessageBox.OK,
                                    icon: Ext.MessageBox.INFO
                                });
                            }else{
                                myMask.close();
                            }
                        });
                    }
                }
            });

    },

    onNachislenieDTeplomerClick: function(button, e, eOpts) {
        // in use
        var me = this;
        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var StHeatHouse = Ext.data.StoreManager.get("StHeatHouse");//QueryTeplomer.getResults
        var StAllPokDTeplomera = Ext.data.StoreManager.get("StAllPokDTeplomera");//QueryTeplomer.getResults  <AllPokDTeplomera>
        var StTekPokDTeplomera = Ext.data.StoreManager.get("StTekPokDTeplomera");//QueryTeplomer.getResults <TekPokDTeplomera>
        var StOrgByDteplomer = Ext.data.StoreManager.get("StOrgByDteplomer");//QueryTeplomer.getResults
        var StMop = Ext.data.StoreManager.get("StMop");//QueryTeplomer.getResults


        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            house_id:values.get('house_id'),
            what:"NachislenieDteplomer"
        };

        //FORMA
        var fmHeatHouse = Ext.getCmp('fmHeatHouse');
        var fmDTeplomers = Ext.getCmp('fmDTeplomers');
        var value = fmDTeplomers.getValues();
        //LOGIKA

        Ext.Object.merge(value, params);

        QueryTeplomer.newPokTeplomera(value,function(data){
            Ext.MessageBox.confirm({
                title: 'Проверка вводимых данных',
                msg:data.msg,
                buttons: Ext.MessageBox.OK,
                icon: Ext.MessageBox.INFO
            });
            if (data.success){
                //console.log(data.success);
                fmDTeplomers.down('#newPokDTeplomera').setValue(0);
                StTekPokDTeplomera.load({
                    params: {
                        what:'TekPokDTeplomera',
                        dteplomer_id: value.dteplomer_id,
                        login:value.login,
                        password:value.password
                    },
                    callback: function(records,operation,success){
                        if(success){
                            fmDTeplomers.getForm().loadRecord(records[0]);
                            StAllPokDTeplomera.load({
                                params: {
                                    house_id:records[0].data.house_id,
                                    what:'AllPokDTeplomera',
                                    login:value.login,
                                    password:value.password,
                                    dteplomer_id:value.dteplomer_id
                                },
                                scope:this
                            });
                            StOrgByDteplomer.load({
                                params: {
                                    login:value.login,
                                    password:value.password,
                                    data:records[0].data.data,
                                    house_id:records[0].data.house_id,
                                    what_id:value.dteplomer_id,
                                    dteplomer_id:value.dteplomer_id
                                },
                                scope:this
                            });
                            StMop.removeAll();
                            StMop.load({
                                params: {
                                    login:value.login,
                                    password:value.password,
                                    data:records[0].data.data,
                                    house_id:records[0].data.house_id,
                                    what_id:value.dteplomer_id,
                                    dteplomer_id:value.dteplomer_id
                                },
                                scope:this
                            });
                            StHeatHouse.load({
                                params: {
                                    house_id:records[0].data.house_id,
                                    what:'TekPokHeatHouse',
                                    login:value.login,
                                    password:value.password,
                                    data:records[0].data.data,
                                    dteplomer_id:value.dteplomer_id
                                },
                                callback: function(rec,operation,success){
                                    if((success) && (rec.length)){
                                        //console.log(rec[0].data);
                                        fmHeatHouse.getForm().loadRecord(rec[0]);
                                    }
                                },
                                scope:this
                            });
                        }
                    },
                    scope:this
                });

            }
        });


    },

    onToolAddTeplomerClick: function(tool, e, owner, eOpts) {
        var me = this;
        var winAddDTeplomer = Ext.ClassManager.instantiateByAlias('widget.winadddteplomer');
        //console.log(1);
        //var winAddDTeplomer = this.getWinAddDTeplomer;
        var form = winAddDTeplomer.down('#fmAddDTeplomer');
        var stUser = Ext.data.StoreManager.get("StUser");
        var values =stUser.getAt(0);
        //LOGIKA
        values.set({'vibor':'add_dteplomer'});
        stUser.sync();
        var dt = new Date();
        form.down('#btAddDTeplomer').setText('Додати лічильники тепла');
        winAddDTeplomer.setTitle('Введення нового будинкового лічильника тепла');
        //form.getForm().findField('pdate').setValue(Ext.Date.format(dt, 'Y-m-d'));
        //form.getForm().findField('sdate').setValue(Ext.Date.format(dt, 'Y-m-d'));
        form.getForm().findField('pp').setValue(4);
        form.getForm().findField('fpdate').hide();

        winAddDTeplomer.show();
    },

    onBtnInsertAktClaimClick: function(button, e, eOpts) {
        // in use
        var me = this;
        var value = button.findParentByType('form').getValues();
        //console.log(value);
        var stUser = Ext.data.StoreManager.get("StUser");
        var values =stUser.getAt(0);
        var vibor = values.get('vibor');
        this.getWinAddAktClaim().close();

        switch (vibor){
            case 'addAktClaim':  // ВЫБРАНА КВАРТИРА
                me.addAktClaim(value);
                break;
            case 'editAktClaim':  // ВЫБРАНА КВАРТИРА
                me.editAktClaim(value);
                break;

        }
    },

    changeDTeplomer: function() {
        // in use
        var me = this;
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var StDTeplomer = Ext.data.StoreManager.get("StDTeplomer");//QueryTeplomer.getResults
        var StHDTeplomer = Ext.data.StoreManager.get("StHDTeplomer");//QueryTeplomer.getResults
        var StAllPokDTeplomera = Ext.data.StoreManager.get("StAllPokDTeplomera");//QueryTeplomer.getResults  <AllPokDTeplomera>
        var StTekPokDTeplomera = Ext.data.StoreManager.get("StTekPokDTeplomera");//QueryTeplomer.getResults <TekPokDTeplomera>

        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            rowind:values.get('rowind'),
            house_id:values.get('house_id'),
            dteplomer_id:values.get('dteplomer_id'),
            what:"change_DTeplomer"
        };

        //WIN

        var winAddDTeplomer = this.getWinAddDTeplomer();


        //FORMA

        var fmDTeplomer = Ext.getCmp('fmDTeplomers');
        var fmAddDTeplomer = Ext.getCmp('fmAddDTeplomer');
        var value = fmAddDTeplomer.getValues();

        //GRID

        var grDTeplomer = Ext.getCmp('grDteplomers');

        //LOGIKA

        Ext.Object.merge(value, params);
        winAddDTeplomer.close();
        var myMask= Ext.Msg.show({
            title:'Редактирование записи...',
            msg: 'Запись отредактированых данных<br> по домовому тепломеру.Ожидайте...',
            buttons: Ext.Msg.CANCEL,
            wait: true,
            modal: true,
            icon: Ext.Msg.INFO
        });
        QueryTeplomer.addTeplomer(value,function(results){
            if (results.success){


                // setTimeout(function(){
                StDTeplomer.load({
                    params: {
                        what:'Dteplomer',
                        dteplomer_id: value.dteplomer_id,
                        house_id: value.house_id,
                        login:value.login,
                        password:value.password
                    },
                    callback: function(records,operation,success){
                        if(success){
                            grDTeplomer.getView().getSelectionModel().select(value.rowind);
                            Ext.MessageBox.show({
                                title: 'Замена домового тепломера',
                                msg: results.msg,
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.INFO
                            });
                        }
                    },
                    scope:this
                });

                myMask.close();

            }else{
                myMask.close();

            }
        });


    },

    addDTeplomer: function() {
        // in use
        var me = this;

        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var StDTeplomer = Ext.data.StoreManager.get("StDTeplomer");//QueryTeplomer.getResults
        var StAllPokDTeplomera = Ext.data.StoreManager.get("StAllPokDTeplomera");//QueryTeplomer.getResults  <AllPokDTeplomera>
        var StTekPokDTeplomera = Ext.data.StoreManager.get("StTekPokDTeplomera");//QueryTeplomer.getResults <TekPokDTeplomera>

        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            house_id:values.get('house_id'),
            what:"add_DTeplomer"
        };
        //WIN
        var winAddDTeplomer = this.getWinAddDTeplomer();
        //GRID
        var grDTeplomer = Ext.getCmp('grDteplomers');
        //FORMA
        var fmDTeplomer = Ext.getCmp('fmDTeplomers');
        var fmAddDTeplomer = Ext.getCmp('fmAddDTeplomer');
        var value = fmAddDTeplomer.getValues();

        //LOGIKA

        Ext.Object.merge(value, params);
        winAddDTeplomer.close();
        var myMask= Ext.Msg.show({
            title:'Добавление записи...',
            msg: 'Добавление тепломера.Ожидайте...',
            buttons: Ext.Msg.CANCEL,
            wait: true,
            modal: true,
            icon: Ext.Msg.INFO
        });
        QueryTeplomer.addTeplomer(value,function(results){
            if (results.success){
                StDTeplomer.load({
                    params: {
                        what:'Dteplomer',
                        house_id: value.house_id,
                        login:value.login,
                        password:value.password
                    },
                    callback: function(records,operation,success){
                        if(success){
                            StDTeplomer.each(function(item, index, count){
                                if (item.data.dteplomer_id === parseInt(results.teplomer_id, 10) ) {
                                    grDTeplomer.getView().getSelectionModel().select(index);
                                }
                            });
                        }
                    },
                    scope:this
                });
                myMask.close();

            }else{
                myMask.close();

            }
        });
    },

    addAktClaim: function(value) {
        // in use
        var me = this;
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var StAktClaim = Ext.data.StoreManager.get("StAktClaim");
        //LOGIN & PASSWORD
        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            what:"getAktClaim"
        };


        Ext.Object.merge(value, params);
        QuerySprav.createRecord(value,function(results){
            if (results){
                StAktClaim.load({
                    params: {
                        what:'getAktClaim',
                        dteplomer_id: value.dteplomer_id,
                        login:value.login,
                        password:value.password
                    },
                    callback: function(records,operation,success){
                        if(success){
                            Ext.MessageBox.show({
                                title: 'Добавление записи',
                                msg: "Запись добавлена",
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.INFO
                            });
                        }
                    },
                    scope:this
                });

            }
        });
    },

    editDTeplomer: function() {
        // in use
        var me = this;
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var StDTeplomer = Ext.data.StoreManager.get("StDTeplomer");//QueryTeplomer.getResults
        var StHDTeplomer = Ext.data.StoreManager.get("StHDTeplomer");//QueryTeplomer.getResults
        var StAllPokDTeplomera = Ext.data.StoreManager.get("StAllPokDTeplomera");//QueryTeplomer.getResults  <AllPokDTeplomera>
        var StTekPokDTeplomera = Ext.data.StoreManager.get("StTekPokDTeplomera");//QueryTeplomer.getResults <TekPokDTeplomera>

        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            rowind:values.get('rowind'),
            house_id:values.get('house_id'),
            dteplomer_id:values.get('dteplomer_id'),
            what:"edit_DTeplomer"
        };
        //WIN
        var winAddDTeplomer = this.getWinAddDTeplomer();
        //FORMA
        var fmDTeplomer = Ext.getCmp('fmDTeplomers');
        var fmAddDTeplomer = Ext.getCmp('fmAddDTeplomer');
        var value = fmAddDTeplomer.getValues();

        //GRID
        var grDTeplomer = Ext.getCmp('grDteplomers');
        //LOGIKA
        Ext.Object.merge(value, params);
        winAddDTeplomer.close();
        var myMask= Ext.Msg.show({
            title:'Редактирование записи...',
            msg: 'Запись отредактированых данных<br> по домовому тепломеру.Ожидайте...',
            buttons: Ext.Msg.CANCEL,
            wait: true,
            modal: true,
            icon: Ext.Msg.INFO
        });
        QueryTeplomer.addTeplomer(value,function(results){
            if (results.success){
                StDTeplomer.load({
                    params: {
                        what:'Dteplomer',
                        dteplomer_id: value.dteplomer_id,
                        house_id: value.house_id,
                        login:value.login,
                        password:value.password
                    },
                    callback: function(records,operation,success){
                        if(success){
                            grDTeplomer.getView().getSelectionModel().select(value.rowind);
                            Ext.MessageBox.show({
                                title: 'Замена домового тепломера',
                                msg: results.msg,
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.INFO
                            });
                        }
                    },
                    scope:this
                });
               myMask.close();

            }else{
                myMask.close();

            }
        });

    },

    editAktClaim: function(value) {
        // in use
        var me = this;
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var StAktClaim = Ext.data.StoreManager.get("StAktClaim");
        //LOGIN & PASSWORD
        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            what:"getAktClaim"
        };


        Ext.Object.merge(value, params);
        QuerySprav.updateRecords(value,function(results){
            if (results){
                StAktClaim.load({
                    params: {
                        what:'getAktClaim',
                        dteplomer_id: value.dteplomer_id,
                        login:value.login,
                        password:value.password
                    },
                    callback: function(records,operation,success){
                        if(success){
                            Ext.MessageBox.show({
                                title: 'Обновление записи',
                                msg: "Запись обновлена",
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.INFO
                            });
                        }
                    },
                    scope:this
                });

            }
        });
    }

});
