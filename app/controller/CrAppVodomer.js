/*
 * File: app/controller/CrAppVodomer.js
 * Date: Wed Dec 09 2020 11:56:29 GMT+0200 (EET)
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Ykis.controller.CrAppVodomer', {
    extend: 'Ext.app.Controller',
    alias: 'controller.crAppVodomer',

    refs: {
        FmVodomer: '#fmVodomer',
        WinAddVodomer: '#winAddVodomer',
        PnAppVodomer: '#pnAppVodomer',
        GrAllPokVodomera: '#grAllPokVodomera'
    },

    control: {
        "#tabAppVodomer": {
            activate: 'onTabAppVodomerActivate'
        },
        "#addAppVodomer": {
            click: 'onAddAppVodomerClick'
        },
        "#btAddVodomer": {
            click: 'onBtAddAppVodomerClick'
        },
        "#newValue": {
            specialkey: 'onNumberfieldSpecialkey'
        },
        "#grAppVodomer": {
            selectionchange: 'onGrAppVodomerSelectionChange'
        },
        "#grAppHVodomer": {
            selectionchange: 'onGrAppHVodomerSelectionChange'
        }
    },

    onTabAppVodomerActivate: function(component, eOpts) {

        var stUser = Ext.data.StoreManager.get("StUser");
        var values =stUser.getAt(0);
        var login = values.get('login');
        var password = values.get('password');
        var address_id = values.get('address_id');
        var address = values.get('address');
        var house_id = values.get('house_id');
        var prixod_id = values.get('prixod_id');

        var fmVodomer = Ext.getCmp('fmVodomer');
        var grAllPokVodomera = Ext.getCmp('grAllPokVodomera');

        //STORE
        var stVodomer = Ext.data.StoreManager.get("StVodomer");
        var stHVodomer = Ext.data.StoreManager.get("StHVodomer");
        var StWater = Ext.data.StoreManager.get("StWater");
        var stTekPokVodomera = Ext.data.StoreManager.get("StTekPokVodomera");

        stVodomer.removeAll();
        stHVodomer.removeAll();
        StWater.removeAll();
        stTekPokVodomera.removeAll();


        fmVodomer.setTitle('Технічна характеристика будинку');

        fmVodomer.getForm().reset();
        fmVodomer.expand(true);

        stVodomer.load({
            params: {
                what:'AppVodomer',
                what_id: address_id,
                address_id: address_id,
                login:login,
                password:password
            },
            scope:this
        });

        stHVodomer.load({
            params: {
                what:'AppHVodomer',
                what_id: address_id,
                address_id: address_id,
                login:login,
                password:password
            },
            scope:this
        });


    },

    onAddAppVodomerClick: function(button, e, eOpts) {
        //in use
        var me=this;
        /*
                COMPONENT
                */
        var winAddVodomer = Ext.ClassManager.instantiateByAlias('widget.winaddvodomer');
        /*
                LOGIKA
                */
        var dt = new Date();

        var form = winAddVodomer.down('#fmAddVodomer');
        var check = form.down('#chkExistentVod');
        //var fcn = form.down('#fcntNewVodomer');


        var obrVodomer = form.down('#obrVodomer');
        var jointVodomer = form.down('#jointVodomer');
        var stUser = Ext.data.StoreManager.get("StUser");
        var values =stUser.getAt(0);
        //LOGIKA'
        values.set({'vibor':'addAppVodomer'});
        stUser.sync();
        //console.log(values);
        form.down('#btAddVodomer').setText('Додати прилад обліку');
        //form.getForm().findField('sdate').setValue(Ext.Date.format(dt, 'Y-m-d'));
        //form.getForm().findField('sdate').setValue(Ext.Date.format(dt, 'Y-m-d'));

        form.getForm().findField('pp').setValue(4);
        form.getForm().findField('fpdate').hide();

        form.getForm().findField('new_id').setValue(values.get('address_id'));
        form.getForm().findField('vibor').setValue("addAppVodomer");


        form.getForm().findField('address_id').hide();
        form.getForm().findField('filial_id').hide();
        form.getForm().findField('new_id').hide();
        //fcn.hide();
        //jointVodomer.hide();
        form.getForm().findField('vd').hide();
        //obrVodomer.hide();

        winAddVodomer.setTitle('Введення нового приладу обліку');
        winAddVodomer.show();


    },

    onBtAddAppVodomerClick: function(button, e, eOpts) {
        // in use
        var me = this;
        //CONTROLLER

        var crOrgVodomer = this.application.getController('CrOrgVodomer');
        var value = button.findParentByType('form').getValues();
        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var values =stUser.getAt(0);
        var vibor = values.get('vibor');
        this.getWinAddVodomer().close();
        switch (vibor){
            case 'addAppVodomer':  // ВЫБРАНА КВАРТИРА
                me.addVodomerApp(value);
                break;
            case 'editAppVodomer':  // ВЫБРАНА КВАРТИРА
                me.editVodomerApp(value);
                break;
            case 'changeAppVodomer':  // ВЫБРАНА КВАРТИРА
                me.changeVodomerApp(value);
                break;
            case 'addOrgVodomer':// ВЫБРАНА ОРГАНИЗАЦИЯ
                crOrgVodomer.addVodomerOrg(value);
                break;
            case 'editOrgVodomer':// ВЫБРАНА ОРГАНИЗАЦИЯ  - edit
                crOrgVodomer.editVodomerOrg(value);
                break;
            case 'changeOrgVodomer':// ВЫБРАНА ОРГАНИЗАЦИЯ  - edit
                crOrgVodomer.changeVodomerOrg(value);
                break;
        }
    },

    onNumberfieldSpecialkey: function(field, e, eOpts) {
        var value = field.getValue();
        if (e.getKey() === e.ENTER && !Ext.isEmpty(value)) {
            this.onInsTekPokVodClick();
        }
    },

    onGrAppVodomerSelectionChange: function(model, selected, eOpts) {
        var stUser = Ext.data.StoreManager.get("StUser");
        var stWater = Ext.data.StoreManager.get("StWater");
        var stTekPokVodomera = Ext.data.StoreManager.get("StTekPokVodomera");
        var values =stUser.getAt(0);
        var login = values.get('login');
        var password = values.get('password');
        var address_id = values.get('address_id');
        var house_id = values.get('house_id');
        var dt = new Date();
        var fmVodomer = Ext.getCmp('fmVodomer');
        var btnNorm = fmVodomer.down('#insTekPokVod');
        var tekValue = fmVodomer.getForm().findField('tekp');
        var newValue = fmVodomer.getForm().findField('newValue');
        var InsPoverka = fmVodomer.down('#InsPoverka');
        var AddMeedlePokVod = fmVodomer.down('#AddMeedlePokVod');
        var insMeedlePokVod = fmVodomer.down('#insMeedlePokVod');
        var date_ot = fmVodomer.getForm().findField('data_ot');
        var date_do = fmVodomer.getForm().findField('data_do');
        var date_ao = fmVodomer.getForm().findField('date_ao');
        var date_ar = fmVodomer.getForm().findField('date_ar');
        var pok_ot = fmVodomer.getForm().findField('pok_ot');
        var pok_do = fmVodomer.getForm().findField('pok_do');
        var rday = fmVodomer.getForm().findField('rday');
        var days = fmVodomer.getForm().findField('days');
        var kub_day = fmVodomer.getForm().findField('kub_day');
        var qty_kub = fmVodomer.getForm().findField('qty_kub');
        var newKubov = fmVodomer.getForm().findField('newKubov');
        var date_new = fmVodomer.getForm().findField('date_new').setValue(Ext.Date.format(dt, 'Y-m-d'));
        if (selected.length){
            stWater.load({
                params: {
                    login:login,
                    password:password,
                    address_id: address_id,
                    what:'AllPokVodomera',
                    what_id: selected[0].data.address_id,
                    vodomer_id: selected[0].data.vodomer_id
                },
                scope:this
            });
            fmVodomer.setTitle('<font color="#800000"> Технічна характеристика ' +
                               '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Водомір № '+
                               selected[0].data.nomer + '</font>');

            fmVodomer.down('#delTekPokVod').setDisabled(true);
            fmVodomer.getForm().findField('vkl_del').setValue(0);
            stTekPokVodomera.load({
                params: {
                    login:login,
                    password:password,
                    address_id: address_id,
                    what:'TekPokVodomera',
                    what_id: selected[0].data.address_id,
                    vodomer_id: selected[0].data.vodomer_id
                },
                callback: function(records,operation,success){
                    if(success){
                        fmVodomer.getForm().loadRecord(records[0]);

                    }
                },
                scope:this
            });
            if (selected[0].data.out===1){
                AddMeedlePokVod.setDisabled(false);
                insMeedlePokVod.setDisabled(false);
                InsPoverka.setDisabled(false);
                date_ao.setDisabled(false);
                date_ar.setDisabled(false);
                date_ot.setDisabled(false);
                date_do.setDisabled(false);
                qty_kub.setDisabled(true);
                pok_do.setDisabled(true);
                pok_ot.setDisabled(true);
                rday.setDisabled(true);
                days.setDisabled(true);
                qty_kub.setDisabled(true);
                kub_day.setDisabled(true);
                newKubov.setDisabled(true);
                btnNorm.setDisabled(true);
                newValue.setDisabled(true);

            } else {
                AddMeedlePokVod.setDisabled(true);
                insMeedlePokVod.setDisabled(true);
                InsPoverka.setDisabled(true);
                date_ao.setDisabled(true);
                date_ar.setDisabled(true);
                date_ot.setDisabled(true);
                date_do.setDisabled(true);
                pok_do.setDisabled(true);
                pok_ot.setDisabled(true);
                days.setDisabled(true);
                rday.setDisabled(true);
                qty_kub.setDisabled(true);
                kub_day.setDisabled(true);
                newKubov.setDisabled(true);
                btnNorm.setDisabled(false);
                newValue.setDisabled(false);
            }
        }

    },

    onGrAppHVodomerSelectionChange: function(model, selected, eOpts) {
        var stUser = Ext.data.StoreManager.get("StUser");
        var stWater = Ext.data.StoreManager.get("StWater");
        var stTekPokVodomera = Ext.data.StoreManager.get("StTekPokVodomera");
        var values =stUser.getAt(0);
        var login = values.get('login');
        var password = values.get('password');
        var address_id = values.get('address_id');
        var house_id = values.get('house_id');
        var dt = new Date();
        var fmVodomer = Ext.getCmp('fmVodomer');
        var btnNorm = fmVodomer.down('#insTekPokVod');
        var tekValue = fmVodomer.getForm().findField('tekp');
        var newValue = fmVodomer.getForm().findField('newValue');
        var InsPoverka = fmVodomer.down('#InsPoverka');
        var AddMeedlePokVod = fmVodomer.down('#AddMeedlePokVod');
        var insMeedlePokVod = fmVodomer.down('#insMeedlePokVod');
        var date_ot = fmVodomer.getForm().findField('data_ot');
        var date_do = fmVodomer.getForm().findField('data_do');
        var date_ao = fmVodomer.getForm().findField('date_ao');
        var date_ar = fmVodomer.getForm().findField('date_ar');
        var pok_ot = fmVodomer.getForm().findField('pok_ot');
        var pok_do = fmVodomer.getForm().findField('pok_do');
        var rday = fmVodomer.getForm().findField('rday');
        var days = fmVodomer.getForm().findField('days');
        var kub_day = fmVodomer.getForm().findField('kub_day');
        var qty_kub = fmVodomer.getForm().findField('qty_kub');
        var newKubov = fmVodomer.getForm().findField('newKubov');
        var grAppVodomer = Ext.getCmp('grAppVodomer');
        grAppVodomer.getView().getSelectionModel().deselectAll();

        if (selected.length){
            stWater.load({
                params: {
                    login:login,
                    password:password,
                    address_id: address_id,
                    what:'AllPokVodomera',
                    what_id: selected[0].data.address_id,
                    vodomer_id: selected[0].data.vodomer_id
                },
                scope:this
            });
            fmVodomer.setTitle('<font color="#800000"> Технічна характеристика ' +
                               '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Водомір № '+
                               selected[0].data.nomer + '</font>');

            fmVodomer.down('#delTekPokVod').setDisabled(true);
            stTekPokVodomera.load({
                params: {
                    login:login,
                    password:password,
                    address_id: address_id,
                    what:'TekPokVodomera',
                    what_id: selected[0].data.address_id,
                    vodomer_id: selected[0].data.vodomer_id
                },
                callback: function(records,operation,success){
                    if(success){
                        fmVodomer.getForm().reset();

                    }
                },
                scope:this
            });

                AddMeedlePokVod.setDisabled(true);
                insMeedlePokVod.setDisabled(true);
                InsPoverka.setDisabled(true);
                date_ao.setDisabled(true);
                date_ar.setDisabled(true);
                date_ot.setDisabled(true);
                date_do.setDisabled(true);
                pok_do.setDisabled(true);
                pok_ot.setDisabled(true);
                days.setDisabled(true);
                rday.setDisabled(true);
                qty_kub.setDisabled(true);
                kub_day.setDisabled(true);
                newKubov.setDisabled(true);
                btnNorm.setDisabled(true);
                newValue.setDisabled(true);

        }

    },

    addVodomerApp: function(value) {
        // in use
        var me = this;
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var stVodomer = Ext.data.StoreManager.get("StVodomer");
        //LOGIN & PASSWORD
        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            address_id:values.get('address_id'),
            address:values.get('address'),
            what:"addAppVodomer"
        };

        //GRID
        var grAppVodomer = Ext.getCmp('grAppVodomer');
        //LOGIKA

        Ext.Object.merge(value, params);
        QueryVodomer.addVodomer(value,function(results){
            if (results.success){
                stVodomer.load({
                    params: {
                        what:'AppVodomer',
                        address_id: value.address_id,
                        vodomer_id: value.vodomer_id,
                        login:value.login,
                        password:value.password
                    },
                    callback: function(records,operation,success){
                        if(success){
                            grAppVodomer.getView().getSelectionModel().select(0);
                            Ext.MessageBox.show({
                                title: 'Введення нового приладу обліку',
                                msg: results.msg,
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.INFO
                            });
                        }
                    },
                    scope:this
                });

            }
        });
    },

    editVodomerApp: function(value) {
        // in use
        //var me = this;
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var stVodomer = Ext.data.StoreManager.get("StVodomer");
        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            address_id:values.get('address_id'),
            address:values.get('address'),
            rowind:values.get('rowind'),
            what:"editAppVodomer"
        };

        //GRID
        var grAppVodomer = Ext.getCmp('grAppVodomer');
        //LOGIKA

        Ext.Object.merge(value, params);
        QueryVodomer.addVodomer(value,function(results){

            if (results.success){
                stVodomer.load({
                    params: {
                        what:'AppVodomer',
                        address_id: value.address_id,
                        vodomer_id: value.vodomer_id,
                        login:value.login,
                        password:value.password
                    },
                    callback: function(records,operation,success){
                        if(success){
                            grAppVodomer.getView().getSelectionModel().select(value.rowind);
                            Ext.MessageBox.show({
                                title: 'Оновлення приладу обліку',
                                msg: results.msg,
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.INFO
                            });
                        }
                    },
                    scope:this
                });

            }
        });
    },

    changeVodomerApp: function(value) {
         var me = this;
                //STORE
                var stUser = Ext.data.StoreManager.get("StUser");
                var stVodomer = Ext.data.StoreManager.get("StVodomer");
                var stHVodomer = Ext.data.StoreManager.get("StHVodomer");//QueryVodomer.getResults <AppHVodomer>
                var stVodomerKassa = Ext.data.StoreManager.get("StVodomerKassa");//QueryVodomer.getResults  <AppVodomer>
                var stWater = Ext.data.StoreManager.get("StWater");//QueryVodomer.getResults  <AllPokVodomera>

                //LOGIN & PASSWORD

                var values =stUser.getAt(0);
                var params = {
                    login:values.get('login'),
                    password:values.get('password'),
                    address_id:values.get('address_id'),
                    address:values.get('address'),
                    house_id:values.get('house_id'),
                    what:"changeAppVodomer"
                };

                var fmPribor = Ext.getCmp('fmVodomer');


                Ext.Object.merge(value, params);
                QueryVodomer.addVodomer(value,function(results){
                    if (results.success==="1"){
                        Ext.MessageBox.show({
                            title: 'Заміна приладу обліку',
                            msg: results.msg,
                            buttons: Ext.MessageBox.OK,
                            icon: Ext.MessageBox.INFO
                        });
                        stVodomerKassa.load({
                            params: {
                                what:'AppVodomerKassa',
                                address_id: value.address_id,
                                what_id: value.address_id,
                                login:value.login,
                                password:value.password
                            },
                            scope:this
                        });
                        fmPribor.getForm().reset();

                        stVodomer.load({
                            params: {
                                what:'AppVodomer',
                                address_id: value.address_id,
                                vodomer_id: value.vodomer_id,
                                login:value.login,
                                password:value.password
                            },
                            scope:this
                        });
                        stWater.removeAll();

                        stHVodomer.load({
                            params: {
                                what:'AppHVodomer',
                                address_id: value.address_id,
                                what_id: value.address_id,
                                login:value.login,
                                password:value.password
                            },
                            scope:this
                        });
                    }else {
                        Ext.MessageBox.show({
                            title: 'Заміна приладу обліку',
                            msg: results.msg,
                            buttons: Ext.MessageBox.OK,
                            icon: Ext.MessageBox.INFO
                        });
                    }
                });
    }

});
