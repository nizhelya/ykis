/*
 * File: app/controller/CrOrg.js
 * Date: Wed Dec 09 2020 11:56:29 GMT+0200 (EET)
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Ykis.controller.CrOrg', {
    extend: 'Ext.app.Controller',
    alias: 'controller.crOrg',

    models: [
        'MdFilial',
        'MdLogin',
        'MdUser',
        'MdAddress',
        'MdTreeOrg',
        'MdOrgPhones'
    ],
    stores: [
        'StFilial',
        'StLogin',
        'StUser',
        'StAddress',
        'StTreeOrg',
        'StOrgPhones'
    ],
    views: [
        'menu.TabPnCenter'
    ],

    refs: {
        WinAddOplataOrg: {
            selector: '#winAddOplataOrg',
            xtype: 'winaddoplataorg'
        },
        GrTreeOrg: '#grTreeOrg',
        FmOrgInfo: '#fmOrgInfo',
        FmFilial: '#fmFilial',
        CbFilAddress: '#cbFilAddress',
        TabPnCenter: '#tabPnCenter',
        GrOgrDog: '#grOgrDog',
        TbDogOrgInsert: '#tbDogOrgInsert',
        CbRaionOrg: '#cbRaionOrg',
        CbStreetOrg: '#cbStreetOrg',
        GrTreeOrg: '#grTreeOrg'
    },

    control: {
        "#tabSchetVik": {
            activate: 'onTabSchetVikActivate'
        },
        "#tabOplataOrg": {
            activate: 'onTabOplataOrgActivate'
        },
        "#tabFmPererOtopl": {
            activate: 'onTabFmPererOtoplActivate'
        },
        "#tabFmPererStoki": {
            activate: 'onTabFmPererStokiActivate'
        },
        "#tabFmPererVoda": {
            activate: 'onTabFmPererVodaActivate'
        },
        "#tabFmPererPodogrev": {
            activate: 'onTabFmPererPodogrevActivate'
        },
        "#tabLgotaUtszn": {
            activate: 'onTabLgotaUtsznActivate'
        },
        "#tabOrgPerer": {
            activate: 'onTabPererActivate'
        },
        "#tabSubsUtszn": {
            activate: 'onTabSubsUtsznActivate'
        },
        "#tabOsmdHouses": {
            activate: 'onTabOsmdHousesActivate'
        },
        "#tabHouseResidents": {
            activate: 'onTabHouseResidentsActivate'
        },
        "#pnTekNachFilial": {
            expand: 'onPnTekNachFilialExpand'
        },
        "#dataPererOrg": {
            select: 'onDataPererOrgSelect'
        },
        "#grTekNachFilialPerer": {
            select: 'onGrTekNachFilialPererSelect'
        },
        "#btFilialUpdate": {
            click: 'onBtFilialUpdateClick'
        },
        "#btnUpdateOrg": {
            click: 'onbtnUpdateOrgClick'
        },
        "#btnDeleteOrg": {
            click: 'onBtnDeleteOrgClick'
        },
        "#btFilialDelete": {
            click: 'onBtFilialDeleteClick'
        },
        "#btFilialGvsNach": {
            click: 'onBtFilialGvsNachClick'
        },
        "#btnSaldoOrgOtop": {
            click: 'onBtnSaldoOrgOtopClick'
        },
        "#btnPererOrgDt": {
            click: 'onBtnPererOrgDtClick'
        },
        "#btnPererOrg": {
            click: 'onBtnPererOrgClick'
        },
        "#btnPodogrevOrgIns": {
            click: 'onBtnPodogrevOrgInsClick'
        },
        "#btnStokiLoadOrg": {
            click: 'onBtnStokiLoadOrgClick'
        },
        "#btnVodaLoadOrg": {
            click: 'onBtnVodaLoadOrgClick'
        }
    },

    onTabSchetVikActivate: function(component, eOpts) {

        //STORE
        var dataNachSchetVik = Ext.getCmp('dataNachSchetVik');
        var dt = new Date() ;
        var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;
        var stUser = Ext.data.StoreManager.get("StUser");
        var StSchetVik = Ext.data.StoreManager.get("StSchetVik");
        dataNachSchetVik.setValue(Ext.Date.format(firstDay, 'Y-m-d'));
        //LOGIN & PASSWORD
        var values =stUser.getAt(0);

        StSchetVik.load({
            params: {
                what:'getSchetVik',
                data: firstDay,
                login:values.get('login'),
                password:values.get('password')
            },
            scope:this
        });

    },

    onTabOplataOrgActivate: function(component, eOpts) {
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        //console.log(stUser);

        var StOplataOrg = Ext.data.StoreManager.get("StOplataOrg");
        var dataNach = Ext.getCmp('dataNachOplataOrg');

        var dt = new Date() ;
        //var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;
        dataNach.setValue(Ext.Date.format(dt, 'Y-m-d'));

        //LOGIN & PASSWORD
        var values =stUser.getAt(0);

        StOplataOrg.load({
            params: {
                what:'getOplataOrg',
                login:values.get('login'),
                password:values.get('password')
            }
        });

    },

    onTabFmPererOtoplActivate: function(component, eOpts) {
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var StTekNach = Ext.data.StoreManager.get("StTekNach");

        //LOGIN & PASSWORD
        var values =stUser.getAt(0);
        // FORM
        var form = component;
        // DATA
        var data = Ext.getCmp('dataPererOrg').getValue();

        //LOGIKA
        StTekNach.load({
            params: {
                what:'OtoplenieOrg',
                filial_id: values.get('filial_id'),
                data: data,
                login:values.get('login'),
                password:values.get('password')
            },
            callback: function(records,operation,success){
                if(success){
                    form.getForm().reset();
                    form.getForm().loadRecord(records[0]);
                    form.doLayout();
                }else{
                    form.getForm().reset();
                }
            },
            scope:this
        });
    },

    onTabFmPererStokiActivate: function(component, eOpts) {
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var StTekNach = Ext.data.StoreManager.get("StTekNach");

        //LOGIN & PASSWORD
        var values =stUser.getAt(0);
        // FORM
        var form = component;
        // DATA
        var data = Ext.getCmp('dataPererOrg').getValue();

        //LOGIKA
        StTekNach.load({
            params: {
                what:'StokiOrg',
                filial_id: values.get('filial_id'),
                data: data,
                login:values.get('login'),
                password:values.get('password')
            },
            callback: function(records,operation,success){
                if(success){
                    form.getForm().reset();
                    form.getForm().loadRecord(records[0]);
                    form.doLayout();
                }else{
                    form.getForm().reset();
                }
            },
            scope:this
        });
    },

    onTabFmPererVodaActivate: function(component, eOpts) {
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var StTekNach = Ext.data.StoreManager.get("StTekNach");

        //LOGIN & PASSWORD
        var values =stUser.getAt(0);
        // FORM
        var form = component;
        // DATA
        var data = Ext.getCmp('dataPererOrg').getValue();

        //LOGIKA
        StTekNach.load({
            params: {
                what:'VodaOrg',
                filial_id: values.get('filial_id'),
                data: data,
                login:values.get('login'),
                password:values.get('password')
            },
            callback: function(records,operation,success){
                if(success){
                    //    console.log(records[0]);
                    form.getForm().reset();
                    //   console.log(form.getForm());
                    form.getForm().loadRecord(records[0]);
                }else{
                    form.getForm().reset();
                }
            },
            scope:this
        });
    },

    onTabFmPererPodogrevActivate: function(component, eOpts) {
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var StTekNach = Ext.data.StoreManager.get("StTekNach");

        //LOGIN & PASSWORD
        var values =stUser.getAt(0);
        // FORM
        var form = component;
        // DATA
        var data = Ext.getCmp('dataPererOrg').getValue();

        //LOGIKA
        StTekNach.load({
            params: {
                what:'PodogrevOrg',
                filial_id: values.get('filial_id'),
                data: data,
                login:values.get('login'),
                password:values.get('password')
            },
            callback: function(records,operation,success){
                if(success){
                    //  console.log(records[0]);
                    form.getForm().reset();
                    //   console.log(form.getForm());
                    form.getForm().loadRecord(records[0]);
                }else{
                    form.getForm().reset();
                }
            },
            scope:this
        });
    },

    onTabLgotaUtsznActivate: function(component, eOpts) {
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var values =stUser.getAt(0);
        var StCompany = Ext.data.StoreManager.get("StCompany");

        switch (values.get('role')){
            case "1":
            case "2":
            case "5":
            case "3":
            case "4":
                StCompany.load({
                    params: {
                        what:'companyOne',
                        role:values.get('role'),
                        login:values.get('login'),
                        password:values.get('password')
                    },
                    scope:this
                });
                break;
            case "7":
                StCompany.load({
                    params: {
                        what:'company',
                        login:values.get('login'),
                        password:values.get('password')
                    },
                    scope:this
                });
                break;
            default:
                Ext.MessageBox.show({
                    title: 'Ошибка ',
                    msg: 'У Вас нет прав открывать базу РКО',
                    buttons: Ext.MessageBox.OK,
                    icon: Ext.MessageBox.ERROR
                });

        }
    },

    onTabPererActivate: function(component, eOpts) {
        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var stTekNachFilial = Ext.data.StoreManager.get("StTekNachFilial");
        //LOGIN & PASSWORD
        var values =stUser.getAt(0);
        var stFilial = stTekNachFilial.getAt(0);
        var data = Ext.getCmp('dataPererOrg').setValue(Ext.Date.getFirstDateOfMonth(new Date()) );

        var tabPnCenter = Ext.getCmp('tabPnFilialPerer');

        tabPnCenter.child('#tabFmPererOtopl').tab.hide();
        tabPnCenter.child('#tabFmPererPodogrev').tab.hide();
        tabPnCenter.child('#tabFmPererVoda').tab.hide();
        tabPnCenter.child('#tabFmPererStoki').tab.hide();
        tabPnCenter.child('#tabInitPererOrg').tab.show();
        tabPnCenter.setActiveTab('tabInitPererOrg');

        if(stTekNachFilial.data.length === 0){
            stTekNachFilial.load({
                params: {
                    what:'TekNachFilial',
                    filial_id:values.get('filial_id'),
                    login:values.get('login'),
                    password:values.get('password')
                },
                scope:this
            });
        }
    },

    onTabSubsUtsznActivate: function(component, eOpts) {
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var values =stUser.getAt(0);
        var StCompany = Ext.data.StoreManager.get("StCompany");
        //var gridAll = Ext.getCmp('grHousesOsmdAll');
        //var storeAll = gridAll.getStore();
        //var gridRko = Ext.getCmp('grHousesOsmdRko');
        //var storeRko = gridRko.getStore();
        //toreAll.removeAll();
        //storeRko.removeAll();
        //console.log(values.get('role'));
        switch (values.get('role')){
            case "1":
            case "2":
            case "5":
            case "3":
            case "4":
                StCompany.load({
                    params: {
                        what:'companyOne',
                        role:values.get('role'),
                        login:values.get('login'),
                        password:values.get('password')
                    },
                    scope:this
                });
                break;
            case "7":
                StCompany.load({
                    params: {
                        what:'company',
                        login:values.get('login'),
                        password:values.get('password')
                    },
                    scope:this
                });
                break;
            default:
                Ext.MessageBox.show({
                    title: 'Ошибка ',
                    msg: 'У Вас нет прав открывать базу РКО',
                    buttons: Ext.MessageBox.OK,
                    icon: Ext.MessageBox.ERROR
                });

        }
    },

    onTabOsmdHousesActivate: function(component, eOpts) {
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var values =stUser.getAt(0);
        var StCompany = Ext.data.StoreManager.get("StCompany");
        //var gridAll = Ext.getCmp('grHousesOsmdAll');
        //var storeAll = gridAll.getStore();
        //var gridRko = Ext.getCmp('grHousesOsmdRko');
        //var storeRko = gridRko.getStore();
        //toreAll.removeAll();
        //storeRko.removeAll();
        //console.log(values.get('role'));
        switch (values.get('role')){
            case "1":
            case "2":
            case "5":
            case "3":
            case "4":
                StCompany.load({
                    params: {
                        what:'companyOne',
                        role:values.get('role'),
                        login:values.get('login'),
                        password:values.get('password')
                    },
                    scope:this
                });
                break;
            case "7":
                StCompany.load({
                    params: {
                        what:'company',
                        login:values.get('login'),
                        password:values.get('password')
                    },
                    scope:this
                });
                break;
            default:
                Ext.MessageBox.show({
                    title: 'Ошибка ',
                    msg: 'У Вас нет прав открывать базу РКО',
                    buttons: Ext.MessageBox.OK,
                    icon: Ext.MessageBox.ERROR
                });

        }
    },

    onTabHouseResidentsActivate: function(component, eOpts) {
        //STORE
        var stUser = Ext.data.StoreManager.get("StUser");
        var values =stUser.getAt(0);
        var StCompany = Ext.data.StoreManager.get("StCompany");
        var stHAppartment = Ext.data.StoreManager.get("StHAppartment");
        var form =  Ext.getCmp('fmHouseResidents');
        var  cbHouse = form.getForm().findField('house_id');

        stHAppartment.removeAll();
        cbHouse.clearValue();
        switch (values.get('role')){
            case "1":
            case "2":
            case "5":
            case "3":
            case "4":
                StCompany.load({
                    params: {
                        what:'companyOne',
                        role:values.get('role'),
                        login:values.get('login'),
                        password:values.get('password')
                    },
                    scope:this
                });
                break;
            case "7":
                StCompany.load({
                    params: {
                        what:'company',
                        login:values.get('login'),
                        password:values.get('password')
                    },
                    scope:this
                });
                break;
            default:
                Ext.MessageBox.show({
                    title: 'Ошибка ',
                    msg: 'У Вас нет прав открывать базу ',
                    buttons: Ext.MessageBox.OK,
                    icon: Ext.MessageBox.ERROR
                });

        }
    },

    onPnTekNachFilialExpand: function(p, eOpts) {
        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var stTekNachFilial = Ext.data.StoreManager.get("StTekNachFilial");
        //LOGIN & PASSWORD
        var values =stUser.getAt(0);
        var stFilial = stTekNachFilial.getAt(0);
        if(stTekNachFilial.data.length === 0){
            stTekNachFilial.load({
                params: {
                    what:'TekNachFilial',
                    filial_id:values.get('filial_id'),
                    login:values.get('login'),
                    password:values.get('password')
                },
                scope:this
            });
        } else {
            if( values.get('filial_id') !=stFilial_id.get('filial_id')){
                stTekNachFilial.load({
                    params: {
                        what:'TekNachFilial',
                        filial_id:values.get('filial_id'),
                        login:values.get('login'),
                        password:values.get('password')
                    },
                    scope:this
                });

            }
        }
    },

    onDataPererOrgSelect: function(field, value, eOpts) {
        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var stTekNachFilial = Ext.data.StoreManager.get("StTekNachFilial");
        //LOGIN & PASSWORD
        var values =stUser.getAt(0);
        var tabPnCenter = Ext.getCmp('tabPnFilialPerer');

        //LOGIKA
        /*
        tabPnCenter.child('#tabFmPererOtopl').tab.hide();
        tabPnCenter.child('#tabFmPererPodogr').tab.hide();
        tabPnCenter.child('#tabFmPererVoda').tab.hide();
        tabPnCenter.child('#tabFmPererStoki').tab.hide();
        tabPnCenter.child('#tabInitPererOrg').tab.show();
        tabPnCenter.setActiveTab('tabInitPererOrg');
        */
        stTekNachFilial.load({
            params: {
                what:'TekNachFilial',
                data:value,
                filial_id:values.get('filial_id'),
                login:values.get('login'),
                password:values.get('password')
            },
            scope:this
        });

    },

    onGrTekNachFilialPererSelect: function(rowmodel, record, index, eOpts) {
        var me = this;
        //console.log(index);
        if (index < 4) {
            var tabPnCenter = Ext.getCmp('tabPnFilialPerer');

            switch (record.get('usluga')) {
                case 'отопл':
                tabPnCenter.child('#tabFmPererOtopl').tab.show();
                tabPnCenter.child('#tabFmPererPodogrev').tab.hide();
                tabPnCenter.child('#tabFmPererVoda').tab.hide();
                tabPnCenter.child('#tabFmPererStoki').tab.hide();
                tabPnCenter.child('#tabInitPererOrg').tab.hide();
                tabPnCenter.setActiveTab('tabFmPererOtopl');
                break;
                case 'подог':
                tabPnCenter.child('#tabFmPererOtopl').tab.hide();
                tabPnCenter.child('#tabFmPererPodogrev').tab.show();
                tabPnCenter.child('#tabFmPererVoda').tab.hide();
                tabPnCenter.child('#tabFmPererStoki').tab.hide();
                tabPnCenter.child('#tabInitPererOrg').tab.hide();
                tabPnCenter.setActiveTab('tabFmPererPodogrev');
                break;
                case 'вода':
                tabPnCenter.child('#tabFmPererOtopl').tab.hide();
                tabPnCenter.child('#tabFmPererPodogrev').tab.hide();
                tabPnCenter.child('#tabFmPererVoda').tab.show();
                tabPnCenter.child('#tabFmPererStoki').tab.hide();
                tabPnCenter.child('#tabInitPererOrg').tab.hide();
                tabPnCenter.setActiveTab('tabFmPererVoda');
                break;
                case 'стоки':
                tabPnCenter.child('#tabFmPererOtopl').tab.hide();
                tabPnCenter.child('#tabFmPererPodogrev').tab.hide();
                tabPnCenter.child('#tabFmPererVoda').tab.hide();
                tabPnCenter.child('#tabFmPererStoki').tab.show();
                tabPnCenter.child('#tabInitPererOrg').tab.hide();
                tabPnCenter.setActiveTab('tabFmPererStoki');
                break;
            }
        }
    },

    onBtFilialUpdateClick: function(button, e, eOpts) {
        // in use
        var me = this;

        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var stFilial = Ext.data.StoreManager.get("StFilial");//QueryOrg.getResults  <FmFilial>
        //var stTekNachFilial = Ext.data.StoreManager.get("StTekNachFilial");

        //LOGIN & PASSWORD & ID

        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            org_id:values.get('org_id'),
            filial_id:values.get('filial_id'),
            filial:values.get('filial'),
            what:'updateFilial'

        };

        //FORMA

        var fmFilial = Ext.getCmp('fmFilial');
        var value = fmFilial.getValues();

        //LOGIKA

        Ext.Object.merge(value, params);

        QueryOrg.Filial(value,function(results){
            Ext.MessageBox.show({
                title: 'Обновление данных по обьекту!',
                msg: results.msg,
                buttons: Ext.MessageBox.OK,
                buttonText:{
                    ok: "Закрыть!"
                },
                icon: Ext.MessageBox.INFO
            });
            if (results.success !=='0'){
                stFilial.load({
                    params: {
                        what:'FmFilial',
                        filial_id: results.filial_id,
                        login:value.login,
                        password:value.password
                    },

                    callback: function(records,operation,success){
                        if(success){
                            fmFilial.getForm().loadRecord(records[0]);
                        }
                    },

                    scope:this
                });
            }
        });
    },

    onbtnUpdateOrgClick: function(button, e, eOpts) {
        // in use
        var me = this;

        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var stOrg = Ext.data.StoreManager.get("StOrg");//QueryOrg.getResults  <FmFilial>

        //LOGIN & PASSWORD & ID

        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            org_id:values.get('org_id'),
            what:'updateOrg'

        };

        //FORMA

        var fmOrg = Ext.getCmp('fmOrg');
        var value = fmOrg.getValues();

        //LOGIKA

        Ext.Object.merge(value, params);

        QueryOrg.Org(value,function(results){
            if (results.success){
                Ext.MessageBox.show({
                    title: 'Оновление данных по организации!',
                    msg: results.msg,
                    buttons: Ext.MessageBox.OK,
                    buttonText:{
                        ok: "Закрыть!"
                    },
                    icon: Ext.MessageBox.INFO
                });
                stOrg.removeAll();
                stOrg.load({
                    params: {
                        what:'FmOrgInfo',
                        org_id: results.org_id,
                        login:value.login,
                        password:value.password
                    },
                    callback: function(records,operation,success){
                        if(success){
                            fmOrg.getForm().loadRecord(records[0]);
                        }
                    },
                    scope:this
                });
            }
        });
    },

    onBtnDeleteOrgClick: function(button, e, eOpts) {
        // in use
        var me = this;

        //CONTROLER

        var crLeftMenu = this.application.getController('CrLeftMenu');

        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var stOrg = Ext.data.StoreManager.get("StOrg");//QueryOrg.getResults  <FmFilial>
        var StTreeOrg = Ext.data.StoreManager.get("StTreeOrg");//QueryVodomer.getResults <TekPokVodomera>

        //TAB
        var tabPnCenter = me.getTabPnCenter();

        //LOGIN & PASSWORD & ID

        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            org_id:values.get('org_id'),
            what:'deleteOrg'

        };

        //GRID

        var tree = Ext.getCmp('grTreeOrg');

        //FORMA

        var fmOrg = Ext.getCmp('fmOrg');
        var value = fmOrg.getValues();

        //LOGIKA

        Ext.Object.merge(value, params);
        //console.log(value);


        Ext.MessageBox.show({
            title: 'Внимание!',
            msg: 'Организация и все связанные с ними данные будут удалены безвозвратно!',
            buttons: Ext.MessageBox.OKCANCEL,
            buttonText:{
                ok: "Удалить" ,
                cancel: "Отмена"
            },
            icon: Ext.MessageBox.WARNING,
            fn:function(btn){
                if(btn=='ok'){
                    QueryOrg.Org(value,function(results){
                        if (results.success){
                            StTreeOrg.load();
                            Ext.MessageBox.show({
                                title: 'Удаление организации!',
                                msg: results.msg,
                                buttons: Ext.MessageBox.OK,
                                buttonText:{
                                    ok: "Закрыть!"
                                },
                                icon: Ext.MessageBox.WARNING
                            });

                            stOrg.removeAll();
                            tabPnCenter.setActiveTab(0);
                        }

                    });
                }
            }
        });

    },

    onBtFilialDeleteClick: function(button, e, eOpts) {
        // in use
        var me = this;

        //CONTROLER

        var crLeftMenu = this.application.getController('CrLeftMenu');
        var tree = Ext.getCmp('grTreeOrg');
        var dataview = tree.getView();

        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var stFilial = Ext.data.StoreManager.get("StFilial");//QueryOrg.getResults  <FmFilial>
        var StTreeOrg = Ext.data.StoreManager.get("StTreeOrg");//QueryVodomer.getResults <TekPokVodomera>


        //LOGIN & PASSWORD & ID

        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            org_id:values.get('org_id'),
            filial_id:values.get('filial_id'),
            filial:values.get('filial'),
            what:'deleteFilial'

        };

        //GRID

        var tree = Ext.getCmp('grTreeOrg');


        //FORMA

        var fmFilial = Ext.getCmp('fmFilial');
        var value = fmFilial.getValues();

        //LOGIKA

        Ext.Object.merge(value, params);
        //console.log(value);


        Ext.MessageBox.show({
            title: 'Внимание!',
            msg: 'Филиал и все связанные с ним данные будут удалены безвозвратно!',
            buttons: Ext.MessageBox.OKCANCEL,
            buttonText:{
                ok: "Удалить" ,
                cancel: "Отмена"
            },
            icon: Ext.MessageBox.WARNING,
            fn:function(btn){
                if(btn=='ok'){
                    QueryOrg.Filial(value,function(results){
                        if (results.success){
                            Ext.MessageBox.show({
                                title: 'Удаление Филиала!',
                                msg: results.msg,
                                buttons: Ext.MessageBox.OK,
                                buttonText:{
                                    ok: "Закрыть!"
                                },
                                icon: Ext.MessageBox.WARNING
                            });

                           stFilial.removeAll();
                            StTreeOrg.load({
                                params: {
                                    org_id:value.org_id,
                                    login:value.login,
                                    password:value.password
                                },
                                callback: function(record,eOpts,success) {
                                     if(success){
                                         tree.expandAll();
                                         var TreeNodeId = record[0].get('orig_id');
                                         var rec = tree.getRootNode().findChild("orig_id",TreeNodeId, true);
                                         dataview.getSelectionModel().select(rec);
                                         crLeftMenu.onGrTreeOrgItemClick(dataview,rec);

                                     }
                                },
                                scope: this
                            });
                           // crLeftMenu.loadOrg();

                        }

                    });
                }
            }
        });

    },

    onBtFilialGvsNachClick: function(button, e, eOpts) {
        // in use
        var me = this;

        //STORE

        var stUser = Ext.data.StoreManager.get("StUser");
        var stFilial = Ext.data.StoreManager.get("StFilial");//QueryOrg.getResults  <FmFilial>
        var stTekNachFilial = Ext.data.StoreManager.get("StTekNachFilial");//QueryOrgVodomer.getResults  <TekPokVodomerov>

        //LOGIN & PASSWORD & ID

        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            org_id:values.get('org_id'),
            filial_id:values.get('filial_id'),
            filial:values.get('filial'),
            what:'nachGvsFilial'

        };
        //FORMA

        var fmFilial = Ext.getCmp('fmFilial');
        var value = fmFilial.getValues();

        //LOGIKA

        Ext.Object.merge(value, params);

        QueryOrg.Filial(value,function(results){
            Ext.MessageBox.show({
                title: 'Начисление ГВС по обьекту!',
                msg: results.msg,
                buttons: Ext.MessageBox.OK,
                buttonText:{
                    ok: "Закрыть!"
                },
                icon: Ext.MessageBox.INFO
            });
            if (results.success !=='0'){
                stFilial.removeAll();
                stTekNachFilial.load({
                    params: {
                        what:'TekNachFilial',
                        filial_id: filial_id,
                        login:login,
                        password:password
                    },
                    scope:this
                });
            }
        });
    },

    onBtnSaldoOrgOtopClick: function(button, e, eOpts) {
        // in use
        var me = this;

        //STORE
        var StTekNach = Ext.data.StoreManager.get("StTekNach");
        var stTekNachFilial = Ext.data.StoreManager.get("StTekNachFilial");
        var stUser = Ext.data.StoreManager.get("StUser");
        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            org_id:values.get('org_id'),
            filial_id:values.get('filial_id'),
            what:'SaldoOtoplOrg'
        };
        //console.log(values.data.login);
        //FORMA
        var form = Ext.getCmp('tabFmPererOtopl');
        var value = form.getForm().getValues();
        //LOGIKA
        Ext.Object.merge(value, params);

        QueryTeplomer.newPokTeplomera(value,function(results){

            StTekNach.load({
                params: {
                    what:'OtoplenieOrg',
                    filial_id: value.filial_id,
                    data: value.data,
                    login:value.login,
                    password:value.password
                },
                callback: function(records,operation,success){
                    if(success){
                        form.getForm().reset();
                        form.getForm().loadRecord(records[0]);
                        form.doLayout();
                    }else{
                        form.getForm().reset();
                    }
                },
                scope:this
            });

            stTekNachFilial.load({
                params: {
                    what:'TekNachFilial',
                    data: value.data,
                    filial_id:value.filial_id,
                    login:value.login,
                    password:value.password
                },
                scope:this
            });

        });

    },

    onBtnPererOrgDtClick: function(button, e, eOpts) {
        // in use
        var me = this;

        //STORE
        var StTekNach = Ext.data.StoreManager.get("StTekNach");
        var stTekNachFilial = Ext.data.StoreManager.get("StTekNachFilial");
        var stFilial = Ext.data.StoreManager.get("StFilial");
        var stUser = Ext.data.StoreManager.get("StUser");
        var values =stUser.getAt(0);
        var dteplomer_id = stFilial.getAt(0).get('dteplomer_id');
        var house_id = stFilial.getAt(0).get('house_id');

        var params = {
            login:values.get('login'),
            password:values.get('password'),
            org_id:values.get('org_id'),
            filial_id:values.get('filial_id'),
            dteplomer_id : dteplomer_id,
            house_id : house_id,
            what:'PererOrgDt'
        };

        //console.log(dteplomer_id);
        //FORMA
        var form = Ext.getCmp('tabFmPererOtopl');
        var value = form.getForm().getValues();
        //LOGIKA
        Ext.Object.merge(value, params);
        //console.log(value);

        if (dteplomer_id) {
            Ext.MessageBox.confirm({
                title: 'Перерасчет по организации ',
                msg: 'Перерасчет затронет все обьекты по домовому тепломеру <br>Вы желаете продолжать.',
                buttons: Ext.MessageBox.OKCANCEL,
                icon: Ext.MessageBox.ERROR,
                buttonText:{
                    ok:'Да',
                    cancel:'отмена'
                },
                fn:function(btn,newValue){
                    if(btn=='ok'){
                        QueryTeplomer.newPokTeplomera(value,function(results){
                            StTekNach.load({
                                params: {
                                    what:'Otoplenie',
                                    filial_id: value.filial_id,
                                    data: Ext.Date.getFirstDateOfMonth(new Date()),
                                    login:value.login,
                                    password:value.password
                                },
                                callback: function(records,operation,success){
                                    if(success){
                                        form.getForm().reset();
                                        form.getForm().loadRecord(records[0]);
                                        form.doLayout();
                                    }else{
                                        form.getForm().reset();
                                    }
                                },
                                scope:this
                            });
                            stTekNachFilial.load({
                                params: {
                                    what:'TekNachFilial',
                                    filial_id:value.filial_id,
                                    data: Ext.Date.getFirstDateOfMonth(new Date()),
                                    login:value.login,
                                    password:value.password
                                },
                                scope:this
                            });
                        });
                    }
                }

            });
        }
    },

    onBtnPererOrgClick: function(button, e, eOpts) {
        // in use
        var me = this;

        //STORE
        var StTekNach = Ext.data.StoreManager.get("StTekNach");
        var stTekNachFilial = Ext.data.StoreManager.get("StTekNachFilial");
        //var StDTeplomerCb = Ext.data.StoreManager.get("StDTeplomerCb");
        var stFilial = Ext.data.StoreManager.get("StFilial");
        var stUser = Ext.data.StoreManager.get("StUser");
        var values =stUser.getAt(0);
        var dteplomer_id = stFilial.getAt(0).get('dteplomer_id');
        //var out = StDTeplomerCb.getAt(0).get('out');
        var house_id = stFilial.getAt(0).get('house_id');

        var params = {
            login:values.get('login'),
            password:values.get('password'),
            org_id:values.get('org_id'),
            filial_id:values.get('filial_id'),
            dteplomer_id : dteplomer_id,
            //   out:out,
            house_id : house_id,
            what:'PererOrgGkal'
        };

        //console.log(dteplomer_id);
        //FORMA
        var form = Ext.getCmp('tabFmPererOtopl');
        var value = form.getForm().getValues();
        console.log(value);
        //LOGIKA
        Ext.Object.merge(value, params);

        Ext.MessageBox.confirm({
            title: 'Перерасчет по организации ',
            msg: 'Перерасчет по организации <br>Вы желаете продолжать.',
            buttons: Ext.MessageBox.OKCANCEL,
            icon: Ext.MessageBox.ERROR,
            buttonText:{
                ok:'Да',
                cancel:'отмена'
            },
            fn:function(btn,newValue){
                if(btn=='ok'){
                    QueryTeplomer.newPokTeplomera(value,function(results){
                        StTekNach.load({
                            params: {
                                what:'Otoplenie',
                                filial_id: value.filial_id,
                                data: Ext.Date.getFirstDateOfMonth(new Date()),
                                login:value.login,
                                password:value.password
                            },
                            callback: function(records,operation,success){
                                if(success){
                                    form.getForm().reset();
                                    form.getForm().loadRecord(records[0]);
                                    form.doLayout();
                                }else{
                                    form.getForm().reset();
                                }
                            },
                            scope:this
                        });
                        stTekNachFilial.load({
                            params: {
                                what:'TekNachFilial',
                                filial_id:value.filial_id,
                                data: Ext.Date.getFirstDateOfMonth(new Date()),
                                login:value.login,
                                password:value.password
                            },
                            scope:this
                        });
                    });
                }
            }

        });

    },

    onBtnPodogrevOrgInsClick: function(button, e, eOpts) {
        // in use
        var me = this;

        //STORE
        var StTekNach = Ext.data.StoreManager.get("StTekNach");
        var stTekNachFilial = Ext.data.StoreManager.get("StTekNachFilial");
        var stUser = Ext.data.StoreManager.get("StUser");
        var values =stUser.getAt(0);
        var params = {
            login:values.get('login'),
            password:values.get('password'),
            org_id:values.get('org_id'),
            filial_id:values.get('filial_id'),
            what:'OrgPodogrevIns'
        };
        //console.log(values.data.login);
        //FORMA
        var form = Ext.getCmp('tabFmPererPodogrev');
        var value = form.getForm().getValues();
        //LOGIKA
        Ext.Object.merge(value, params);

        QueryOrg.updateRecords(value,function(results){

            StTekNach.load({
                params: {
                    what:'PodogrevOrg',
                    filial_id: value.filial_id,
                    data: value.data,
                    login:value.login,
                    password:value.password
                },
                callback: function(records,operation,success){
                    if(success){
                        form.getForm().reset();
                        form.getForm().loadRecord(records[0]);
                        form.doLayout();
                    }else{
                        form.getForm().reset();
                    }
                },
                scope:this
            });

            stTekNachFilial.load({
                params: {
                    what:'TekNachFilial',
                    data: value.data,
                    filial_id:value.filial_id,
                    login:value.login,
                    password:value.password
                },
                scope:this
            });

        });

    },

    onBtnStokiLoadOrgClick: function() {

    },

    onBtnVodaLoadOrgClick: function() {

    }

});
