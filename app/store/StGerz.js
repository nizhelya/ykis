/*
 * File: app/store/StGerz.js
 * Date: Wed May 31 2017 22:33:17 GMT+0300 (EEST)
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Ykis.store.StGerz', {
    extend: 'Ext.data.Store',

    requires: [
        'Ykis.model.MdOplata',
        'Ext.data.proxy.Direct',
        'Ykis.DirectAPI',
        'Ext.data.reader.Json',
        'Ext.data.writer.Json'
    ],

    constructor: function(cfg) {
        var me = this;
        cfg = cfg || {};
        me.callParent([Ext.apply({
            groupDir: 'DESC',
            groupField: 'god',
            storeId: 'StGerz',
            model: 'Ykis.model.MdOplata',
            proxy: {
                type: 'direct',
                api: {
                    read: 'QuerySprav.getResults',
                    update: 'QuerySprav.updateRecords',
                    destroy: 'QuerySprav.destroyRecord'
                },
                extraParams: {
                    what: 'getGerz'
                },
                reader: {
                    type: 'json',
                    rootProperty: 'data'
                },
                writer: {
                    type: 'json',
                    writeAllFields: true
                }
            },
            listeners: {
                remove: {
                    fn: me.onDirectstoreRemove,
                    scope: me
                },
                update: {
                    fn: me.onDirectstoreUpdate,
                    scope: me
                }
            }
        }, cfg)]);
    },

    onDirectstoreRemove: function(store, records, index, isMove, eOpts) {
        records[0].data.what = "getGerz";

    },

    onDirectstoreUpdate: function(store, record, operation, modifiedFieldNames, details, eOpts) {
        record.data.what = "getGerz";

    }

});