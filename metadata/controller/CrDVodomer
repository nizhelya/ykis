{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "CrDVodomer"
    },
    "designerId": "502f80ce-ba61-478f-af21-48530545df0e",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabDvodomer",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onPanelActivate",
                "implHandler": [
                    "//CONTROLLER",
                    "",
                    "var CrLeftMenu = this.application.getController('CrLeftMenu');",
                    "CrLeftMenu.LoadTabDvodomer();",
                    ""
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onPanelActivate",
            "designerId": "5db6067f-a343-453c-9f05-27de3099b056"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#addDVodomer",
                "designer|targetType": "Ext.button.Button",
                "fn": "onAddDVodomerClick",
                "implHandler": [
                    "var me = this;",
                    "var WinAddDvodomer = Ext.ClassManager.instantiateByAlias('widget.winadddvodomer');",
                    "",
                    "var form = WinAddDvodomer.down('#fmAddDvodomer');",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "//console.log(values);",
                    "//LOGIKA",
                    "values.set({'vibor':'add_dvodomer'});",
                    "stUser.sync();",
                    "",
                    "",
                    "var dt = new Date();",
                    "form.down('#btAddDVodomer').setText('Добавить водомер');",
                    "WinAddDvodomer.setTitle('Ввод нового домового водомера');",
                    "//form.getForm().findField('pdate').setValue(Ext.Date.format(dt, 'Y-m-d'));",
                    "//form.getForm().findField('sdate').setValue(Ext.Date.format(dt, 'Y-m-d'));",
                    "form.getForm().findField('pp').setValue(4);",
                    "form.getForm().findField('fpdate').hide();",
                    "",
                    "",
                    "WinAddDvodomer.show();",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onAddDVodomerClick",
            "designerId": "24f4dce0-a7db-4e5f-86a0-1580ec0f0fd5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btAddDVodomer",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtAddDVodomerClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "",
                    "var values =stUser.getAt(0);",
                    "var vibor = values.get('vibor');",
                    "",
                    "switch (vibor){",
                    "    case 'change_dvodomer':  // ВЫБРАНА ЗАМЕНА ДОМОВОГО ВОДОМЕРА",
                    "    me.changeDVodomer();",
                    "    break;",
                    "    case 'add_dvodomer'://ДОБАВЛЕНИЕ ДОМОВОГО ВОДОМЕРА",
                    "    me.addDVodomer();",
                    "    break;",
                    "    case 'editDVodomer':// РЕДАКТИРОВАНИЕ ДОМОВОГО ВОДОМЕРА",
                    "    me.editDVodomer();",
                    "    break;",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtAddDVodomerClick",
            "designerId": "f1e84bd4-4495-43ef-a1c8-c21b0f9f2bdf"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#newPokDVodomera",
                "designer|targetType": "Ext.form.field.Number",
                "fn": "onNewPokDVodomeraSpecialkey",
                "implHandler": [
                    "var value = field.getValue();",
                    "if (e.getKey() === e.ENTER && !Ext.isEmpty(value)) {",
                    "    this.onInsTekPokDVodomerClick();",
                    "}"
                ],
                "name": "specialkey",
                "scope": "me"
            },
            "name": "onNewPokDVodomeraSpecialkey",
            "designerId": "937bb003-7435-4912-a902-04ae1914a112"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "changeDVodomer",
                "implHandler": [
                    ""
                ]
            },
            "name": "changeDVodomer",
            "designerId": "9adc09aa-59da-4135-9043-27349c0c186b"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "addDVodomer",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StDVodomer = Ext.data.StoreManager.get(\"StDVodomer\");//QueryTeplomer.getResults",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    house_id:values.get('house_id'),",
                    "    what:\"addDVodomer\"",
                    "};",
                    "//WIN",
                    "var WinAddDvodomer = this.getWinAddDvodomer();",
                    "",
                    "//GRID",
                    "var grDvodomer = Ext.getCmp('grDvodomer');",
                    "//FORMA",
                    "var fmDVodomers = Ext.getCmp('fmDVodomers');",
                    "var fmAddDvodomer = Ext.getCmp('fmAddDvodomer');",
                    "var value = fmAddDvodomer.getValues();",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "WinAddDvodomer.close();",
                    "var myMask= Ext.Msg.show({",
                    "    title:'Добавление записи...',",
                    "    msg: 'Добавление водомер.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "QueryVodomer.addVodomer(value,function(results){",
                    "    if (results.success){",
                    "        StDVodomer.load({",
                    "            params: {",
                    "                what:'Dvodomer',",
                    "                house_id: value.house_id,",
                    "                login:value.login,",
                    "                password:value.password",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    StDVodomer.each(function(item, index, count){",
                    "                        if (item.data.dvodomer_id === parseInt(results.dvodomer_id, 10) ) {",
                    "                            grDvodomer.getView().getSelectionModel().select(index);",
                    "                        }",
                    "                    });",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "        myMask.close();",
                    "",
                    "    }else{",
                    "        myMask.close();",
                    "",
                    "    }",
                    "});"
                ]
            },
            "name": "addDVodomer",
            "designerId": "44cdeb4f-729e-4f29-a6f8-3c4d134fa6f5"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "editDVodomer",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StDVodomer = Ext.data.StoreManager.get(\"StDVodomer\");//QueryTeplomer.getResults",
                    "var StAllPokDVodomera = Ext.data.StoreManager.get(\"StAllPokDVodomera\");//QueryTeplomer.getResults  <AllPokDTeplomera>",
                    "var StTekPokDVodomera = Ext.data.StoreManager.get(\"StTekPokDVodomera\");//QueryTeplomer.getResults <TekPokDTeplomera>",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    rowind:values.get('rowind'),",
                    "    house_id:values.get('house_id'),",
                    "    what:\"editDVodomer\"",
                    "};",
                    "//WIN",
                    "var WinAddDvodomer = me.getWinAddDvodomer();",
                    "//GRID",
                    "var grDVodomers = Ext.getCmp('grDvodomer');",
                    "//FORMA",
                    "var fmDVodomers = Ext.getCmp('fmDVodomers');",
                    "var fmAddDVodomer = Ext.getCmp('fmAddDvodomer');",
                    "var value = fmAddDVodomer.getValues();",
                    "",
                    "",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "WinAddDvodomer.close();",
                    "//console.log(value);",
                    "var myMask= Ext.Msg.show({",
                    "    title:'Редактирование записи...',",
                    "    msg: 'Запись отредактированых данных<br> по домовому водомеру.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "QueryVodomer.addVodomer(value,function(results){",
                    "    if (results.success){",
                    "        StDVodomer.load({",
                    "            params: {",
                    "                what:'Dvodomer',",
                    "                house_id: value.house_id,",
                    "                login:value.login,",
                    "                password:value.password",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    grDVodomers.getView().getSelectionModel().select(value.rowind);",
                    "                    Ext.MessageBox.show({",
                    "                        title: 'Обновление домового водомера',",
                    "                        msg: results.msg,",
                    "                        buttons: Ext.MessageBox.OK,",
                    "                        icon: Ext.MessageBox.INFO",
                    "                    });",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "        myMask.close();",
                    "",
                    "    }else{",
                    "        myMask.close();",
                    "",
                    "    }",
                    "});"
                ]
            },
            "name": "editDVodomer",
            "designerId": "62c4b9a9-e149-4263-9e5d-7abeaeba743a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#insNachWaterHouse",
                "designer|targetType": "Ext.button.Button",
                "fn": "onInsNachWaterHouseClick",
                "implHandler": [
                    "//in use",
                    "",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StWaterHouse = Ext.data.StoreManager.get(\"StWaterHouse\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    house_id:values.get('house_id'),",
                    "    dvodomer_id:values.get('dvodomer_id'),",
                    "    what:\"nach_norma_voda_org_dvodomer\"",
                    "};",
                    "",
                    "//LOGIKA",
                    "QueryVodomer.updateVodomer(params,function(results){",
                    "    if (results.success){    ",
                    "        Ext.MessageBox.show({",
                    "            title: 'Начисление воды по норме по обьектам',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "",
                    "    } ",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onInsNachWaterHouseClick",
            "designerId": "7c75f62f-9985-4213-b780-3a6e669b1fb7"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "WinAddDvodomer",
                "selector": "#winAddDvodomer"
            },
            "name": "WinAddDvodomer",
            "designerId": "e3a7ac22-4a5c-41fc-a384-6628c2fc1e5d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#delTekPokDvodomera",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.button.Button",
                "fn": "onDelTekPokDvodomeraClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stWater = Ext.data.StoreManager.get(\"StAllPokDVodomera\");//QueryVodomer.getResults  <AllPokVodomera>",
                    "var stTekPokVodomera = Ext.data.StoreManager.get(\"StTekPokDVodomera\");//QueryVodomer.getResults <TekPokVodomera>",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    house_id:values.get('house_id'),",
                    "    what:'DVodomer'",
                    "",
                    "};",
                    "//GRID",
                    "",
                    "//var grTekNachAppVodomer = Ext.getCmp('grTekNachAppVodomer');",
                    "",
                    "//FORMA",
                    "",
                    "var fmVodomer = Ext.getCmp('fmDVodomers');",
                    "var value = fmVodomer.getValues();",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "//console.log(value);",
                    "Ext.MessageBox.confirm({",
                    "    title: 'Удаление последних показаний домового водомера',",
                    "    msg: 'Вы удаляете последнее показание подомового водомера<br>Подтвердите или отмените свои действия.',",
                    "    buttons: Ext.MessageBox.OKCANCEL,",
                    "    icon: Ext.MessageBox.ERROR,",
                    "    buttonText:{",
                    "        ok:'подтвеждаю',",
                    "        cancel:'отмена'",
                    "    },",
                    "    fn:function(btn,newValue){",
                    "        if(btn=='ok'){",
                    "            QueryVodomer.delPokVodomera(value,function(results){",
                    "                if (results.success){",
                    "                    Ext.MessageBox.show({title: 'Удаление последних показаний ',",
                    "                                         msg: results.msg,",
                    "                                         buttons: Ext.MessageBox.OK,",
                    "                                         icon: Ext.MessageBox.INFO",
                    "                                        });",
                    "                    fmVodomer.getForm().findField('newValue').setValue(0);",
                    "                    stWater.load({",
                    "                        params: {",
                    "                            what:'AllPokDVodomera',",
                    "                            what_id: value.dvodomer_id,",
                    "                            dvodomer_id: value.dvodomer_id,",
                    "                            login:value.login,",
                    "                            password:value.password",
                    "                        },",
                    "                        scope:this",
                    "                    });",
                    "",
                    "                    stTekPokVodomera.load({",
                    "                        params: {",
                    "                            what:'TekPokDVodomera',",
                    "                            dvodomer_id: value.dvodomer_id,",
                    "                            what_id: value.dvodomer_id,",
                    "                            login:value.login,",
                    "                            password:value.password",
                    "                        },",
                    "                        callback: function(records,operation,success){",
                    "                            if(success){",
                    "                                fmVodomer.getForm().loadRecord(records[0]);",
                    "                            }",
                    "                        },",
                    "                        scope:this",
                    "                    });",
                    "",
                    "                }else{",
                    "                    Ext.MessageBox.show({title: 'Удаление последних показаний домового водомера',",
                    "                                         msg: results.msg,",
                    "                                         buttons: Ext.MessageBox.OK,",
                    "                                         icon: Ext.MessageBox.ERROR",
                    "                                        });",
                    "                }",
                    "            });",
                    "        }",
                    "    }",
                    "});",
                    ""
                ],
                "name": "click"
            },
            "name": "onDelTekPokDvodomeraClick",
            "designerId": "ea2a3086-1f7f-4e6b-a650-ea750e456943"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#VodoPotreblenieiDvodomer",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.button.Button",
                "fn": "onVodoPotreblenieiDvodomerClick",
                "implHandler": [
                    "var me = this;",
                    "var StUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StReport = Ext.data.StoreManager.get(\"StReport\");",
                    "var values =StUser.getAt(0);",
                    "var house_id =values.get('house_id');",
                    "",
                    "var usertype = 1;",
                    "",
                    "//V",
                    "var tabPnCenter =  Ext.getCmp('tabPnCenter');//me.getTabPnCenter();",
                    "var grid = Ext.getCmp('grDvodomer');",
                    "var gridRowSelectedRecords  = grid.getView().getSelectionModel().getSelection();",
                    "var size = Ext.Object.getSize(gridRowSelectedRecords) ;",
                    "var vodomer =[];",
                    "if (size >= 1){",
                    "",
                    "    Ext.Object.each(gridRowSelectedRecords, function(key, val, myself) {",
                    "        Ext.Object.merge(val.data, vodomer);",
                    "        vodomer.push(val.data.dvodomer_id);",
                    "    });",
                    "",
                    "}",
                    "",
                    "//console.log(values);",
                    "if (house_id) {",
                    "",
                    "    var report = 'VodoPotreblenieDvodomer';",
                    "    var namereport = 'Отчет водопотребления.';",
                    "",
                    "    var value = {",
                    "        login:values.get('login'),",
                    "        password:values.get('password'),",
                    "        report:report,",
                    "        what:report,",
                    "        house_id:house_id,",
                    "        vodomer: vodomer",
                    "    };",
                    "",
                    "    var tab = tabPnCenter.child('#'+report);",
                    "",
                    "    if (!tab) {",
                    "        tab  = tabPnCenter.add({",
                    "            xtype:'tabreportorg',",
                    "            title:namereport,",
                    "            id:''+report+''",
                    "        });",
                    "",
                    "        tabPnCenter.setActiveTab(tab);",
                    "",
                    "    }else{",
                    "",
                    "        tabPnCenter.setActiveTab(tab);",
                    "    }",
                    "",
                    "    var reppan = tab.getComponent(0);",
                    "",
                    "",
                    "    var myMask= Ext.Msg.show({",
                    "        title:'Отчеты...',",
                    "        msg: 'Загрузка отчета.Ожидайте...',",
                    "        buttons: Ext.Msg.CANCEL,",
                    "        wait: true,",
                    "        modal: true,",
                    "        icon: Ext.Msg.INFO",
                    "    });",
                    "",
                    "    QueryReport.getResults(value,function(data){",
                    "        if (data){",
                    "",
                    "            //    reportHead.update(data.head);",
                    "            reppan.update(data.content);",
                    "            //      reportFoot.update(data.foot);",
                    "            Ext.REPORTCONTENT =data.content;",
                    "            myMask.close();",
                    "",
                    "",
                    "        } else {",
                    "            Ext.MessageBox.show({",
                    "                title: 'Ошибка ',",
                    "                msg: 'Документ не создан',",
                    "                buttons: Ext.MessageBox.OK,",
                    "                icon: Ext.MessageBox.ERROR",
                    "",
                    "            });",
                    "",
                    "        }",
                    "",
                    "    });",
                    "    myMask.close();",
                    "",
                    "",
                    "}",
                    ""
                ],
                "name": "click"
            },
            "name": "onVodoPotreblenieiDvodomerClick",
            "designerId": "9d300bd0-2da9-4942-b10b-1fb1d9cc3b5d"
        }
    ]
}