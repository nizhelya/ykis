{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "AppNach"
    },
    "designerId": "76464acb-82ce-4eb6-b3ee-7c0807d5eaf5",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabNachApp",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabNachAppActivate",
                "implHandler": [
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stAppartment = Ext.data.StoreManager.get(\"StAppartment\");//QueryAddress.getResults <Appartment>",
                    "var form = Ext.getCmp('tabFmAppTbo');",
                    "var tabPnNachApp = Ext.getCmp('tabPnNachApp');",
                    "var fmInfoNachApp = Ext.getCmp('fmInfoNachApp');",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var StLgotaNach = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "var gridNachisl = Ext.getCmp('grNachTbo');",
                    "",
                    "var values =stUser.getAt(0);",
                    "tabPnNachApp.setActiveTab(0);",
                    "switch (values.get('role')){",
                    "    case \"5\":",
                    "    case \"7\":",
                    "        tabPnNachApp.setActiveTab(1);",
                    "        break;",
                    "",
                    "",
                    "}",
                    "if (values.get('address_id'))",
                    "    stAppartment.load({",
                    "        params: {",
                    "            what_id: values.get('address_id'),",
                    "            address_id:  values.get('address_id'),",
                    "            what:'Appartment',",
                    "            login:values.get('login'),",
                    "            password:values.get('password')",
                    "        },",
                    "        callback: function(records,operation,success){",
                    "",
                    "",
                    "            if(success){",
                    "",
                    "                if (records.length) {",
                    "                    fmInfoNachApp.getForm().loadRecord(records[0]);",
                    "",
                    "                    var adrec = fmInfoNachApp.getForm().findField('address').getValue();",
                    "                    var fio = fmInfoNachApp.getForm().findField('nanim').getValue();",
                    "                    var kod = fmInfoNachApp.getForm().findField('address_id').getValue();",
                    "",
                    "",
                    "                    fmInfoNachApp.setTitle('ид&nbsp;&nbsp'+ kod + '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' +",
                    "                                           adrec + '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' +  fio);",
                    "",
                    "                }",
                    "            }",
                    "        },",
                    "        scope:this",
                    "    });",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'TboApp',",
                    "        address_id: values.get('address_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            form.getForm().reset();",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});",
                    "StLgotaNach.load({",
                    "    params: {",
                    "        what:'LgotaNachTbo',",
                    "        address_id: values.get('address_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    }",
                    "});",
                    ""
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabNachAppActivate",
            "designerId": "54eef26c-7073-414d-8193-0ef55388ef4e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabOplata",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabOplataActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "//console.log(stUser);",
                    "",
                    "var StOplata = Ext.data.StoreManager.get(\"StOplata\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "",
                    "StOplata.load({",
                    "    params: {",
                    "        what:'OplataApp',",
                    "        address_id: values.get('address_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    scope:this",
                    "});",
                    ""
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabOplataActivate",
            "designerId": "3d5d8d1e-dddd-4a99-98ef-2cb31ca49c94"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabNachAppVoda",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "Ext.tab.Panel",
                "fn": "onTabNachAppVodaActivate",
                "implHandler": [
                    "var tabPnNachApp = Ext.getCmp('tabNachAppVoda');",
                    "var tabFmAppVik = Ext.getCmp('tabFmAppVik');",
                    "var stAppartment = Ext.data.StoreManager.get(\"StAppartment\");",
                    "var records =stAppartment.getAt(0);",
                    "tabPnNachApp.setActiveTab(0);",
                    "",
                    "if (records) {",
                    "    tabFmAppVik.getForm().loadRecord(records);",
                    "    var dogVik = tabFmAppVik.getForm().findField('dog_vik').getValue();",
                    "    var rdogVik = tabFmAppVik.getForm().findField('rdog_vik').getValue();",
                    "    if(dogVik !==\"\") {",
                    "        tabFmAppVik.down('#btnOpenWinDogovorVik').setText('Договір № '+dogVik);",
                    "    }else {",
                    "        tabFmAppVik.down('#btnOpenWinDogovorVik').setText('Договіра немає');",
                    "    }",
                    "    if(rdogVik !==\"\") {",
                    "        tabFmAppVik.down('#btnOpenWinDogRestrVik').setText('Договір рестр № '+rdogVik);",
                    "    }else {",
                    "        tabFmAppVik.down('#btnOpenWinDogRestrVik').setText('Договіра рестр немає');",
                    "    }",
                    "",
                    "}",
                    "",
                    ""
                ],
                "name": "activate"
            },
            "name": "onTabNachAppVodaActivate",
            "designerId": "7ed4de71-d5ad-4e34-932c-038ca78299e5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabUtszn",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabUtsznActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var org_id = values.get('org_id');",
                    "",
                    "",
                    "if (org_id){",
                    "",
                    "    var StUtszn = Ext.data.StoreManager.get(\"StUtszn\");",
                    "    var btnImportUtszn =  Ext.getCmp('btnImportUtszn');",
                    "    var btnUpdateReestrUtszn =  Ext.getCmp('btnUpdateReestrUtszn');",
                    "    var btnPrintReestrToUtszn =  Ext.getCmp('btnPrintReestrToUtszn');",
                    "    var lgota =  Ext.getCmp('lgota').getValue().vibor;",
                    "",
                    "    btnImportUtszn.setDisabled(false);",
                    "    btnUpdateReestrUtszn.setDisabled(false);",
                    "    btnPrintReestrToUtszn.setDisabled(false);",
                    "",
                    "",
                    "    StUtszn.load({",
                    "        params: {",
                    "            what:'utszn',",
                    "            data:data,",
                    "            lgota:lgota,",
                    "            org_id:values.get('org_id'),",
                    "            login:values.get('login'),",
                    "            password:values.get('password')",
                    "        }",
                    "    });",
                    "}else{",
                    "    var StCompany = Ext.data.StoreManager.get(\"StCompany\");",
                    "    var dt = new Date() ;",
                    "    var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;",
                    "    var dataNach = Ext.getCmp('dataNachUtszn');",
                    "    dataNach.setValue(Ext.Date.format(firstDay, 'Y'));",
                    "    data = dataNach.getValue();",
                    "    switch (values.get('role')){",
                    "        case \"1\":",
                    "        case \"2\":",
                    "        case \"5\":",
                    "        case \"3\":",
                    "        case \"4\":",
                    "            StCompany.load({",
                    "                params: {",
                    "                    what:'companyOne',",
                    "                    role:values.get('role'),",
                    "                    login:values.get('login'),",
                    "                    password:values.get('password')",
                    "                },",
                    "                scope:this",
                    "            });",
                    "            break;",
                    "        case \"7\":",
                    "            StCompany.load({",
                    "                params: {",
                    "                    what:'company',",
                    "                    login:values.get('login'),",
                    "                    password:values.get('password')",
                    "                },",
                    "                scope:this",
                    "            });",
                    "            break;",
                    "        default:",
                    "            Ext.MessageBox.show({",
                    "                title: 'Ошибка ',",
                    "                msg: 'У Вас нет прав открывать базу РКО',",
                    "                buttons: Ext.MessageBox.OK,",
                    "                icon: Ext.MessageBox.ERROR",
                    "            });",
                    "",
                    "    }",
                    "}"
                ],
                "name": "activate"
            },
            "name": "onTabUtsznActivate",
            "designerId": "a024c1d1-c547-4d65-a690-cb7b5b80b36a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabVoda",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabVodaActivate",
                "implHandler": [
                    "//STORE",
                    "var form = Ext.getCmp('fmVoda');",
                    "var btAddNach = Ext.getCmp('btAddNachVoda');",
                    "var btAddPerer = Ext.getCmp('btAddPererVoda');",
                    "var pnPerer = Ext.getCmp('pnPererVoda');",
                    "var grid = Ext.getCmp('grTarifHousesVoda');",
                    "var store = grid.getStore();",
                    "store.removeAll();",
                    "var dt = new Date();",
                    "var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;",
                    "",
                    "form.getForm().reset();",
                    "form.getForm().findField('data').setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "btAddNach.setText(\"Начислить воду и стоки за период  \"+ Ext.Date.format(firstDay, 'F,Y'));",
                    "btAddPerer.setText(\"Перерасчитать воду и стоки  в  \"+ Ext.Date.format(firstDay, 'F,Y'));",
                    "pnPerer.setTitle(\"Перерасчет воды и стоков за период \");"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabVodaActivate",
            "designerId": "b866078e-b1fb-4d88-99c4-8b2bdd912445"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabPodogrev",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabPodogrevActivate",
                "implHandler": [
                    "//STORE",
                    "var form = Ext.getCmp('fmPodogrev');",
                    "var btAddNach = Ext.getCmp('btAddNachPtn');",
                    "var btAddPerer = Ext.getCmp('btAddPererPodogrev');",
                    "var pnPerer = Ext.getCmp('pnPererPodogrev');",
                    "var grid = Ext.getCmp('grTarifHousesPodogrev');",
                    "var store = grid.getStore();",
                    "store.removeAll();",
                    "var dt = new Date();",
                    "var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;",
                    "",
                    "form.getForm().reset();",
                    "form.getForm().findField('data').setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "btAddNach.setText(\"Начислить ПТН за период  \"+ Ext.Date.format(firstDay, 'F,Y'));",
                    "btAddPerer.setText(\"Перерасчитать ПТН  за  \"+ Ext.Date.format(firstDay, 'F,Y'));",
                    "pnPerer.setTitle(\"Перерасчет ПТН за период \"+ Ext.Date.format(firstDay, 'F,Y'));"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabPodogrevActivate",
            "designerId": "19611710-3e63-4c43-8d40-9d941a35b345"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabNachAppTeplo",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "Ext.tab.Panel",
                "fn": "onTabNachAppTeploActivate",
                "implHandler": [
                    "var tabPnNachApp = Ext.getCmp('tabNachAppTeplo');",
                    "var tabFmAppTeplo = Ext.getCmp('tabFmAppTeplo');",
                    "var stAppartment = Ext.data.StoreManager.get(\"StAppartment\");",
                    "var records =stAppartment.getAt(0);",
                    "tabPnNachApp.setActiveTab(0);",
                    "",
                    "if (records) {",
                    "    tabFmAppTeplo.getForm().loadRecord(records);",
                    "    var dogYtke = tabFmAppTeplo.getForm().findField('dog_ytke').getValue();",
                    "    if(dogYtke!==\"\") {",
                    "        tabFmAppTeplo.down('#btnOpenWinDogovorYtke').setText('Договір № '+dogYtke);",
                    "    } else {",
                    "        tabFmAppTeplo.down('#btnOpenWinDogovorYtke').setText('Договіра немає');",
                    "    }",
                    "}",
                    ""
                ],
                "name": "activate"
            },
            "name": "onTabNachAppTeploActivate",
            "designerId": "7940f1e2-9bb0-4ca3-a634-bba4cba948bc"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabTbo",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabTboActivate",
                "implHandler": [
                    "//STORE",
                    "var form = Ext.getCmp('fmTbo');",
                    "var btAddNach = Ext.getCmp('btAddNachTbo');",
                    "var btAddPerer = Ext.getCmp('btAddPererTbo');",
                    "var pnPerer = Ext.getCmp('pnPererTbo');",
                    "var grid = Ext.getCmp('grTarifHousesTbo');",
                    "var store = grid.getStore();",
                    "store.removeAll();",
                    "var dt = new Date();",
                    "var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;",
                    "form.getForm().reset();",
                    "form.getForm().findField('data').setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "btAddNach.setText(\"Начислить ТБО за период   \"+ Ext.Date.format(firstDay, 'F,Y'));",
                    "btAddPerer.setText(\"Перерасчитать ТБО за период  \"+ Ext.Date.format(firstDay, 'F,Y'));",
                    "pnPerer.setTitle(\"Перерасчет ТБО за период \"+ Ext.Date.format(firstDay, 'F,Y'));",
                    ""
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabTboActivate",
            "designerId": "1c7aca87-4708-4b83-9991-277c13a15c86"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabKvartplata",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabKvartplataActivate",
                "implHandler": [
                    "//STORE",
                    "var form = Ext.getCmp('fmKvartplata');",
                    "var btAddNach = Ext.getCmp('btAddNachKv');",
                    "var btAddPerer = Ext.getCmp('btAddPererKv');",
                    "var pnPerer = Ext.getCmp('pnPererKv');",
                    "var grid = Ext.getCmp('grTarifHousesKv');",
                    "var store = grid.getStore();",
                    "store.removeAll();",
                    "",
                    "",
                    "var dt = new Date();",
                    "var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;",
                    "",
                    "form.getForm().reset();",
                    "form.getForm().findField('data').setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "btAddNach.setText(\"Начислить квартплату за период  \"+ Ext.Date.format(firstDay, 'F,Y'));",
                    "btAddPerer.setText(\"Перерасчитать квартплату за  \"+ Ext.Date.format(firstDay, 'F,Y'));"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabKvartplataActivate",
            "designerId": "1c7c94ae-c56b-4eae-a4d5-fb6b2eb5132a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabFmAppPodogrev",
                "designer|targetType": "Ext.form.Panel",
                "fn": "onTabFmAppPodogrevActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var StLgotaNach = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "var gridNachisl = Ext.getCmp('grNachPodogrev');",
                    "",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "// FORM",
                    "var form = component;",
                    "// DATA",
                    "",
                    "//LOGIKA",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'PodogrevApp',",
                    "        address_id: values.get('address_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "           // console.log(form.getForm());",
                    "",
                    "            form.getForm().reset();",
                    "          //  gridNachisl.getView().refresh();",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});",
                    "StLgotaNach.load({",
                    "    params: {",
                    "        what:'LgotaNachPodogrev',",
                    "        address_id: values.get('address_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    }",
                    "});"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabFmAppPodogrevActivate",
            "designerId": "3584924d-3e96-4c94-b654-6e2d649ef9d9"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabFmAppAvoda",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "Ext.form.Panel",
                "fn": "onTabFmAppAvodaActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var gridNachisl = Ext.getCmp('grNachAvoda');",
                    "",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "// FORM",
                    "var form = component;",
                    "// DATA",
                    "",
                    "//LOGIKA",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'AvodaApp',",
                    "        address_id: values.get('address_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            form.getForm().reset();",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});",
                    ""
                ],
                "name": "activate"
            },
            "name": "onTabFmAppAvodaActivate",
            "designerId": "3bc64436-ac18-42ba-891d-3360a94965df"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabFmAppPtn",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "Ext.form.Panel",
                "fn": "onTabFmAppPtnActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var StLgotaNach = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "var gridNachisl = Ext.getCmp('grNachPtn');",
                    "",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "// FORM",
                    "var form = component;",
                    "// DATA",
                    "",
                    "//LOGIKA",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'PtnApp',",
                    "        address_id: values.get('address_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "",
                    "            form.getForm().reset();",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});",
                    "StLgotaNach.load({",
                    "    params: {",
                    "        what:'LgotaNachPtn',",
                    "        address_id: values.get('address_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    }",
                    "});"
                ],
                "name": "activate"
            },
            "name": "onTabFmAppPtnActivate",
            "designerId": "277cb273-20d9-4f02-97ba-a16b695b62f9"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabFmAppOtoplenie",
                "designer|targetType": "Ext.form.Panel",
                "fn": "onTabFmAppOtoplActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var StLgotaNach = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "var gridNachisl = Ext.getCmp('grNachOtoplenie');",
                    "",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "// FORM",
                    "var form = component;",
                    "// DATA",
                    "",
                    "//LOGIKA",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'OtoplenieApp',",
                    "        address_id: values.get('address_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            form.getForm().reset();",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});",
                    "StLgotaNach.load({",
                    "    params: {",
                    "        what:'LgotaNachOtoplenie',",
                    "        address_id: values.get('address_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    }",
                    "});"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabFmAppOtoplActivate",
            "designerId": "70951a75-7ad6-4ea3-8c40-c099775cfdf2"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabFmAppTbo",
                "designer|targetType": "Ext.form.Panel",
                "fn": "onTabFmAppTboActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var StLgotaNach = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "var gridNachisl = Ext.getCmp('grNachTbo');",
                    "",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "// FORM",
                    "var form = component;",
                    "// DATA",
                    "",
                    "//LOGIKA",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'TboApp',",
                    "        address_id: values.get('address_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            form.getForm().reset();",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});",
                    "StLgotaNach.load({",
                    "    params: {",
                    "        what:'LgotaNachTbo',",
                    "        address_id: values.get('address_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    }",
                    "});"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabFmAppTboActivate",
            "designerId": "142d0b7f-0f1f-4785-82d4-f177351a230d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabFmAppKvartplata",
                "designer|targetType": "Ext.form.Panel",
                "fn": "onTabFmAppKvartplataActivate",
                "implHandler": [
                    "  //console.log(1);",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var StLgotaNach = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "var gridNachisl = Ext.getCmp('grNachKvartplata');",
                    "",
                    "var values =stUser.getAt(0);",
                    "var form = component;",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'KvartplataApp',",
                    "        address_id: values.get('address_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            // console.log(form.getForm());",
                    "            gridNachisl.getView().refresh();",
                    "            form.getForm().reset();",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});",
                    "StLgotaNach.load({",
                    "    params: {",
                    "        what:'LgotaNachKvartplata',",
                    "        address_id: values.get('address_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    }",
                    "});"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabFmAppKvartplataActivate",
            "designerId": "2d218abc-1f52-4e24-a8bf-6bbe6f4f458b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabFmAppStoki",
                "designer|targetType": "Ext.form.Panel",
                "fn": "onTabFmAppStokiActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var StLgotaNach = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "var gridNachisl = Ext.getCmp('grNachStoki');",
                    "",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "// FORM",
                    "var form = component;",
                    "// DATA",
                    "",
                    "//LOGIKA",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'StokiApp',",
                    "        address_id: values.get('address_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            form.getForm().reset();",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});",
                    "StLgotaNach.load({",
                    "    params: {",
                    "        what:'LgotaNachStoki',",
                    "        address_id: values.get('address_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    }",
                    "});"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabFmAppStokiActivate",
            "designerId": "b1732d0e-f0bd-4ed5-90d7-847174d877db"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#exportBudjet",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onExportBudjetActivate",
                "implHandler": [
                    "var form = Ext.getCmp('fmExportBudjet');",
                    "var dt = new Date();",
                    "var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;",
                    "form.getForm().findField('data').setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "form.getForm().findField('subjectTo').setValue('utszn5139@ukr.net');",
                    "form.getForm().findField('subjectFrom').setValue('yis@yuzhny.com');",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var vibor = values.get('parentid');",
                    "switch (vibor){",
                    "    case 'MgkcBudjet':",
                    "    //console.log(vibor);",
                    "    break;",
                    "    case 'VikBudjet':",
                    "    //console.log(vibor);",
                    "    break;",
                    "    case 'UgtransBudjet':",
                    "    // console.log(vibor);",
                    "    break;",
                    "    case 'YtkeBudjet':",
                    "    // console.log(vibor);",
                    "    break;",
                    "}"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onExportBudjetActivate",
            "designerId": "2ba20c6b-10e0-45ce-a491-347ab96d76a7"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabFmAppVoda",
                "designer|targetType": "Ext.form.Panel",
                "fn": "onTabFmAppVodaActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var StLgotaNach = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "var gridNachisl = Ext.getCmp('grNachVoda');",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "// FORM",
                    "var form = component;",
                    "gridNachisl.getView().getSelectionModel().deselectAll();",
                    "form.getForm().reset();",
                    "",
                    "// DATA",
                    "",
                    "//LOGIKA",
                    "",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'VodaApp',",
                    "        address_id: values.get('address_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "                gridNachisl.getView().refresh();",
                    "",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});",
                    "",
                    "StLgotaNach.load({",
                    "    params: {",
                    "        what:'LgotaNachVoda',",
                    "        address_id: values.get('address_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    }",
                    "});"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabFmAppVodaActivate",
            "designerId": "84011d98-dab0-47ee-b981-e0117b620362"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabDbfLgota",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabDbfLgotaActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "//console.log(stUser);",
                    "var StCompany = Ext.data.StoreManager.get(\"StCompany\");",
                    "",
                    "",
                    "var StSubsidia = Ext.data.StoreManager.get(\"StDbfLgota\");",
                    "var dataNach = Ext.getCmp('dataNachLgota');",
                    "var dt = new Date() ;",
                    "dt.setDate(dt.getDate() - 28);",
                    "dt.getDate();",
                    "var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;",
                    "dataNach.setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "data = dataNach.getValue();",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var usluga_id = values.get('usluga_id');",
                    "var btnGetSubsidiaOshadBank =  Ext.getCmp('btnGetLgotaOshadBank');",
                    "var btnPrintReestrToOshadBank =  Ext.getCmp('btnPrintReestrToOshadBank');",
                    "var btnPrintReestrFromOshadBank =  Ext.getCmp('btnPrintReestrFromOshadBank');",
                    "",
                    "var btnImportOshadBank =  Ext.getCmp('btnImportOshadBankLgota');",
                    "var btnExportOshadBank =  Ext.getCmp('btnExportOshadBankLgota');",
                    "var btnImportOplataOshad =  Ext.getCmp('btnImportOplataOshadLgota');",
                    "var btnImportOplataYkis =  Ext.getCmp('btnImportOplataYkisLgota');",
                    "var btnSubsidiaOtkat =  Ext.getCmp('btnLgotaOtkat');",
                    "",
                    "if (usluga_id){",
                    "    btnGetSubsidiaOshadBank.setDisabled(false);",
                    "    btnPrintReestrToOshadBank.setDisabled(false);",
                    "    btnPrintReestrFromOshadBank.setDisabled(false);",
                    "",
                    "    btnImportOshadBank.setDisabled(false);",
                    "    btnExportOshadBank.setDisabled(false);",
                    "    btnImportOplataOshad.setDisabled(false);",
                    "    btnImportOplataYkis.setDisabled(false);",
                    "    btnSubsidiaOtkat.setDisabled(false);",
                    "    StSubsidia.load({",
                    "        params: {",
                    "            what:'getDbfLgota',",
                    "            data:data,",
                    "            usluga_id:values.get('usluga_id'),",
                    "            login:values.get('login'),",
                    "            password:values.get('password')",
                    "        }",
                    "    });",
                    "}",
                    "switch (values.get('role')){",
                    "    case \"1\":",
                    "    case \"2\":",
                    "    case \"5\":",
                    "    case \"3\":",
                    "    case \"4\":",
                    "        StCompany.load({",
                    "            params: {",
                    "                what:'companyOne',",
                    "                role:values.get('role'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            scope:this",
                    "        });",
                    "        break;",
                    "    case \"7\":",
                    "        StCompany.load({",
                    "            params: {",
                    "                what:'company',",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            scope:this",
                    "        });",
                    "        break;",
                    "}"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabDbfLgotaActivate",
            "designerId": "65abf2a9-066e-42d2-91ab-54de2d301958"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabSubsidia",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabSubsidiaActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "//console.log(stUser);",
                    "var StCompany = Ext.data.StoreManager.get(\"StCompany\");",
                    "",
                    "",
                    "var StSubsidia = Ext.data.StoreManager.get(\"StSubsidia\");",
                    "var dataNach = Ext.getCmp('dataNachSubsidia');",
                    "",
                    "var dt = new Date() ;",
                    "var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;",
                    "dataNach.setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "data = dataNach.getValue();",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var usluga_id = values.get('usluga_id');",
                    "var btnGetSubsidiaOshadBank =  Ext.getCmp('btnGetSubsidiaOshadBank');",
                    "var btnPrintSubsReestrFromOshadBank =  Ext.getCmp('btnPrintSubsReestrFromOshadBank');",
                    "var btnPrintSubsReestrToOshadBank =  Ext.getCmp('btnPrintSubsReestrToOshadBank');",
                    "var btnImportOshadBank =  Ext.getCmp('btnImportOshadBank');",
                    "var btnExportOshadBank =  Ext.getCmp('btnExportOshadBank');",
                    "var btnImportOplataOshad =  Ext.getCmp('btnImportOplataOshad');",
                    "var btnImportOplataYkis =  Ext.getCmp('btnImportOplataYkis');",
                    "var btnSubsidiaOtkat =  Ext.getCmp('btnSubsidiaOtkat');",
                    "",
                    "if (usluga_id){",
                    "    btnGetSubsidiaOshadBank.setDisabled(false);",
                    "    btnPrintSubsReestrFromOshadBank.setDisabled(false);",
                    "    btnPrintSubsReestrToOshadBank.setDisabled(false);",
                    "",
                    "    btnImportOshadBank.setDisabled(false);",
                    "    btnExportOshadBank.setDisabled(false);",
                    "    btnImportOplataOshad.setDisabled(false);",
                    "    btnImportOplataYkis.setDisabled(false);",
                    "    btnSubsidiaOtkat.setDisabled(false);",
                    "    StSubsidia.load({",
                    "        params: {",
                    "            what:'getSubsidia',",
                    "            data:data,",
                    "            usluga_id:values.get('usluga_id'),",
                    "            login:values.get('login'),",
                    "            password:values.get('password')",
                    "        }",
                    "    });",
                    "}",
                    ""
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabSubsidiaActivate",
            "designerId": "df9eeb34-3398-4e47-9714-18f4c93c9986"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grNachVoda",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrNachVodaSelectionChange",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StLgotaNachVoda = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var form = Ext.getCmp('tabFmAppVoda');",
                    "//console.log(selected[0].data.data);",
                    "",
                    "//var record = selected[0].data;",
                    "if (selected.length > 0) {",
                    "    form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);",
                    "    StLgotaNachVoda.load({",
                    "        params: {",
                    "            what:'LgotaNachVodaData',",
                    "            address_id: values.get('address_id'),",
                    "            data:Ext.Date.format(selected[0].data.data,\"Ymd\"),",
                    "            login:values.get('login'),",
                    "            password:values.get('password')",
                    "        },",
                    "        scope:this",
                    "    });",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrNachVodaSelectionChange",
            "designerId": "61ca29a2-666e-4158-9d35-150bcec5077d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grLgotaNachVoda",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrLgotaNachVodaSelectionChange",
                "implHandler": [
                    "var form = Ext.getCmp('tabFmAppVoda');",
                    "if (selected.length > 0) {",
                    "    form.getForm().findField('msq_lgota').setValue(selected[0].data.info);",
                    "",
                    "}",
                    ""
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrLgotaNachVodaSelectionChange",
            "designerId": "4a31a6f6-992f-4956-8dbd-bf314cc22117"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grNachStoki",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrNachStokiSelectionChange",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StLgotaNachVoda = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var form = Ext.getCmp('tabFmAppStoki');",
                    "if (selected.length > 0) {",
                    "    form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);",
                    "    StLgotaNachVoda.load({",
                    "        params: {",
                    "            what:'LgotaNachStokiData',",
                    "            address_id: values.get('address_id'),",
                    "            data:Ext.Date.format(selected[0].data.data,\"Ymd\"),",
                    "            login:values.get('login'),",
                    "            password:values.get('password')",
                    "        },",
                    "        scope:this",
                    "    });",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrNachStokiSelectionChange",
            "designerId": "25f13996-bd52-4e40-8b56-4fd69bab625d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grNachAvoda",
                "designer|params": [
                    "model",
                    "selected",
                    "eOpts"
                ],
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrNachAvodaSelectionChange",
                "implHandler": [
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var form = Ext.getCmp('tabFmAppAvoda');",
                    "if (selected.length > 0) {",
                    "    form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);",
                    "    ",
                    "}"
                ],
                "name": "selectionchange"
            },
            "name": "onGrNachAvodaSelectionChange",
            "designerId": "7cb16af3-eecf-4166-8ab1-378eca0d7bc7"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grLgotaNachStoki",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrLgotaNachStokiSelectionChange",
                "implHandler": [
                    "var form = Ext.getCmp('tabFmAppStoki');",
                    "if (selected.length > 0) {",
                    "    form.getForm().findField('msq_lgota').setValue(selected[0].data.info);",
                    "",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrLgotaNachStokiSelectionChange",
            "designerId": "93f05dc3-bf7b-4e25-8519-21a2152472d5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grNachPodogrev",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrNachPodogrevSelectionChange",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StLgotaNachVoda = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var form = Ext.getCmp('tabFmAppPodogrev');",
                    "if (selected.length > 0) {",
                    "    form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);",
                    "    StLgotaNachVoda.load({",
                    "        params: {",
                    "            what:'LgotaNachPodogrevData',",
                    "            address_id: values.get('address_id'),",
                    "            data:Ext.Date.format(selected[0].data.data,\"Ymd\"),",
                    "            login:values.get('login'),",
                    "            password:values.get('password')",
                    "        },",
                    "        scope:this",
                    "    });",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrNachPodogrevSelectionChange",
            "designerId": "55907ac7-1eb7-4508-a00c-82e07d6dea79"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grLgotaNachPodogrev",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrLgotaNachPodogrevSelectionChange",
                "implHandler": [
                    "var form = Ext.getCmp('tabFmAppPodogrev');",
                    "if (selected.length > 0) {",
                    "    form.getForm().findField('msq_lgota').setValue(selected[0].data.info);",
                    "",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrLgotaNachPodogrevSelectionChange",
            "designerId": "1a8e47c9-58fa-4306-b327-6b40e1fc2953"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grNachPtn",
                "designer|params": [
                    "model",
                    "selected",
                    "eOpts"
                ],
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrNachPtnSelectionChange",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StLgotaNachVoda = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var form = Ext.getCmp('tabFmAppPtn');",
                    "if (selected.length > 0) {",
                    "    form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);",
                    "    StLgotaNachVoda.load({",
                    "        params: {",
                    "            what:'LgotaNachPtnData',",
                    "            address_id: values.get('address_id'),",
                    "            data:Ext.Date.format(selected[0].data.data,\"Ymd\"),",
                    "            login:values.get('login'),",
                    "            password:values.get('password')",
                    "        },",
                    "        scope:this",
                    "    });",
                    "}"
                ],
                "name": "selectionchange"
            },
            "name": "onGrNachPtnSelectionChange",
            "designerId": "59f80b22-0117-464b-ad30-59276c57e81d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grNachOtoplenie",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrNachOtoplenieSelectionChange",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StLgotaNachVoda = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var form = Ext.getCmp('tabFmAppOtoplenie');",
                    "//console.log(selected[0]);",
                    "if (selected.length > 0) {",
                    "    form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);",
                    "    StLgotaNachVoda.load({",
                    "        params: {",
                    "            what:'LgotaNachOtoplenieData',",
                    "            address_id: values.get('address_id'),",
                    "            data:Ext.Date.format(selected[0].data.data,\"Ymd\"),",
                    "            login:values.get('login'),",
                    "            password:values.get('password')",
                    "        },",
                    "        scope:this",
                    "    });",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrNachOtoplenieSelectionChange",
            "designerId": "520b180d-b4e8-4e87-8217-d71c09b2e55b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grLgotaNachOtoplenie",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrLgotaNachOtoplenieSelectionChange",
                "implHandler": [
                    "var form = Ext.getCmp('tabFmAppOtoplenie');",
                    "if (selected.length > 0) {",
                    "    form.getForm().findField('msq_lgota').setValue(selected[0].data.info);",
                    "",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrLgotaNachOtoplenieSelectionChange",
            "designerId": "abb579b9-e8d7-4f3d-973b-d3679ae2fae1"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grNachTbo",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrNachTboSelectionChange",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StLgotaNachVoda = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var form = Ext.getCmp('tabFmAppTbo');",
                    "if (selected.length > 0) {",
                    "    form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);",
                    "    StLgotaNachVoda.load({",
                    "        params: {",
                    "            what:'LgotaNachTboData',",
                    "            address_id: values.get('address_id'),",
                    "            data:Ext.Date.format(selected[0].data.data,\"Ymd\"),",
                    "            login:values.get('login'),",
                    "            password:values.get('password')",
                    "        },",
                    "        scope:this",
                    "    });",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrNachTboSelectionChange",
            "designerId": "1ceb89a4-fdf5-438e-b370-66c926c4aae6"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grLgotaNachTbo",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrLgotaNachTboSelectionChange",
                "implHandler": [
                    "var form = Ext.getCmp('tabFmAppTbo');",
                    "if (selected.length > 0) {",
                    "    form.getForm().findField('msq_lgota').setValue(selected[0].data.info);",
                    "",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrLgotaNachTboSelectionChange",
            "designerId": "ea1fcad5-c6e7-4068-979b-10d849855453"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grNachKvartplata",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrNachKvartplataSelectionChange",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StLgotaNachVoda = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var form = Ext.getCmp('tabFmAppKvartplata');",
                    "if (selected.length > 0) {",
                    "    form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);",
                    "    StLgotaNachVoda.load({",
                    "        params: {",
                    "            what:'LgotaNachKvartplataData',",
                    "            address_id: values.get('address_id'),",
                    "            data:Ext.Date.format(selected[0].data.data,\"Ymd\"),",
                    "            login:values.get('login'),",
                    "            password:values.get('password')",
                    "        },",
                    "        scope:this",
                    "    });",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrNachKvartplataSelectionChange",
            "designerId": "1d5a88f7-712c-4c74-aecb-4e705cf9070a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grLgotaNachKvartplata",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrLgotaNachKvartplataSelectionChange",
                "implHandler": [
                    "var form = Ext.getCmp('tabFmAppKvartplata');",
                    "if (selected.length > 0) {",
                    "    form.getForm().findField('msq_lgota').setValue(selected[0].data.info);",
                    "",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrLgotaNachKvartplataSelectionChange",
            "designerId": "aca91640-b419-4f7b-b717-ad4ef1f46b51"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grTarifHousesKv",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrTarifHousesKvSelectionChange",
                "implHandler": [
                    "//STORE",
                    "",
                    "var stAddress = Ext.data.StoreManager.get('StAddressOrg');",
                    "var form = Ext.getCmp('fmKvartplata');",
                    "var btAddPererKv = Ext.getCmp('btAddPererKv');",
                    "var printRaspechatkaHouseAllMgkc = Ext.getCmp('printRaspechatkaHouseAllMgkc');",
                    "var printRaspechatkaHouse = Ext.getCmp('printRaspechatkaHouseMgkc');",
                    "",
                    "var viborTarif = Ext.getCmp('cbTarifKvartplata');",
                    "var btnNachHouse = Ext.getCmp('btnNachHouseKvartplata');",
                    "var btnNachHouseOsmd = Ext.getCmp('btnFixKvartplata');",
                    "",
                    "var tarif = Ext.getCmp('tarKvartplata');",
                    "",
                    "",
                    "",
                    "",
                    "var dt = new Date();",
                    "var lastDay = Ext.Date.getLastDateOfMonth( dt ) ;",
                    "var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;",
                    "",
                    "//console.log(selected);",
                    "if (selected.length > 0) {",
                    "    //form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);",
                    "    form.getForm().findField('house_id').setValue(selected[0].data.house_id);",
                    "    form.getForm().findField('data').setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "    form.getForm().findField('sdata').setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "    form.getForm().findField('fdata').setValue(Ext.Date.format(lastDay, 'Y-m-d'));",
                    "    form.getForm().findField('allkv').show();",
                    "    form.getForm().findField('address_ot').clearValue();",
                    "    form.getForm().findField('address_do').clearValue();",
                    "    printRaspechatkaHouseAllMgkc.setDisabled(false);",
                    "    printRaspechatkaHouse.setDisabled(false);",
                    "",
                    "    viborTarif.clearValue();",
                    "    viborTarif.setDisabled(false);",
                    "    btnNachHouse.setDisabled(false);",
                    "    btnNachHouseOsmd.setDisabled(false);",
                    "",
                    "    tarif.setValue(0);",
                    "",
                    "    stAddress.removeAll();",
                    "    stAddress.load({",
                    "        params: {",
                    "            what:'AddressFromHousesTarif',",
                    "            what_id: selected[0].data.house_id",
                    "        },",
                    "        callback: function(records,operation,success){",
                    "            if(success){",
                    "                form.getForm().findField('address_ot').setValue(records[0].get('address_id'));",
                    "                form.getForm().findField('address_do').setValue(records[0].get('address_id'));",
                    "            }",
                    "",
                    "        },",
                    "        scope:this",
                    "    });",
                    "",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrTarifHousesKvSelectionChange",
            "designerId": "881711d0-2bd7-4f74-a70d-858fc34d9860"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grTarifHousesTbo",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrTarifHousesTboSelectionChange",
                "implHandler": [
                    "//STORE",
                    "",
                    "var stAddress = Ext.data.StoreManager.get('StAddressOrg');",
                    "var form = Ext.getCmp('fmTbo');",
                    "var btAddPerer = Ext.getCmp('btAddPererTbo');",
                    "var viborTarif = Ext.getCmp('cbTarifTbo'); ",
                    "var btnNachHouse = Ext.getCmp('btnNachHouseTbo'); ",
                    "var tarif = Ext.getCmp('tarTbo'); ",
                    "",
                    "var dt = new Date();",
                    "var lastDay = Ext.Date.getLastDateOfMonth( dt ) ;",
                    "var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;",
                    "",
                    "//console.log(selected);",
                    "if (selected.length > 0) {",
                    "    //form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);",
                    "    form.getForm().findField('house_id').setValue(selected[0].data.house_id);",
                    "    form.getForm().findField('data').setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "    form.getForm().findField('sdata').setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "    form.getForm().findField('fdata').setValue(Ext.Date.format(lastDay, 'Y-m-d'));",
                    "    form.getForm().findField('address_ot').clearValue();",
                    "    form.getForm().findField('address_do').clearValue();",
                    "     viborTarif.clearValue();",
                    "    viborTarif.setDisabled(false);   ",
                    "    btnNachHouse.setDisabled(false);                 ",
                    "    tarif.setValue(0);  ",
                    "",
                    "    stAddress.removeAll(); ",
                    "    stAddress.load({",
                    "        params: {",
                    "            what:'AddressFromHousesTarif',",
                    "            what_id: selected[0].data.house_id",
                    "        },",
                    "        callback: function(records,operation,success){       ",
                    "            if(success){",
                    "                form.getForm().findField('address_ot').setValue(records[0].get('address_id'));",
                    "                form.getForm().findField('address_do').setValue(records[0].get('address_id'));",
                    "            }",
                    "",
                    "        },",
                    "        scope:this  ",
                    "    });",
                    "",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrTarifHousesTboSelectionChange",
            "designerId": "756dcdf6-fcbf-4a14-8793-a7030db892e0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grTarifHousesVoda",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrTarifHousesVodaSelectionChange",
                "implHandler": [
                    "//STORE",
                    "",
                    "var stAddress = Ext.data.StoreManager.get('StAddressOrg');",
                    "var form = Ext.getCmp('fmVoda');",
                    "var pnPerer = Ext.getCmp('pnPererVoda');",
                    "var btAddPerer = Ext.getCmp('btAddPererVoda');",
                    "var viborTarif = Ext.getCmp('cbTarifVoda');",
                    "var tarif = Ext.getCmp('tarVoda');",
                    "",
                    "var dt = new Date();",
                    "var lastDay = Ext.Date.getLastDateOfMonth( dt ) ;",
                    "var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;",
                    "",
                    "//console.log(selected);",
                    "if (selected.length > 0) {",
                    "    //form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);",
                    "    form.getForm().findField('house_id').setValue(selected[0].data.house_id);",
                    "    form.getForm().findField('data').setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "    form.getForm().findField('sdata').setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "    form.getForm().findField('fdata').setValue(Ext.Date.format(lastDay, 'Y-m-d'));",
                    "    form.getForm().findField('address_ot').clearValue();",
                    "    form.getForm().findField('address_do').clearValue();",
                    "    viborTarif.clearValue();",
                    "    viborTarif.setDisabled(false);",
                    "    tarif.setValue(0);",
                    "",
                    "    stAddress.removeAll();",
                    "    stAddress.load({",
                    "        params: {",
                    "            what:'AddressFromHousesTarif',",
                    "            what_id: selected[0].data.house_id",
                    "        },",
                    "        callback: function(records,operation,success){",
                    "            if(success){",
                    "                form.getForm().findField('address_ot').setValue(records[0].get('address_id'));",
                    "                form.getForm().findField('address_do').setValue(records[0].get('address_id'));",
                    "            }",
                    "",
                    "        },",
                    "        scope:this",
                    "    });",
                    "",
                    "}",
                    ""
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrTarifHousesVodaSelectionChange",
            "designerId": "19211c3f-7c9f-4c8b-8208-9ca9d8683a91"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grTarifHousesPodogrev",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrTarifHousesPodogrevSelectionChange",
                "implHandler": [
                    "//STORE",
                    "",
                    "var stAddress = Ext.data.StoreManager.get('StAddressOrg');",
                    "var form = Ext.getCmp('fmPodogrev');",
                    "var pnPerer = Ext.getCmp('pnPererPodogrev');",
                    "var btAddPerer = Ext.getCmp('btAddPererPodogrev');",
                    "var viborTarif = Ext.getCmp('cbTarifTeplo');",
                    "var btnNachHouse = Ext.getCmp('btnNachHousePtn');",
                    "var tarif = Ext.getCmp('tarTeplo');",
                    "",
                    "var dt = new Date();",
                    "var lastDay = Ext.Date.getLastDateOfMonth( dt ) ;",
                    "var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;",
                    "",
                    "//console.log(selected);",
                    "if (selected.length > 0) {",
                    "    //form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);",
                    "    form.getForm().findField('house_id').setValue(selected[0].data.house_id);",
                    "    form.getForm().findField('data').setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "    form.getForm().findField('sdata').setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "    form.getForm().findField('fdata').setValue(Ext.Date.format(lastDay, 'Y-m-d'));",
                    "    form.getForm().findField('address_ot').clearValue();",
                    "    form.getForm().findField('address_do').clearValue();",
                    "    viborTarif.clearValue();",
                    "    viborTarif.setDisabled(false);",
                    "    btnNachHouse.setDisabled(false);",
                    "    tarif.setValue(0);",
                    "",
                    "    stAddress.removeAll();",
                    "    stAddress.load({",
                    "        params: {",
                    "            what:'AddressFromHousesTarif',",
                    "            what_id: selected[0].data.house_id",
                    "        },",
                    "        callback: function(records,operation,success){",
                    "            if(success){",
                    "                form.getForm().findField('address_ot').setValue(records[0].get('address_id'));",
                    "                form.getForm().findField('address_do').setValue(records[0].get('address_id'));",
                    "            }",
                    "",
                    "        },",
                    "        scope:this",
                    "    });",
                    "",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrTarifHousesPodogrevSelectionChange",
            "designerId": "c0657b64-4ac9-4d80-a4a0-6614f51089ee"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btAddLgotaPerer",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtAddLgotaPererClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//CONTROLLER",
                    "var value = button.findParentByType('form').getValues();",
                    "//STORE",
                    "if (value.summa !== \"0\") {",
                    "    var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "    var values =stUser.getAt(0);",
                    "    var vibor = values.get('vibor');",
                    "    this.getWinAddLgotaPerer().close();",
                    "    switch (vibor){",
                    "        case 'addLgotaVodaPerer':",
                    "            me.addLgotaPererVoda(value);",
                    "            break;",
                    "        case 'addLgotaStokiPerer':",
                    "            me.addLgotaPererStoki(value);",
                    "            break;",
                    "        case 'addLgotaPtnPerer':",
                    "            me.addLgotaPererPtn(value);",
                    "            break;",
                    "        case 'addLgotaOtopleniePerer':",
                    "            me.addLgotaPererOtoplenie(value);",
                    "            break;",
                    "        case 'addLgotaKvartplataPerer':",
                    "            me.addLgotaPererKvartplata(value);",
                    "            break;",
                    "        case 'addLgotaTboPerer':",
                    "            me.addLgotaPererTbo(value);",
                    "            break;",
                    "        case 'addLgotaVoda':",
                    "            me.addLgotaVoda(value);",
                    "            break;",
                    "        case 'addLgotaStoki':",
                    "            me.addLgotaStoki(value);",
                    "            break;",
                    "        case 'addLgotaPodogrev':",
                    "            me.addLgotaPodogrev(value);",
                    "            break;",
                    "        case 'addLgotaOtoplenie':",
                    "            me.addLgotaOtoplenie(value);",
                    "            break;",
                    "        case 'addLgotaKvartplata':",
                    "            me.addLgotaKvartplata(value);",
                    "            break;",
                    "        case 'addLgotaTbo':",
                    "            me.addLgotaTbo(value);",
                    "            break;",
                    "        case 'addLgotaPtn':",
                    "            me.addLgotaPtn(value);",
                    "            break;",
                    "        case 'editLgotaVoda':",
                    "            me.editLgotaVoda(value);",
                    "            break;",
                    "        case 'editLgotaStoki':",
                    "            me.editLgotaStoki(value);",
                    "            break;",
                    "        case 'editLgotaPtn':",
                    "            me.editLgotaPtn(value);",
                    "            break;",
                    "        case 'editLgotaOtoplenie':",
                    "            me.editLgotaOtoplenie(value);",
                    "            break;",
                    "        case 'editLgotaKvartplata':",
                    "            me.editLgotaKvartplata(value);",
                    "            break;",
                    "        case 'editLgotaTbo':",
                    "            me.editLgotaTbo(value);",
                    "            break;",
                    "    }",
                    "} else {",
                    "    Ext.MessageBox.show({",
                    "        title: 'Контроль данных',",
                    "        msg: 'Введите правильную сумму',",
                    "        buttons: Ext.MessageBox.OK,",
                    "        icon: Ext.MessageBox.ERROR",
                    "    });",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtAddLgotaPererClick",
            "designerId": "3d2fa090-cc36-4142-a30e-8c999d079b24"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "addLgotaPererVoda",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNachApp = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var form = Ext.getCmp('tabFmAppVoda');",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:\"addLgotaPererVoda\"",
                    "};",
                    "",
                    "//GRID",
                    "var grNach = Ext.getCmp('grNachVoda');",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if(results.success===\"1\"){",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод перерасчета на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        StTekNachApp.load({",
                    "            params: {",
                    "                what:'VodaApp',",
                    "                address_id: values.get('address_id'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    grNach.getView().getSelectionModel().select(0);",
                    "",
                    "                }else{",
                    "                    form.getForm().reset();",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод перерасчета на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ]
            },
            "name": "addLgotaPererVoda",
            "designerId": "71515c89-bde7-44bd-9f06-a713ceb92e5c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "addLgotaPererStoki",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNachApp = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var form = Ext.getCmp('tabFmAppStoki');",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:\"addLgotaPererStoki\"",
                    "};",
                    "",
                    "//GRID",
                    "var grNach = Ext.getCmp('grNachStoki');",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if(results.success===\"1\"){ ",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод перерасчета на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        StTekNachApp.load({",
                    "            params: {",
                    "                what:'StokiApp',",
                    "                address_id: values.get('address_id'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            }, ",
                    "            callback: function(records,operation,success){       ",
                    "                if(success){",
                    "                    grNach.getView().getSelectionModel().select(0);        ",
                    "",
                    "                }else{",
                    "                    form.getForm().reset();",
                    "                }",
                    "            },",
                    "            scope:this  ",
                    "        });",
                    "",
                    "",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод перерасчета на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ]
            },
            "name": "addLgotaPererStoki",
            "designerId": "151a37d2-0e4a-4687-81ee-060db2c2d7ba"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "addLgotaPererPtn",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNachApp = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var form = Ext.getCmp('tabFmAppPtn');",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:\"addLgotaPererPtn\"",
                    "};",
                    "",
                    "//GRID",
                    "var grNach = Ext.getCmp('grNachPtn');",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if(results.success===\"1\"){",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод перерасчета на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        StTekNachApp.load({",
                    "            params: {",
                    "                what:'PtnApp',",
                    "                address_id: values.get('address_id'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    grNach.getView().getSelectionModel().select(0);",
                    "",
                    "                }else{",
                    "                    form.getForm().reset();",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод перерасчета на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ]
            },
            "name": "addLgotaPererPtn",
            "designerId": "e20dd958-6509-46b1-94fb-73ddac98debc"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "addLgotaPererOtoplenie",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNachApp = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var form = Ext.getCmp('tabFmAppOtoplenie');",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:\"addLgotaPererOtoplenie\"",
                    "};",
                    "",
                    "//GRID",
                    "var grNach = Ext.getCmp('grNachOtoplenie');",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if(results.success===\"1\"){ ",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод перерасчета на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        StTekNachApp.load({",
                    "            params: {",
                    "                what:'OtoplenieApp',",
                    "                address_id: values.get('address_id'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            }, ",
                    "            callback: function(records,operation,success){       ",
                    "                if(success){",
                    "                    grNach.getView().getSelectionModel().select(0);        ",
                    "",
                    "                }else{",
                    "                    form.getForm().reset();",
                    "                }",
                    "            },",
                    "            scope:this  ",
                    "        });",
                    "",
                    "",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод перерасчета на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ]
            },
            "name": "addLgotaPererOtoplenie",
            "designerId": "cedb71ac-25e7-4bea-a2a8-4bece531bd47"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "addLgotaPererKvartplata",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNachApp = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var form = Ext.getCmp('tabFmAppKvartplata');",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:\"addLgotaPererKvartplata\"",
                    "};",
                    "",
                    "//GRID",
                    "var grNach = Ext.getCmp('grNachKvartplata');",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if(results.success===\"1\"){ ",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод перерасчета на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        StTekNachApp.load({",
                    "            params: {",
                    "                what:'KvartplataApp',",
                    "                address_id: values.get('address_id'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            }, ",
                    "            callback: function(records,operation,success){       ",
                    "                if(success){",
                    "                    grNach.getView().getSelectionModel().select(0);        ",
                    "",
                    "                }else{",
                    "                    form.getForm().reset();",
                    "                }",
                    "            },",
                    "            scope:this  ",
                    "        });",
                    "",
                    "",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод перерасчета на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ]
            },
            "name": "addLgotaPererKvartplata",
            "designerId": "aac4c437-2402-4129-96df-284658e132c2"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "addLgotaPererTbo",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNachApp = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var form = Ext.getCmp('tabFmAppTbo');",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:\"addLgotaPererTbo\"",
                    "};",
                    "",
                    "//GRID",
                    "var grNach = Ext.getCmp('grNachTbo');",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if(results.success===\"1\"){ ",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод перерасчета на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        StTekNachApp.load({",
                    "            params: {",
                    "                what:'TboApp',",
                    "                address_id: values.get('address_id'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            }, ",
                    "            callback: function(records,operation,success){       ",
                    "                if(success){",
                    "                    grNach.getView().getSelectionModel().select(0);        ",
                    "",
                    "                }else{",
                    "                    form.getForm().reset();",
                    "                }",
                    "            },",
                    "            scope:this  ",
                    "        });",
                    "",
                    "",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод перерасчета на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ]
            },
            "name": "addLgotaPererTbo",
            "designerId": "04826ac2-cb0c-4f1c-8967-0bf806160c4a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "editLgotaVoda",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNachApp = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var form = Ext.getCmp('tabFmAppVoda');",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:\"editLgotaVoda\"",
                    "};",
                    "",
                    "//GRID",
                    "var grNach = Ext.getCmp('grNachVoda');",
                    "var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];",
                    "var ind  = grNach.getView().getStore().indexOf(valueNachisl);",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if(results.success===\"1\"){",
                    "        Ext.MessageBox.show({",
                    "            title: 'Редактирование записи  на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        StTekNachApp.load({",
                    "            params: {",
                    "                what:'VodaApp',",
                    "                address_id: values.get('address_id'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    grNach.getView().getSelectionModel().select(ind);",
                    "",
                    "                }else{",
                    "                    form.getForm().reset();",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Редактирование записи  на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ]
            },
            "name": "editLgotaVoda",
            "designerId": "67a63cc8-ec54-45ce-ac3d-8ac5741b4c88"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "editLgotaStoki",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNachApp = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var form = Ext.getCmp('tabFmAppStoki');",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:\"editLgotaStoki\"",
                    "};",
                    "",
                    "//GRID",
                    "var grNach = Ext.getCmp('grNachStoki');",
                    "var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];",
                    "var ind  = grNach.getView().getStore().indexOf(valueNachisl);",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if(results.success===\"1\"){",
                    "        Ext.MessageBox.show({",
                    "            title: 'Редактирование записи  на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        StTekNachApp.load({",
                    "            params: {",
                    "                what:'StokiApp',",
                    "                address_id: values.get('address_id'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    grNach.getView().getSelectionModel().select(ind);",
                    "",
                    "                }else{",
                    "                    form.getForm().reset();",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Редактирование записи  на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ]
            },
            "name": "editLgotaStoki",
            "designerId": "17487ecc-612f-4597-87ec-c0db2f4ff8b7"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "editLgotaPtn",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNachApp = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var form = Ext.getCmp('tabFmAppPtn');",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:\"editLgotaPtn\"",
                    "};",
                    "",
                    "//GRID",
                    "var grNach = Ext.getCmp('grNachPtn');",
                    "var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];",
                    "var ind  = grNach.getView().getStore().indexOf(valueNachisl);",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if(results.success===\"1\"){",
                    "        Ext.MessageBox.show({",
                    "            title: 'Редактирование записи  на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        StTekNachApp.load({",
                    "            params: {",
                    "                what:'PtnApp',",
                    "                address_id: values.get('address_id'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    grNach.getView().getSelectionModel().select(ind);",
                    "",
                    "                }else{",
                    "                    form.getForm().reset();",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Редактирование записи  на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ]
            },
            "name": "editLgotaPtn",
            "designerId": "51d90684-d908-4efb-b6ab-58c771021aa6"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "editLgotaOtoplenie",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNachApp = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var form = Ext.getCmp('tabFmAppOtoplenie');",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:\"editLgotaOtoplenie\"",
                    "};",
                    "",
                    "//GRID",
                    "var grNach = Ext.getCmp('grNachOtoplenie');",
                    "var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];",
                    "var ind  = grNach.getView().getStore().indexOf(valueNachisl);",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if(results.success===\"1\"){",
                    "        Ext.MessageBox.show({",
                    "            title: 'Редактирование записи  на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        StTekNachApp.load({",
                    "            params: {",
                    "                what:'OtoplenieApp',",
                    "                address_id: values.get('address_id'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    grNach.getView().getSelectionModel().select(ind);",
                    "",
                    "                }else{",
                    "                    form.getForm().reset();",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Редактирование записи  на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ]
            },
            "name": "editLgotaOtoplenie",
            "designerId": "61140566-6eeb-4def-b3f9-dd675e84583c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "editLgotaKvartplata",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNachApp = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var form = Ext.getCmp('tabFmAppKvartplata');",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:\"editLgotaKvartplata\"",
                    "};",
                    "",
                    "//GRID",
                    "var grNach = Ext.getCmp('grNachKvartplata');",
                    "var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];",
                    "var ind  = grNach.getView().getStore().indexOf(valueNachisl);",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if(results.success===\"1\"){",
                    "        Ext.MessageBox.show({",
                    "            title: 'Редактирование записи  на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        StTekNachApp.load({",
                    "            params: {",
                    "                what:'KvartplataApp',",
                    "                address_id: values.get('address_id'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    grNach.getView().getSelectionModel().select(ind);",
                    "",
                    "                }else{",
                    "                    form.getForm().reset();",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Редактирование записи  на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ]
            },
            "name": "editLgotaKvartplata",
            "designerId": "9adba167-e759-4a8c-9751-e155aef1b3fc"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "editLgotaTbo",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNachApp = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var form = Ext.getCmp('tabFmAppTbo');",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:\"editLgotaTbo\"",
                    "};",
                    "",
                    "//GRID",
                    "var grNach = Ext.getCmp('grNachTbo');",
                    "var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];",
                    "var ind  = grNach.getView().getStore().indexOf(valueNachisl);",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if(results.success===\"1\"){",
                    "        Ext.MessageBox.show({",
                    "            title: 'Редактирование записи  на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        StTekNachApp.load({",
                    "            params: {",
                    "                what:'TboApp',",
                    "                address_id: values.get('address_id'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    grNach.getView().getSelectionModel().select(ind);",
                    "",
                    "                }else{",
                    "                    form.getForm().reset();",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Редактирование записи  на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ]
            },
            "name": "editLgotaTbo",
            "designerId": "ead7daf0-da47-4188-b5cc-5a1a8c9b4498"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "addLgotaVoda",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNachApp = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var form = Ext.getCmp('tabFmAppVoda');",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:\"addLgotaVoda\"",
                    "};",
                    "",
                    "//GRID",
                    "var grNach = Ext.getCmp('grNachVoda');",
                    "var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];",
                    "var ind  = grNach.getView().getStore().indexOf(valueNachisl);",
                    "",
                    "//LOGIKA",
                    "Ext.Object.merge(value, params);",
                    "//console.log(value.ind);",
                    "",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if(results.success===\"1\"){",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод начисления на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        StTekNachApp.load({",
                    "            params: {",
                    "                what:'VodaApp',",
                    "                address_id: values.get('address_id'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    grNach.getView().getSelectionModel().select(ind);",
                    "",
                    "                }else{",
                    "                    form.getForm().reset();",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод начисления на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ]
            },
            "name": "addLgotaVoda",
            "designerId": "7fef3137-c49b-490e-ac36-e8b21a94a9cd"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "addLgotaStoki",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNachApp = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var form = Ext.getCmp('tabFmAppStoki');",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:\"addLgotaStoki\"",
                    "};",
                    "",
                    "//GRID",
                    "var grNach = Ext.getCmp('grNachStoki');",
                    "var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];",
                    "var ind  = grNach.getView().getStore().indexOf(valueNachisl);",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if(results.success===\"1\"){",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод начисления на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        StTekNachApp.load({",
                    "            params: {",
                    "                what:'StokiApp',",
                    "                address_id: values.get('address_id'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    grNach.getView().getSelectionModel().select(ind);",
                    "",
                    "                }else{",
                    "                    form.getForm().reset();",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод начисления на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ]
            },
            "name": "addLgotaStoki",
            "designerId": "0d11572a-86da-499a-9cee-a3936d5131e3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "addLgotaPodogrev",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNachApp = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var form = Ext.getCmp('tabFmAppPodogrev');",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:\"addLgotaPodogrev\"",
                    "};",
                    "",
                    "//GRID",
                    "var grNach = Ext.getCmp('grNachPodogrev');",
                    "var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];",
                    "var ind  = grNach.getView().getStore().indexOf(valueNachisl);",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if(results.success===\"1\"){",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод начисления на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        StTekNachApp.load({",
                    "            params: {",
                    "                what:'PodogrevApp',",
                    "                address_id: values.get('address_id'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    grNach.getView().getSelectionModel().select(ind);",
                    "",
                    "                }else{",
                    "                    form.getForm().reset();",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод начисления на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ]
            },
            "name": "addLgotaPodogrev",
            "designerId": "2904b1c6-a47e-456a-9149-2c7f78c503ca"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "addLgotaOtoplenie",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNachApp = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var form = Ext.getCmp('tabFmAppOtoplenie');",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:\"addLgotaOtoplenie\"",
                    "};",
                    "",
                    "//GRID",
                    "var grNach = Ext.getCmp('grNachOtoplenie');",
                    "var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];",
                    "var ind  = grNach.getView().getStore().indexOf(valueNachisl);",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if(results.success===\"1\"){",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод начисления на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        StTekNachApp.load({",
                    "            params: {",
                    "                what:'OtoplenieApp',",
                    "                address_id: values.get('address_id'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    grNach.getView().getSelectionModel().select(ind);",
                    "",
                    "                }else{",
                    "                    form.getForm().reset();",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод начисления на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ]
            },
            "name": "addLgotaOtoplenie",
            "designerId": "6713582e-08a7-4e79-ad35-49121884322f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "addLgotaKvartplata",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNachApp = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var form = Ext.getCmp('tabFmAppKvartplata');",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:\"addLgotaKvartplata\"",
                    "};",
                    "",
                    "//GRID",
                    "var grNach = Ext.getCmp('grNachKvartplata');",
                    "var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];",
                    "var ind  = grNach.getView().getStore().indexOf(valueNachisl);",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if(results.success===\"1\"){",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод начисления на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        StTekNachApp.load({",
                    "            params: {",
                    "                what:'KvartplataApp',",
                    "                address_id: values.get('address_id'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    grNach.getView().getSelectionModel().select(ind);",
                    "",
                    "                }else{",
                    "                    form.getForm().reset();",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод начисления на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ]
            },
            "name": "addLgotaKvartplata",
            "designerId": "607d8ece-14c1-410d-97a4-af7396d90e98"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "addLgotaTbo",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNachApp = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var form = Ext.getCmp('tabFmAppTbo');",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:\"addLgotaTbo\"",
                    "};",
                    "",
                    "//GRID",
                    "var grNach = Ext.getCmp('grNachTbo');",
                    "var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];",
                    "var ind  = grNach.getView().getStore().indexOf(valueNachisl);",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if(results.success===\"1\"){",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод начисления на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        StTekNachApp.load({",
                    "            params: {",
                    "                what:'TboApp',",
                    "                address_id: values.get('address_id'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    grNach.getView().getSelectionModel().select(ind);",
                    "",
                    "                }else{",
                    "                    form.getForm().reset();",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод начисления на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ]
            },
            "name": "addLgotaTbo",
            "designerId": "0b3f4e30-d04b-4979-a84a-8a0f64feb041"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "addLgotaPtn",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNachApp = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var form = Ext.getCmp('tabFmAppPtn');",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:\"addLgotaPtn\"",
                    "};",
                    "",
                    "//GRID",
                    "var grNach = Ext.getCmp('grNachPtn');",
                    "var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];",
                    "var ind  = grNach.getView().getStore().indexOf(valueNachisl);",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if(results.success===\"1\"){",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод начисления на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        StTekNachApp.load({",
                    "            params: {",
                    "                what:'PtnApp',",
                    "                address_id: values.get('address_id'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    grNach.getView().getSelectionModel().select(ind);",
                    "",
                    "                }else{",
                    "                    form.getForm().reset();",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод начисления на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ]
            },
            "name": "addLgotaPtn",
            "designerId": "a7e326aa-bd5e-4741-895a-4c56a3f60f07"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "importZarplataPort",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "//console.log(stUser);",
                    "",
                    "var StPort = Ext.data.StoreManager.get(\"StPort\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "",
                    "StPort.load({",
                    "    params: {",
                    "        what:'port',",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    }",
                    "});",
                    "",
                    ""
                ]
            },
            "name": "importZarplataPort",
            "designerId": "ed06d850-8185-49f2-8682-61a97f7fb465"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "WinAddLgotaPerer",
                "selector": "#winAddLgotaPerer",
                "xtype": null
            },
            "name": "WinAddLgotaPerer",
            "designerId": "27bfce0b-9f31-47c3-b988-c92bf4fa7afb"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btAddNachKv",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtAddNachKvClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    what:\"nachislenie_kvartplata\"",
                    "};",
                    "",
                    "",
                    "//LOGIKA",
                    "var myMask= Ext.Msg.show({",
                    "    title:'Начисление...',",
                    "    msg: 'Начисление квартплаты.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "",
                    "QueryAddress.updateRecords(params,function(results){",
                    "    if(results.success===\"1\"){",
                    "        myMask.close();",
                    "        Ext.MessageBox.show({",
                    "            title: 'Начисление квартплаты',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "    } else {",
                    "        myMask.close();",
                    "        Ext.MessageBox.show({",
                    "            title: 'Начисление квартплаты',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtAddNachKvClick",
            "designerId": "c13c8db3-e7d0-4b41-b23e-f8cfe8145e48"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btAddNachTbo",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtAddNachTboClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    what:\"nachislenie_tbo\"",
                    "};",
                    "",
                    "",
                    "//LOGIKA",
                    "",
                    "var myMask= Ext.Msg.show({",
                    "    title:'Начисление...',",
                    "    msg: 'Начисление ТБО.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "",
                    "QueryAddress.updateRecords(params,function(results){",
                    "    if(results.success===\"1\"){ ",
                    "        myMask.close();",
                    "        Ext.MessageBox.show({",
                    "            title: 'Начисление ТБО',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "    } else {",
                    "        myMask.close();",
                    "        Ext.MessageBox.show({",
                    "            title: 'Начисление ТБО',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtAddNachTboClick",
            "designerId": "eb0d41e7-531a-46fc-8f79-912329e78682"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btAddNachVoda",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtAddNachVodaClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    what:\"nachislenie_voda\"",
                    "};",
                    "",
                    "",
                    "//LOGIKA",
                    "",
                    "var myMask= Ext.Msg.show({",
                    "    title:'Начисление...',",
                    "    msg: 'Начисление по воде и стокам.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "",
                    "QueryAddress.updateRecords(params,function(results){",
                    "    if(results.success===\"1\"){ ",
                    "        myMask.close();",
                    "        Ext.MessageBox.show({",
                    "            title: 'Начисление Водоснабжения и Водоотведения',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "    } else {",
                    "        myMask.close();",
                    "        Ext.MessageBox.show({",
                    "            title: 'Начисление Водоснабжения и Водоотведения',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtAddNachVodaClick",
            "designerId": "316145dd-0de1-41e0-b240-5db485eb2a33"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btUpdKubNorma",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "MyButton81",
                "fn": "onBtUpdKubNormaClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "var value = button.findParentByType('form').getValues();",
                    "",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    data:value.data,",
                    "    what:\"update_kubov_norma\"",
                    "};",
                    "",
                    "",
                    "//LOGIKA",
                    "",
                    "var myMask= Ext.Msg.show({",
                    "    title:'Обновление кубов по норме...',",
                    "    msg: 'Обновление кубов по норме.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "",
                    "QueryAddress.updateRecords(params,function(results){",
                    "    if(results.success===\"1\"){",
                    "        myMask.close();",
                    "        Ext.MessageBox.show({",
                    "            title: 'Обновление кубов по норме',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "    } else {",
                    "        myMask.close();",
                    "        Ext.MessageBox.show({",
                    "            title: 'Обновление кубов по норме',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtUpdKubNormaClick",
            "designerId": "0ab40133-3a79-4ece-9b76-b693de68be9b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btAddPererKv",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtAddPererKvClick",
                "implHandler": [
                    "// in use",
                    "var value = button.findParentByType('form').getValues();",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "//LOGIN & PASSWORD",
                    "",
                    "",
                    "",
                    "//LOGIKA",
                    "var grid = Ext.getCmp('grTarifHousesKv');",
                    "//var store = grid.getStore();",
                    "var gridRowSelectedRecords  = grid.getView().getSelectionModel().getSelection();",
                    "var size = Ext.Object.getSize(gridRowSelectedRecords) ;",
                    "var values =stUser.getAt(0);",
                    "var params =[];",
                    "if (size > 1){",
                    "    params = {",
                    "        login:values.get('login'),",
                    "        password:values.get('password'),",
                    "        what:\"pereraschet_kvartplata\",",
                    "        allkv:value.allkv,",
                    "        tarif_manual:0,",
                    "        sdata:value.sdata,",
                    "        fdata:value.fdata,",
                    "        address_ot:value.address_ot,",
                    "        address_do:value.address_do,",
                    "        info:value.info",
                    "    };",
                    "} else {",
                    "",
                    "    params = {",
                    "        login:values.get('login'),",
                    "        password:values.get('password'),",
                    "        what:\"pereraschet_kvartplata\",",
                    "        allkv:value.allkv,",
                    "        tarif_manual:value.tarif_manual,",
                    "        ch_kv9:value.ch_kv9,",
                    "        ch_kv16:value.ch_kv16,",
                    "        ch_kv9f1:value.ch_kv9f1,",
                    "        ch_kv16f1:value.ch_kv16f1,",
                    "        sdata:value.sdata,",
                    "        fdata:value.fdata,",
                    "        address_ot:value.address_ot,",
                    "        address_do:value.address_do,",
                    "        info:value.info",
                    "    };",
                    "}",
                    "var house = \"\";",
                    "var myMask = Ext.Msg.show({",
                    "    title:'Перерасчет по квартплате',",
                    "    msg: 'Выполнение перерасчета.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "Ext.Object.each(gridRowSelectedRecords, function(key, val, myself) {",
                    "    Ext.Object.merge(val.data, params);",
                    "",
                    "    QueryAddress.updateRecords(val.data,function(results){",
                    "       // console.log(results);",
                    "",
                    "        if(results.success===\"1\"){",
                    "            myMask.close();",
                    "            ",
                    "            Ext.MessageBox.show({",
                    "                title: 'Перерасчет квартплаты',",
                    "                msg: \"Перерасчет квартплаты выполнен\",",
                    "                buttons: Ext.MessageBox.OK,",
                    "                icon: Ext.MessageBox.INFO",
                    "            });",
                    "        }  else {",
                    "            house =val.data.house;",
                    "            myMask.close();            ",
                    "            Ext.MessageBox.show({",
                    "                title: 'Перерасчет квартплаты ',",
                    "                msg: \"Перерасчет не выполнен по дому \"+ house ,",
                    "                buttons: Ext.MessageBox.OK,",
                    "                icon: Ext.MessageBox.ERROR",
                    "            });",
                    "            ",
                    "        }",
                    "    });",
                    "});",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtAddPererKvClick",
            "designerId": "4e11e70f-4d82-476c-b6e0-f8c10a3f0851"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btAddPererTbo",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtAddPererTboClick",
                "implHandler": [
                    "// in use",
                    "var value = button.findParentByType('form').getValues();",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "//LOGIN & PASSWORD",
                    "",
                    "",
                    "",
                    "//LOGIKA",
                    "var grid = Ext.getCmp('grTarifHousesTbo');",
                    "//var store = grid.getStore();",
                    "var gridRowSelectedRecords  = grid.getView().getSelectionModel().getSelection();",
                    "var values =stUser.getAt(0);",
                    "var size = Ext.Object.getSize(gridRowSelectedRecords) ;",
                    "var params =[];",
                    "if (size > 1){",
                    "    params = {",
                    "        login:values.get('login'),",
                    "        password:values.get('password'),",
                    "        what:\"pereraschet_tbo\",",
                    "        allkv:value.allkv,",
                    "        tarif_manual:0,",
                    "        sdata:value.sdata,",
                    "        fdata:value.fdata,",
                    "        address_ot:value.address_ot,",
                    "        address_do:value.address_do,",
                    "        info:value.info",
                    "    };",
                    "} else {",
                    "    params = {",
                    "        login:values.get('login'),",
                    "        password:values.get('password'),",
                    "        what:\"pereraschet_tbo\",",
                    "        allkv:value.allkv,",
                    "        tarif_manual:value.tarif_manual,",
                    "        ch_tbo:value.ch_tbo,",
                    "        sdata:value.sdata,",
                    "        fdata:value.fdata,",
                    "        address_ot:value.address_ot,",
                    "        address_do:value.address_do,",
                    "        info:value.info",
                    "    };",
                    "}",
                    "var res = false;",
                    "var house = \"\";",
                    "var myMask = Ext.Msg.show({",
                    "    title:'Перерасчет по ТБО',",
                    "    msg: 'Выполнение перерасчета.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "Ext.Object.each(gridRowSelectedRecords, function(key, val, myself) {",
                    "    Ext.Object.merge(val.data, params);",
                    "     QueryAddress.updateRecords(val.data,function(results){",
                    "       // console.log(results);",
                    "",
                    "        if(results.success===\"1\"){",
                    "            myMask.close();",
                    "",
                    "            Ext.MessageBox.show({",
                    "                title: 'Перерасчет тбо',",
                    "                msg: \"Перерасчет тбо выполнен\",",
                    "                buttons: Ext.MessageBox.OK,",
                    "                icon: Ext.MessageBox.INFO",
                    "            });",
                    "        }  else {",
                    "            house =val.data.house;",
                    "            myMask.close();",
                    "            Ext.MessageBox.show({",
                    "                title: 'Перерасчет тбо ',",
                    "                msg: \"Перерасчет не тбо по дому \"+ house ,",
                    "                buttons: Ext.MessageBox.OK,",
                    "                icon: Ext.MessageBox.ERROR",
                    "            });",
                    "",
                    "        }",
                    "    });",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtAddPererTboClick",
            "designerId": "0bf0efb3-7876-4885-975e-f2d080749bb7"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btAddPererVoda",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtAddPererVodaClick",
                "implHandler": [
                    "// in use",
                    "var value = button.findParentByType('form').getValues();",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "//LOGIN & PASSWORD",
                    "",
                    "",
                    "",
                    "//LOGIKA",
                    "var grid = Ext.getCmp('grTarifHousesVoda');",
                    "//var store = grid.getStore();",
                    "var gridRowSelectedRecords  = grid.getView().getSelectionModel().getSelection();",
                    "var size = Ext.Object.getSize(gridRowSelectedRecords) ;",
                    "var values =stUser.getAt(0);",
                    "var params =[];",
                    "if (size > 1){",
                    "    params = {",
                    "        login:values.get('login'),",
                    "        password:values.get('password'),",
                    "        what:\"pereraschet_voda_stoki\",",
                    "        allkv:value.allkv,",
                    "        tarif_manual:0,",
                    "        sdata:value.sdata,",
                    "        fdata:value.fdata,",
                    "        address_ot:value.address_ot,",
                    "        address_do:value.address_do,",
                    "        info:value.info",
                    "    };",
                    "} else {",
                    "",
                    "    params = {",
                    "        login:values.get('login'),",
                    "        password:values.get('password'),",
                    "        what:\"pereraschet_voda_stoki\",",
                    "        allkv:value.allkv,",
                    "        tarif_manual:value.tarif_manual,",
                    "        ch_xv9:value.ch_xv9,",
                    "        ch_xv16:value.ch_xv16,",
                    "        ch_st9:value.ch_st9,",
                    "        ch_st16:value.ch_st16,",
                    "        sdata:value.sdata,",
                    "        fdata:value.fdata,",
                    "        address_ot:value.address_ot,",
                    "        address_do:value.address_do,",
                    "        info:value.info",
                    "    };",
                    "}",
                    "",
                    "var res = false;",
                    "var house = \"\";",
                    "var myMask = Ext.Msg.show({",
                    "    title:'Перерасчет по воде и стокам',",
                    "    msg: 'Выполнение перерасчета.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "Ext.Object.each(gridRowSelectedRecords, function(key, val, myself) {",
                    "    Ext.Object.merge(val.data, params);",
                    "      QueryAddress.updateRecords(val.data,function(results){",
                    "       // console.log(results);",
                    "",
                    "        if(results.success===\"1\"){",
                    "            myMask.close();",
                    "",
                    "            Ext.MessageBox.show({",
                    "                title: 'Перерасчет по воде и стокам',",
                    "                msg: \"Перерасчет по воде и стокам выполнен\",",
                    "                buttons: Ext.MessageBox.OK,",
                    "                icon: Ext.MessageBox.INFO",
                    "            });",
                    "        }  else {",
                    "            house =val.data.house;",
                    "            myMask.close();",
                    "            Ext.MessageBox.show({",
                    "                title: 'Перерасчет по воде и стокам ',",
                    "                msg: \"Перерасчет не выполнен по дому \"+ house ,",
                    "                buttons: Ext.MessageBox.OK,",
                    "                icon: Ext.MessageBox.ERROR",
                    "            });",
                    "",
                    "        }",
                    "    });",
                    "});",
                    "",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtAddPererVodaClick",
            "designerId": "78e08127-41d7-456b-9610-2a9d61df8f9d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btAddPererPodogrev",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtAddPererPodogrevClick",
                "implHandler": [
                    "// in use",
                    "var value = button.findParentByType('form').getValues();",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "//LOGIN & PASSWORD",
                    "",
                    "",
                    "",
                    "//LOGIKA",
                    "var grid = Ext.getCmp('grTarifHousesPodogrev');",
                    "//var store = grid.getStore();",
                    "var gridRowSelectedRecords  = grid.getView().getSelectionModel().getSelection();",
                    "var size = Ext.Object.getSize(gridRowSelectedRecords) ;",
                    "var values =stUser.getAt(0);",
                    "var params =[];",
                    "if (size > 1){",
                    "    params = {",
                    "        login:values.get('login'),",
                    "        password:values.get('password'),",
                    "        what:\"pereraschet_podogrev\",",
                    "        allkv:value.allkv,",
                    "        tarif_manual:0,",
                    "        sdata:value.sdata,",
                    "        fdata:value.fdata,",
                    "        address_ot:value.address_ot,",
                    "        address_do:value.address_do,",
                    "        info:value.info",
                    "    };",
                    "} else {",
                    "",
                    "    params = {",
                    "        login:values.get('login'),",
                    "        password:values.get('password'),",
                    "        what:\"pereraschet_podogrev\",",
                    "        allkv:value.allkv,",
                    "        tarif_manual:value.tarif_manual,",
                    "        ch_gv9:value.ch_gv9,",
                    "        ch_gv16:value.ch_gv16,",
                    "        sdata:value.sdata,",
                    "        fdata:value.fdata,",
                    "        address_ot:value.address_ot,",
                    "        address_do:value.address_do,",
                    "        info:value.info",
                    "    };",
                    "}",
                    "//console.log(size);",
                    "",
                    "var res = 1;",
                    "var house = \"\";",
                    "var myMask = Ext.Msg.show({",
                    "    title:'Перерасчет по подогреву',",
                    "    msg: 'Выполнение перерасчета.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "Ext.Object.each(gridRowSelectedRecords, function(key, val, myself) {",
                    "    Ext.Object.merge(val.data, params);",
                    "    QueryAddress.updateRecords(val.data,function(results){",
                    "        // console.log(results);",
                    "",
                    "        if(results.success===\"1\"){",
                    "            myMask.close();",
                    "",
                    "            Ext.MessageBox.show({",
                    "                title: 'Перерасчет подогрев',",
                    "                msg: \"Перерасчет подогрев выполнен\",",
                    "                buttons: Ext.MessageBox.OK,",
                    "                icon: Ext.MessageBox.INFO",
                    "            });",
                    "        }  else {",
                    "            house =val.data.house;",
                    "            myMask.close();",
                    "            Ext.MessageBox.show({",
                    "                title: 'Перерасчет подогрев ',",
                    "                msg: \"Перерасчет не выполнен по дому \"+ house ,",
                    "                buttons: Ext.MessageBox.OK,",
                    "                icon: Ext.MessageBox.ERROR",
                    "            });",
                    "",
                    "        }",
                    "    });",
                    "});",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtAddPererPodogrevClick",
            "designerId": "111b1735-d692-4c45-9114-28a40c97d5a5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btExportBudjet",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtExportBudjetClick",
                "implHandler": [
                    "// in use",
                    "var value = button.findParentByType('form').getValues();",
                    "//var winExportLgota = Ext.ClassManager.instantiateByAlias('widget.winexportlgota');",
                    "var win = button.findParentByType('window');",
                    "var form = button.findParentByType('form');",
                    "var vibor = form.getForm().findField('vibor').getValue();",
                    "var what = \"ExportEmail\";",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    what:what,",
                    "",
                    "};",
                    "//console.log(value);",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "//LOGIKA",
                    "",
                    "var myMask = Ext.Msg.show({",
                    "    title:'Отправка почты...',",
                    "    msg: 'Отправка файла по Email.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "//console.log(value);",
                    "",
                    "QueryExport.exportToEmail(value,function(results){",
                    "    if(results.success){",
                    "        myMask.close();",
                    "        win.close();",
                    "        Ext.MessageBox.show({",
                    "            title: 'Отправка файла по Email',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "",
                    "    } else {",
                    "        myMask.close();",
                    "        win.close();",
                    "",
                    "        Ext.MessageBox.show({",
                    "            title: 'Отправка файла по Email',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "",
                    "    }",
                    "",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtExportBudjetClick",
            "designerId": "ecb5a5b7-e38d-4cdd-963f-9b8f5e7f8f70"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btControlLgot",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtControlLgotClick",
                "implHandler": [
                    "// in use",
                    "var value = button.findParentByType('form').getValues();",
                    "var tabPnCenter =  Ext.getCmp('tabPnCenter');",
                    "var report = 'controlLgot';",
                    "var namereport = 'Контроль льгот';",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var tab = tabPnCenter.child('#'+report);",
                    "if (!tab) {",
                    "    tab  = tabPnCenter.add({",
                    "        xtype:'tabReportOrg',",
                    "        title:namereport,",
                    "        id:''+report+''",
                    "    });",
                    "",
                    "}",
                    "var reppan = tab.getComponent(0);",
                    "tabPnCenter.setActiveTab(tab);",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    what:\"controlLgot\",",
                    "    report:report",
                    "};",
                    "",
                    "//LOGIKA",
                    "Ext.Object.merge(value, params);",
                    "",
                    "var myMask = Ext.Msg.show({",
                    "    title:'Отчеты...',",
                    "    msg: 'Загрузка отчета.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "",
                    "QueryReport.getResults(value,function(results){",
                    "    if (results.success===\"1\"){",
                    "        myMask.close();",
                    "        reppan.update(results.content);",
                    "        Ext.REPORTCONTENT =results.content;",
                    "        Ext.REPORTSQL =results.sql;",
                    "        Ext.REPORTTITLE =report;",
                    "    }else{",
                    "        myMask.close();",
                    "        Ext.MessageBox.show({title: namereport,",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "});",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtControlLgotClick",
            "designerId": "dcea6bce-e70e-45a6-b5d7-94458856b6d5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btControlDbfLgot",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtControlDbfLgotClick",
                "implHandler": [
                    "// in use",
                    "",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StDbfLgota = Ext.data.StoreManager.get(\"StDbfLgota\");",
                    "",
                    "//COMPONENT",
                    "var form = button.findParentByType('form');",
                    "var value = form.getValues();",
                    "",
                    "var tabPnCenter =  Ext.getCmp('tabPnCenter');",
                    "var tab = tabPnCenter.child('#tabDbfLgota');",
                    "var usluga =form.getForm().findField('rbUsluga').inputValue;",
                    "StDbfLgota.proxy.setExtraParam('what', usluga);",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    what:\"ExportBudjetEmail\"",
                    "};",
                    "//LOGIKA",
                    "Ext.Object.merge(value, params);",
                    "",
                    "var myMask = Ext.Msg.show({",
                    "    title:'Загрузка ДБФ файла',",
                    "    msg: 'Загрузка ДБФ файла со списком льготников.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "",
                    "",
                    "QueryAddress.updateRecords(value,function(result){",
                    "    if(result.success===\"1\"){ ",
                    "        StDbfLgota.load({",
                    "            params: {",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    if (!tab) {",
                    "                        tab  = tabPnCenter.add({",
                    "                            xtype:'tabDbfLgota'",
                    "                        });",
                    "",
                    "                    }",
                    "                    myMask.close();",
                    "                    tabPnCenter.setActiveTab(tab); ",
                    "",
                    "                }else {",
                    "                    myMask.close();",
                    "",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "    } else {",
                    "        myMask.close();",
                    "",
                    "        Ext.MessageBox.show({",
                    "            title: 'Загрузка ДБФ файла ',",
                    "            msg: result.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "",
                    "    }    ",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtControlDbfLgotClick",
            "designerId": "c64e3e19-dfb8-46ec-a019-95098e0d1dcd"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "WinEditOplata",
                "selector": "#winEditOplata",
                "xtype": null
            },
            "name": "WinEditOplata",
            "designerId": "b46e404d-4df5-4c5f-9b2b-dca6086f986b"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "WinEditDbfLgota",
                "selector": "#winEditDbfLgota",
                "xtype": null
            },
            "name": "WinEditDbfLgota",
            "designerId": "6bbdec8f-08ae-45fd-af3f-a033b9cdab96"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "winImport",
                "selector": "winImport",
                "xtype": "winimport"
            },
            "name": "winImport",
            "designerId": "669d7708-cad2-490a-aebf-f484054431e4"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "editOplataApp",
                "implHandler": [
                    "// in use",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StOplata = Ext.data.StoreManager.get(\"StOplata\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    what:\"editOplataApp\"",
                    "};",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if(results.success===\"1\"){",
                    "        Ext.MessageBox.show({",
                    "            title: 'Редактирование записи  по оплате',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        StOplata.load({",
                    "            params: {",
                    "                what:'OplataApp',",
                    "                address_id: values.get('address_id'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            scope:this",
                    "        });",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Редактирование записи  по оплате',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});",
                    ""
                ]
            },
            "name": "editOplataApp",
            "designerId": "8d5a085a-a265-4ddb-82dd-c89487a713c3"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btFixDolg",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtFixDolgClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var value = button.findParentByType('form').getValues();",
                    "//console.log(value);",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    what:\"fixDolgTeplo\",",
                    "    fdata:value.fixdata",
                    "",
                    "};",
                    "",
                    "",
                    "//LOGIKA",
                    "",
                    "var myMask= Ext.Msg.show({",
                    "    title:'Фиксация задолженности...',",
                    "    msg: 'Фиксация задолженности.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "",
                    "QueryAddress.updateRecords(params,function(results){",
                    "    if(results.success===\"1\"){",
                    "        myMask.close();",
                    "        Ext.MessageBox.show({",
                    "            title: 'Фиксация задолженности',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "    } else {",
                    "        myMask.close();",
                    "        Ext.MessageBox.show({",
                    "            title: 'Фиксация задолженности',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtFixDolgClick",
            "designerId": "43d70eb9-9cf8-48ba-9187-f5489cab74df"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btEditOplata",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "MyButton163",
                "fn": "onBtEditOplataClick",
                "implHandler": [
                    "/// in use",
                    "//CONTROLLER",
                    "var value = button.findParentByType('form').getValues();",
                    "var form = button.findParentByType('form');",
                    "var oplata = 0;",
                    "var kvartplata = form.getForm().findField('kvartplata').getValue();",
                    "var remont = form.getForm().findField('remont').getValue();",
                    "",
                    "var otoplenie = form.getForm().findField('otoplenie').getValue();",
                    "var ptn = form.getForm().findField('ptn').getValue();",
                    "",
                    "var podogrev = form.getForm().findField('podogrev').getValue();",
                    "var voda = form.getForm().findField('voda').getValue();",
                    "var stoki = form.getForm().findField('stoki').getValue();",
                    "var tbo = form.getForm().findField('tbo').getValue();",
                    "var summa = parseFloat(form.getForm().findField('summa').getValue()).toFixed(2);",
                    "oplata =parseFloat(kvartplata + remont+ otoplenie + ptn +  podogrev + voda + stoki + tbo).toFixed(2);",
                    "//console.log(summa);",
                    "//console.log(oplata);",
                    "",
                    "if(summa === oplata) {",
                    "    if (summa !== \"0\") {",
                    "        var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "        var values =stUser.getAt(0);",
                    "        var vibor = values.get('vibor');",
                    "        this.getWinEditOplata().close();",
                    "        this.editOplataApp(value);",
                    "",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Контроль данных',",
                    "            msg: 'Оплата равна 0',",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "} else {",
                    "    Ext.MessageBox.show({",
                    "        title: 'Контроль данных',",
                    "        msg: 'Не совпадают правая и левая части оплаты',",
                    "        buttons: Ext.MessageBox.OK,",
                    "        icon: Ext.MessageBox.ERROR",
                    "    });",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtEditOplataClick",
            "designerId": "38d8a67d-9d94-4090-aefa-40fe3e434ab8"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btNachiKreditOplata",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtNachiKredittOplataClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var value = button.findParentByType('form').getValues();",
                    "//console.log(value);",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    what:\"NachOplataKredit\",",
                    "    fdata:value.data",
                    "",
                    "};",
                    "",
                    "",
                    "//LOGIKA",
                    "",
                    "var myMask= Ext.Msg.show({",
                    "    title:'Начисление рассрочки...',",
                    "    msg: 'Начисление рассрочки.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "",
                    "QueryAddress.updateRecords(params,function(results){",
                    "    if(results.success===\"1\"){",
                    "        myMask.close();",
                    "        Ext.MessageBox.show({",
                    "            title: 'Начисление рассрочки',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "    } else {",
                    "        myMask.close();",
                    "        Ext.MessageBox.show({",
                    "            title: 'Начисление рассрочки',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ],
                "name": "click"
            },
            "name": "onBtNachiKredittOplataClick",
            "designerId": "5b8eb1a0-125b-43dd-b7ec-6244317587af"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btEditDbfLgota",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtEditDbfLgotaClick",
                "implHandler": [
                    "var value = button.findParentByType('form').getValues();",
                    "var dataNachDbfLgota = Ext.getCmp('dataNachDbfLgota');",
                    "var StDbfLgota = Ext.data.StoreManager.get(\"StDbfLgota\");",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var vibor = value.vibor;",
                    "var org_id =values.get('org_id');",
                    "",
                    "",
                    "this.getWinEditDbfLgota().close();",
                    "var what = \"editDbfLgota\";",
                    "",
                    "switch (vibor) {",
                    "    case \"add\":",
                    "        what = \"addDbfLgota\";",
                    "        break;",
                    "    case \"edit\":",
                    "        what =\"editDbfLgota\";",
                    "}",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    org_id:org_id,",
                    "    what:what",
                    "};",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if(results.success===\"1\"){",
                    "        Ext.MessageBox.show({",
                    "            title: 'Редактирование записи  по оплате',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        StDbfLgota.load({",
                    "            params: {",
                    "                login:values.get('login'),",
                    "                password:values.get('password'),",
                    "                data:dataNachDbfLgota.getValue(),",
                    "                org_id:org_id,",
                    "                what:\"getDbfLgota\"",
                    "                ",
                    "            },",
                    "            scope:this",
                    "        });",
                    "        ",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Редактирование записи  по льготе',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "    ",
                    "                });"
                ],
                "name": "click"
            },
            "name": "onBtEditDbfLgotaClick",
            "designerId": "f2cd7325-40bf-451f-8abc-964f464e4079"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btAddNachPtn",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtAddNachPtnClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    what:\"nachislenie_ptn\"",
                    "};",
                    "",
                    "",
                    "//LOGIKA",
                    "",
                    "var myMask= Ext.Msg.show({",
                    "    title:'Начисление...',",
                    "    msg: 'Начисление ПТН.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "",
                    "QueryAddress.updateRecords(params,function(results){",
                    "    if(results.success===\"1\"){",
                    "        myMask.close();",
                    "        Ext.MessageBox.show({",
                    "            title: 'Начисление ПТН',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "    } else {",
                    "        myMask.close();",
                    "        Ext.MessageBox.show({",
                    "            title: 'Начисление ПТН',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ],
                "name": "click"
            },
            "name": "onBtAddNachPtnClick",
            "designerId": "e86e1d0e-8577-4681-9311-95c80842ae43"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#printDogRestrVoda",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.button.Button",
                "fn": "onPrintDogRestrVodaClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stDogovor = Ext.data.StoreManager.get(\"StDogovor\");",
                    "//var stAppartment = Ext.data.StoreManager.get(\"StAppartment\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:values.get('vibor')",
                    "};",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if (results.success==='1'){",
                    "",
                    "        stDogovor.removeAll();",
                    "        stDogovor.load({",
                    "            params: {",
                    "                dog_id:value.dog_id,",
                    "                address_id: value.address_id,",
                    "                what:'getDogovorRestrVik',",
                    "                login:value.login,",
                    "                password:value.password",
                    "            },",
                    "                        scope:this",
                    "",
                    "        });",
                    "         Ext.MessageBox.show({",
                    "            title: 'Договора',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        me.onTabAppBtiActivate();",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Договора',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "});",
                    ""
                ],
                "name": "click"
            },
            "name": "onPrintDogRestrVodaClick",
            "designerId": "f77ed325-0bfe-4839-8640-a7dd00e09936"
        }
    ]
}