{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": "CrDTeplomer",
        "designer|userClassName": "CrDTeplomer",
        "views": [
            "sprav.WinAddDTeplomer",
            "sprav.WinAddAktClaim"
        ]
    },
    "designerId": "f69615ea-5f7e-4b0a-9062-78e234259515",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabDteplomer",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabDteplomerActivate",
                "implHandler": [
                    "//CONTROLLER",
                    "",
                    "var CrLeftMenu = this.application.getController('CrLeftMenu');",
                    "//console.log(1);",
                    "CrLeftMenu.LoadTabDteplomer();",
                    ""
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabDteplomerActivate",
            "designerId": "4105572c-01db-4213-b390-d7e818a7e814"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#delTekPokDteplomera",
                "designer|targetType": "Ext.button.Button",
                "fn": "onDelTekPokDteplomeraClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StHeatHouse = Ext.data.StoreManager.get(\"StHeatHouse\");//QueryTeplomer.getResults",
                    "var StAllPokDTeplomera = Ext.data.StoreManager.get(\"StAllPokDTeplomera\");//QueryTeplomer.getResults  <AllPokDTeplomera>",
                    "var StTekPokDTeplomera = Ext.data.StoreManager.get(\"StTekPokDTeplomera\");//QueryTeplomer.getResults <TekPokDTeplomera>",
                    "var StOrgByDteplomer = Ext.data.StoreManager.get(\"StOrgByDteplomer\");//QueryTeplomer.getResults",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    house_id:values.get('house_id'),",
                    "    what:\"Dteplomer\"",
                    "};",
                    "",
                    "//FORMA",
                    "//var fmHeatHouse = Ext.getCmp('fmHeatHouse');",
                    "var fmDTeplomers = Ext.getCmp('fmDTeplomers');",
                    "var value = fmDTeplomers.getValues();",
                    "//LOGIKA",
                    "",
                    "//console.log(value);",
                    "Ext.Object.merge(value, params);",
                    "//console.log(value);",
                    "Ext.MessageBox.confirm({",
                    "    title: 'Удаление последних показаний счетчика воды',",
                    "    msg: 'Вы удаляете последнее показание по счетчику <br>Показание<b>'+value.tek+",
                    "    '</b><br>Подтвердите или отмените свои действия.',",
                    "    buttons: Ext.MessageBox.OKCANCEL,",
                    "    icon: Ext.MessageBox.ERROR,",
                    "    buttonText:{",
                    "        ok:'подтвеждаю',",
                    "        cancel:'отмена'",
                    "    },",
                    "    fn:function(btn,newValue){",
                    "        if(btn=='ok'){",
                    "            QueryTeplomer.delPokTeplomera(value,function(results){",
                    "                if (results.success !=='0'){",
                    "                    Ext.MessageBox.show({title: 'Удаление последних показаний ',",
                    "                                         msg: results.msg,",
                    "                                         buttons: Ext.MessageBox.OK,",
                    "                                         icon: Ext.MessageBox.INFO",
                    "                                        });",
                    "                    fmDTeplomers.down('#newPokDTeplomera').setValue(0);",
                    "                    fmDTeplomers.down('#newPokDTeplomera').focus();",
                    "                    StAllPokDTeplomera.removeAll();",
                    "                    StTekPokDTeplomera.removeAll();",
                    "                    StOrgByDteplomer.removeAll();",
                    "                    StTekPokDTeplomera.load({",
                    "                        params: {",
                    "                            what:'TekPokDTeplomera',",
                    "                            dteplomer_id: value.dteplomer_id,",
                    "                            login:value.login,",
                    "                            password:value.password",
                    "                        },",
                    "                        callback: function(records,operation,success){",
                    "                            if((success) && (records.length)){",
                    "                                fmDTeplomers.getForm().loadRecord(records[0]);",
                    "                                fmDTeplomers.doLayout();",
                    "                                StAllPokDTeplomera.load({",
                    "                                    params: {",
                    "                                        what:'AllPokDTeplomera',",
                    "                                        dteplomer_id: value.dteplomer_id,",
                    "                                        login:value.login,",
                    "                                        password:value.password",
                    "                                    },",
                    "                                    scope:this",
                    "                                });",
                    "                                StOrgByDteplomer.load({",
                    "                                    params: {",
                    "                                        login:value.login,",
                    "                                        password:value.password,",
                    "                                        house_id:value.house_id,",
                    "                                        what_id:value.dteplomer_id,",
                    "                                        data:records[0].data.data,",
                    "                                        dteplomer_id:value.dteplomer_id",
                    "                                    },",
                    "                                    scope:this",
                    "                                });",
                    "                                StHeatHouse.load({",
                    "                                    params: {",
                    "                                        house_id:value.house_id,",
                    "                                        what:'TekPokHeatHouse',",
                    "                                        data:records[0].data.data,",
                    "                                        dteplomer_id: value.dteplomer_id,",
                    "                                        login:value.login,",
                    "                                        password:value.password",
                    "                                    },",
                    "                                    callback: function(rec,operation,success){",
                    "                                        if((success) && (rec.length)){",
                    "                                           // fmHeatHouse.getForm().loadRecord(rec[0]);",
                    "                                        }",
                    "                                    },",
                    "                                    scope:this",
                    "                                });",
                    "                            }",
                    "                        },",
                    "                        scope:this",
                    "                    });",
                    "",
                    "                }else{",
                    "                    Ext.MessageBox.show({title: 'Удаление последних показаний счетчика',",
                    "                                         msg: results.msg,",
                    "                                         buttons: Ext.MessageBox.OK,",
                    "                                         icon: Ext.MessageBox.ERROR",
                    "                                        });",
                    "                }",
                    "            });",
                    "        }",
                    "    }",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onDelTekPokDteplomeraClick",
            "designerId": "9ca3fd8e-43bb-49de-abe1-e56bcb687271"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#insTekPokDTeplomer",
                "designer|targetType": "Ext.button.Button",
                "fn": "onInsTekPokDteplomerClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StHeatHouse = Ext.data.StoreManager.get(\"StHeatHouse\");//QueryTeplomer.getResults",
                    "var StAllPokDTeplomera = Ext.data.StoreManager.get(\"StAllPokDTeplomera\");//QueryTeplomer.getResults  <AllPokDTeplomera>",
                    "var StTekPokDTeplomera = Ext.data.StoreManager.get(\"StTekPokDTeplomera\");//QueryTeplomer.getResults <TekPokDTeplomera>",
                    "var StOrgByDteplomer = Ext.data.StoreManager.get(\"StOrgByDteplomer\");//QueryTeplomer.getResults",
                    "var StMop = Ext.data.StoreManager.get(\"StMop\");//QueryTeplomer.getResults",
                    "",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    house_id:values.get('house_id'),",
                    "    what:\"Dteplomer\"",
                    "};",
                    "",
                    "//FORMA",
                    "//var fmHeatHouse = Ext.getCmp('fmHeatHouse');",
                    "var fmDTeplomers = Ext.getCmp('fmDTeplomers');",
                    "var value = fmDTeplomers.getValues();",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "var newValue = value.newValue;",
                    "var max =newValue - value.tek;",
                    "if (isNaN(newValue)){",
                    "    Ext.MessageBox.show({",
                    "        title: 'Проверка вводимых данных',",
                    "        msg: 'Введите число',",
                    "        buttons: Ext.MessageBox.OK,",
                    "        icon: Ext.MessageBox.ERROR",
                    "    });",
                    "    return false;",
                    "}else if (max<0){",
                    "    Ext.MessageBox.show({",
                    "        title: 'Проверка вводимых данных',",
                    "        msg: 'Текущие показания <b>'+value.tek+'</b><br>Новые показания <b>'+newValue+'</b><br>Введите правильные показания !.',",
                    "        buttons: Ext.MessageBox.CANCEL,",
                    "        icon: Ext.MessageBox.ERROR,",
                    "        buttonText:{",
                    "            cancel:'отмена'",
                    "        },",
                    "        fn:function(btn,newValue){",
                    "            if(btn=='cancel'){",
                    "                fmDTeplomers.down('#newPokDTeplomera').setValue(0);",
                    "                fmDTeplomers.down('#newPokDTeplomera').focus();",
                    "                return false;",
                    "            }",
                    "        }",
                    "    });",
                    "}  else {",
                    "    // Basic mask:",
                    "    var myMask= Ext.Msg.show({",
                    "        title:'Начисление...',",
                    "        msg: 'Начисление ГВС.Ожидайте...',",
                    "        buttons: Ext.Msg.CANCEL,",
                    "        wait: true,",
                    "        modal: true,",
                    "        icon: Ext.Msg.INFO",
                    "    });",
                    "",
                    "    QueryTeplomer.newPokTeplomera(value,function(data){",
                    "        Ext.MessageBox.confirm({",
                    "            title: 'Проверка вводимых данных',",
                    "            msg:data.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        if (data.success){",
                    "            //console.log(data.success);",
                    "            fmDTeplomers.down('#newPokDTeplomera').setValue(0);",
                    "            StTekPokDTeplomera.load({",
                    "                params: {",
                    "                    what:'TekPokDTeplomera',",
                    "                    dteplomer_id: value.dteplomer_id,",
                    "                    login:value.login,",
                    "                    password:value.password",
                    "                },",
                    "                callback: function(records,operation,success){",
                    "                    if(success){",
                    "                        fmDTeplomers.getForm().loadRecord(records[0]);",
                    "                        StAllPokDTeplomera.load({",
                    "                            params: {",
                    "                                house_id:records[0].data.house_id,",
                    "                                what:'AllPokDTeplomera',",
                    "                                login:value.login,",
                    "                                password:value.password,",
                    "                                dteplomer_id:value.dteplomer_id",
                    "                            },",
                    "                            scope:this",
                    "                        });",
                    "                        StOrgByDteplomer.load({",
                    "                            params: {",
                    "                                login:value.login,",
                    "                                password:value.password,",
                    "                                data:records[0].data.data,",
                    "                                house_id:records[0].data.house_id,",
                    "                                what_id:value.dteplomer_id,",
                    "                                dteplomer_id:value.dteplomer_id",
                    "                            },",
                    "                            scope:this",
                    "                        });",
                    "                        StMop.removeAll();",
                    "                        StMop.load({",
                    "                            params: {",
                    "                                login:value.login,",
                    "                                password:value.password,",
                    "                                data:records[0].data.data,",
                    "                                house_id:records[0].data.house_id,",
                    "                                what_id:value.dteplomer_id,",
                    "                                dteplomer_id:value.dteplomer_id",
                    "                            },",
                    "                            scope:this",
                    "                        });",
                    "                        StHeatHouse.load({",
                    "                            params: {",
                    "                                house_id:records[0].data.house_id,",
                    "                                what:'TekPokHeatHouse',",
                    "                                login:value.login,",
                    "                                password:value.password,",
                    "                                data:records[0].data.data,",
                    "                                dteplomer_id:value.dteplomer_id",
                    "                            },",
                    "                            callback: function(rec,operation,success){",
                    "                                if((success) && (rec.length)){",
                    "                                    //console.log(rec[0].data);",
                    "                                    //fmHeatHouse.getForm().loadRecord(rec[0]);",
                    "                                }",
                    "                            },",
                    "                            scope:this",
                    "                        });",
                    "                    }",
                    "                },",
                    "                scope:this",
                    "            });",
                    "",
                    "        }",
                    "    });",
                    "    myMask.hide();",
                    "}",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onInsTekPokDteplomerClick",
            "designerId": "6ebade98-59d4-4c3e-a5dd-d517cfce125a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#insGkalDTeplomer",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.button.Button",
                "fn": "onInsGkalDTeplomerClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StHeatHouse = Ext.data.StoreManager.get(\"StHeatHouse\");//QueryTeplomer.getResults",
                    "var StAllPokDTeplomera = Ext.data.StoreManager.get(\"StAllPokDTeplomera\");//QueryTeplomer.getResults  <AllPokDTeplomera>",
                    "var StTekPokDTeplomera = Ext.data.StoreManager.get(\"StTekPokDTeplomera\");//QueryTeplomer.getResults <TekPokDTeplomera>",
                    "var StOrgByDteplomer = Ext.data.StoreManager.get(\"StOrgByDteplomer\");//QueryTeplomer.getResults",
                    "var StMop = Ext.data.StoreManager.get(\"StMop\");//QueryTeplomer.getResults",
                    "",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    house_id:values.get('house_id'),",
                    "    what:\"HeatHouse\"",
                    "};",
                    "",
                    "//FORMA",
                    "//var fmHeatHouse = Ext.getCmp('fmHeatHouse');",
                    "var fmDTeplomers = Ext.getCmp('fmDTeplomers');",
                    "var value = fmDTeplomers.getValues();",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "var newValue = value.newValue;",
                    "if (isNaN(newValue)){",
                    "    Ext.MessageBox.show({",
                    "        title: 'Проверка вводимых данных',",
                    "        msg: 'Введите число',",
                    "        buttons: Ext.MessageBox.OK,",
                    "        icon: Ext.MessageBox.ERROR",
                    "    });",
                    "    return false;",
                    "",
                    "}  else {",
                    "    // Basic mask:",
                    "    var myMask= Ext.Msg.show({",
                    "        title:'Начисление...',",
                    "        msg: 'Начисление .Ожидайте...',",
                    "        buttons: Ext.Msg.CANCEL,",
                    "        wait: true,",
                    "        modal: true,",
                    "        icon: Ext.Msg.INFO",
                    "    });",
                    "",
                    "    QueryTeplomer.newPokTeplomera(value,function(data){",
                    "        Ext.MessageBox.confirm({",
                    "            title: 'Проверка вводимых данных',",
                    "            msg:data.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        if (data.success){",
                    "            //console.log(data.success);",
                    "            fmDTeplomers.down('#newPokDTeplomera').setValue(0);",
                    "            StTekPokDTeplomera.load({",
                    "                params: {",
                    "                    what:'TekPokDTeplomera',",
                    "                    dteplomer_id: value.dteplomer_id,",
                    "                    login:value.login,",
                    "                    password:value.password",
                    "                },",
                    "                callback: function(records,operation,success){",
                    "                    if(success){",
                    "                        fmDTeplomers.getForm().loadRecord(records[0]);",
                    "                        StAllPokDTeplomera.load({",
                    "                            params: {",
                    "                                house_id:records[0].data.house_id,",
                    "                                what:'AllPokDTeplomera',",
                    "                                login:value.login,",
                    "                                password:value.password,",
                    "                                dteplomer_id:value.dteplomer_id",
                    "                            },",
                    "                            scope:this",
                    "                        });",
                    "                        StOrgByDteplomer.load({",
                    "                            params: {",
                    "                                login:value.login,",
                    "                                password:value.password,",
                    "                                data:records[0].data.data,",
                    "                                house_id:records[0].data.house_id,",
                    "                                what_id:value.dteplomer_id,",
                    "                                dteplomer_id:value.dteplomer_id",
                    "                            },",
                    "                            scope:this",
                    "                        });",
                    "                        StMop.removeAll();",
                    "                        StMop.load({",
                    "                            params: {",
                    "                                login:value.login,",
                    "                                password:value.password,",
                    "                                data:records[0].data.data,",
                    "                                house_id:records[0].data.house_id,",
                    "                                what_id:value.dteplomer_id,",
                    "                                dteplomer_id:value.dteplomer_id",
                    "                            },",
                    "                            scope:this",
                    "                        });",
                    "                        StHeatHouse.load({",
                    "                            params: {",
                    "                                house_id:records[0].data.house_id,",
                    "                                what:'TekPokHeatHouse',",
                    "                                login:value.login,",
                    "                                password:value.password,",
                    "                                data:records[0].data.data,",
                    "                                dteplomer_id:value.dteplomer_id",
                    "                            },",
                    "                            callback: function(rec,operation,success){",
                    "                                if((success) && (rec.length)){",
                    "",
                    "                                }",
                    "                            },",
                    "                            scope:this",
                    "                        });",
                    "                    }",
                    "                },",
                    "                scope:this",
                    "            });",
                    "",
                    "        }",
                    "    });",
                    "    myMask.hide();",
                    "}",
                    ""
                ],
                "name": "click"
            },
            "name": "onInsGkalDTeplomerClick",
            "designerId": "8caeac72-709c-4627-bb86-42d0951d0327"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#insNachOtoplenieSquare",
                "designer|targetType": "Ext.button.Button",
                "fn": "onInsNachOtoplenieSquareClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StHeatHouse = Ext.data.StoreManager.get(\"StHeatHouse\");//QueryTeplomer.getResults",
                    "var StOrgByDteplomer = Ext.data.StoreManager.get(\"StOrgByDteplomer\");//QueryTeplomer.getResults",
                    "var StMop = Ext.data.StoreManager.get(\"StMop\");//QueryTeplomer.getResults",
                    "",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    house_id:values.get('house_id'),",
                    "    login:values.get('login'),",
                    "    dteplomer_id:values.get('dteplomer_id'),",
                    "    password:values.get('password'),",
                    "    what:\"NachOtoplenieSquare\"",
                    "};",
                    "",
                    "//FORMA",
                    "var fmHeatHouse = Ext.getCmp('fmHeatHouse');",
                    "var fmDTeplomers = Ext.getCmp('fmDTeplomers');",
                    "var value = fmDTeplomers.getValues();",
                    "var valueh = fmHeatHouse.getValues();",
                    "",
                    "var dt = new Date();",
                    "var tek_date=Ext.Date.format(dt, 'Y-m-d');",
                    "",
                    "//console.log(value);",
                    "Ext.Object.merge(value, valueh);",
                    "Ext.Object.merge(value, params);",
                    "",
                    "var myMask= Ext.Msg.show({",
                    "    title:'Начисление...',",
                    "    msg: 'Начисление отопления по площади.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "",
                    "QueryTeplomer.newPokTeplomera(value,function(data){",
                    "    if (data.success){",
                    "        StMop.removeAll();",
                    "        StMop.load({",
                    "            params: {",
                    "                login:value.login,",
                    "                password:value.password,",
                    "                house_id:value.house_id,",
                    "                what_id:value.dteplomer_id,",
                    "                dteplomer_id:value.dteplomer_id",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "        StOrgByDteplomer.removeAll();",
                    "        StOrgByDteplomer.load({",
                    "            params: {",
                    "                login:value.login,",
                    "                password:value.password,",
                    "                house_id:value.house_id,",
                    "                what_id:value.dteplomer_id,",
                    "                dteplomer_id:value.dteplomer_id",
                    "            },",
                    "            scope:this",
                    "        });",
                    "        StHeatHouse.load({",
                    "            params: {",
                    "                house_id:value.house_id,",
                    "                what:'TekPokHeatHouse',",
                    "                data:tek_date,",
                    "                dteplomer_id: value.dteplomer_id,",
                    "                login:value.login,",
                    "                password:value.password",
                    "            },",
                    "            callback: function(rec,operation,success){",
                    "                if((success) && (rec.length)){",
                    "                    fmHeatHouse.getForm().loadRecord(rec[0]);",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "        myMask.close();",
                    "        Ext.MessageBox.confirm({",
                    "            title: 'Проверка вводимых данных',",
                    "            msg:data.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "",
                    "    }",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onInsNachOtoplenieSquareClick",
            "designerId": "b8635955-fd31-409a-bc8d-cdd82f4ba7a0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#insNachHouse",
                "designer|targetType": "Ext.button.Button",
                "fn": "onInsNachHouseClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StHeatHouse = Ext.data.StoreManager.get(\"StHeatHouse\");//QueryTeplomer.getResults",
                    "var StOrgByDteplomer = Ext.data.StoreManager.get(\"StOrgByDteplomer\");//QueryTeplomer.getResults",
                    "var StMop = Ext.data.StoreManager.get(\"StMop\");//QueryTeplomer.getResults",
                    "",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    house_id:values.get('house_id'),",
                    "    login:values.get('login'),",
                    "    dteplomer_id:values.get('dteplomer_id'),",
                    "    password:values.get('password'),",
                    "    what:\"HeatHouse\"",
                    "};",
                    "",
                    "//FORMA",
                    "var fmHeatHouse = Ext.getCmp('fmHeatHouse');",
                    "var fmDTeplomers = Ext.getCmp('fmDTeplomers');",
                    "var value = fmDTeplomers.getValues();",
                    "var dt = new Date();",
                    "var tek_date=Ext.Date.format(dt, 'Y-m-d');",
                    "",
                    "//console.log(value);",
                    "Ext.Object.merge(value, params);",
                    "",
                    "var myMask= Ext.Msg.show({",
                    "    title:'Начисление...',",
                    "    msg: 'Начисление отопления по нагрузке.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "",
                    "QueryTeplomer.newPokTeplomera(value,function(data){",
                    "    if (data.success){",
                    "        StMop.removeAll();",
                    "        StMop.load({",
                    "            params: {",
                    "                login:value.login,",
                    "                password:value.password,",
                    "                house_id:value.house_id,",
                    "                what_id:value.dteplomer_id,",
                    "                dteplomer_id:value.dteplomer_id",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "        StOrgByDteplomer.removeAll();",
                    "        StOrgByDteplomer.load({",
                    "            params: {",
                    "                login:value.login,",
                    "                password:value.password,",
                    "                house_id:value.house_id,",
                    "                what_id:value.dteplomer_id,",
                    "                dteplomer_id:value.dteplomer_id",
                    "            },",
                    "            scope:this",
                    "        });",
                    "        StHeatHouse.load({",
                    "            params: {",
                    "                house_id:value.house_id,",
                    "                what:'TekPokHeatHouse',",
                    "                data:tek_date,",
                    "                dteplomer_id: value.dteplomer_id,",
                    "                login:value.login,",
                    "                password:value.password",
                    "            },",
                    "            callback: function(rec,operation,success){",
                    "                if((success) && (rec.length)){",
                    "                    fmHeatHouse.getForm().loadRecord(rec[0]);",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "        myMask.close();",
                    "        Ext.MessageBox.confirm({",
                    "            title: 'Проверка вводимых данных',",
                    "            msg:data.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "    }",
                    "",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onInsNachHouseClick",
            "designerId": "c3fb1731-d0af-4815-898a-e0ccac43235b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#newPokDTeplomera",
                "designer|targetType": "Ext.form.field.Number",
                "fn": "onNewPokDTeplomeraSpecialkey",
                "implHandler": [
                    "var value = field.getValue();",
                    "if (e.getKey() === e.ENTER && !Ext.isEmpty(value)) {",
                    "    this.onInsTekPokDteplomerClick();",
                    "}"
                ],
                "name": "specialkey",
                "scope": "me"
            },
            "name": "onNewPokDTeplomeraSpecialkey",
            "designerId": "debbb2cf-0ce1-4232-a0fa-6a14f66a7a4f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btAddDTeplomer",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtAddDTeplomerClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "",
                    "var values =stUser.getAt(0);",
                    "var vibor = values.get('vibor');",
                    "",
                    "switch (vibor){ ",
                    "    case 'change_dteplomer':  // ВЫБРАНА ЗАМЕНА ДОМОВОГО ТЕПЛОМЕРА ",
                    "    me.changeDTeplomer();",
                    "    break;",
                    "    case 'add_dteplomer'://ДОБАВЛЕНИЕ ДОМОВОГО ТЕПЛОМЕРА",
                    "    me.addDTeplomer();",
                    "    break;",
                    "    case 'edit_dteplomer':// РЕДАКТИРОВАНИЕ ДОМОВОГО ТЕПЛОМЕРА",
                    "    me.editDTeplomer();",
                    "    break;",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtAddDTeplomerClick",
            "designerId": "55523f54-5dff-4cf7-9ae0-a3d51d4de404"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "WinAddDTeplomer",
                "selector": "#winAddDTeplomer",
                "xtype": null
            },
            "name": "WinAddDTeplomer",
            "designerId": "242029fb-1ebb-4f35-a200-29fea5a2a5a5"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "WinAddAktClaim",
                "selector": "#winAddAktClaim"
            },
            "name": "WinAddAktClaim",
            "designerId": "08700030-4982-4b35-869f-d145b2530e70"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#insTekPokAverage",
                "designer|targetType": "Ext.button.Button",
                "fn": "onInsTekPokAverageClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StHeatHouse = Ext.data.StoreManager.get(\"StHeatHouse\");//QueryTeplomer.getResults",
                    "",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    house_id:values.get('house_id'),",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    what:\"HeatHouse\"",
                    "};",
                    "",
                    "//FORMA",
                    "var fmHeatHouse = Ext.getCmp('fmHeatHouse');",
                    "var fmDTeplomers = Ext.getCmp('fmDTeplomers');",
                    "var value = fmDTeplomers.getValues();",
                    "//LOGIKA",
                    "",
                    "//console.log(value);",
                    "Ext.Object.merge(value, params);",
                    "",
                    "QueryTeplomer.newPokTeplomera(value,function(data){",
                    "    if (data.success){ ",
                    "        Ext.MessageBox.confirm({",
                    "            title: 'Проверка вводимых данных',",
                    "            msg: 'Новые показания введены',",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        StHeatHouse.removeAll(); ",
                    "        StHeatHouse.load({",
                    "            params: {",
                    "                house_id:value.house_id,",
                    "                what:'TekPokHeatHouse',",
                    "                login:value.login,",
                    "                password:value.password,",
                    "                dteplomer_id:value.dteplomer_id",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if((success) && (records.length)){ ",
                    "                    fmHeatHouse.getForm().loadRecord(records[0]);  ",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        }); ",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ошибка вводимых данных',",
                    "            msg: 'Новые показания НЕ введены',",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });  ",
                    "    }",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onInsTekPokAverageClick",
            "designerId": "525c2c5a-03e8-400d-87e8-414c858aca94"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#insTekPokMiddle",
                "designer|targetType": "Ext.button.Button",
                "fn": "onInsTekPokMiddleClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StHeatHouse = Ext.data.StoreManager.get(\"StHeatHouse\");//QueryTeplomer.getResults",
                    "",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    house_id:values.get('house_id'),",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    what:\"Middle\"",
                    "};",
                    "",
                    "//FORMA",
                    "var fmHeatHouse = Ext.getCmp('fmHeatHouse');",
                    "var fmDTeplomers = Ext.getCmp('fmDTeplomers');",
                    "var value = fmDTeplomers.getValues();",
                    "//LOGIKA",
                    "",
                    "//console.log(value);",
                    "Ext.Object.merge(value, params);",
                    "",
                    "QueryTeplomer.newPokTeplomera(value,function(data){",
                    "    if (data.success){ ",
                    "        Ext.MessageBox.confirm({",
                    "            title: 'Проверка вводимых данных',",
                    "            msg: 'Новые показания введены',",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });      ",
                    "        StHeatHouse.removeAll(); ",
                    "        StHeatHouse.load({",
                    "            params: {",
                    "                house_id:value.house_id,",
                    "                what:'TekPokHeatHouse',",
                    "                login:value.login,",
                    "                password:value.password,",
                    "                dteplomer_id:value.dteplomer_id",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if((success) && (records.length)){ ",
                    "                    fmHeatHouse.getForm().loadRecord(records[0]);  ",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        }); ",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ошибка вводимых данных',",
                    "            msg: 'Новые показания НЕ введены',",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });  ",
                    "    }",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onInsTekPokMiddleClick",
            "designerId": "3e13ec15-9f70-47bf-9713-900f309dad7b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#insNachGvsHouse",
                "designer|targetType": "Ext.button.Button",
                "fn": "onInsNachGvsHouseClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StHeatHouse = Ext.data.StoreManager.get(\"StHeatHouse\");//QueryTeplomer.getResults",
                    "var StOrgByDteplomer = Ext.data.StoreManager.get(\"StOrgByDteplomer\");//QueryTeplomer.getResults",
                    "var StMop = Ext.data.StoreManager.get(\"StMop\");//QueryTeplomer.getResults",
                    "",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    house_id:values.get('house_id'),",
                    "    login:values.get('login'),",
                    "    dteplomer_id:values.get('dteplomer_id'),",
                    "    password:values.get('password'),",
                    "    what:\"HotWater\"",
                    "};",
                    "",
                    "//FORMA",
                    "var fmHeatHouse = Ext.getCmp('fmHeatHouse');",
                    "var value = fmHeatHouse.getValues();",
                    "var dt = new Date();",
                    "var tek_date=Ext.Date.format(dt, 'Y-m-d');",
                    "//LOGIKA",
                    "",
                    "//console.log(value);",
                    "Ext.Object.merge(value, params);",
                    "var myMask= Ext.Msg.show({",
                    "    title:'Начисление...',",
                    "    msg: 'Начисление ГВС.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "",
                    "QueryTeplomer.newPokTeplomera(value,function(data){",
                    "",
                    "    if (data.success){ ",
                    "",
                    "        StOrgByDteplomer.removeAll();  ",
                    "        StOrgByDteplomer.load({",
                    "            params: {",
                    "                login:value.login,",
                    "                password:value.password,",
                    "                house_id:value.house_id,",
                    "                what_id:value.dteplomer_id,",
                    "                dteplomer_id:value.dteplomer_id",
                    "            },",
                    "            scope:this",
                    "        }); ",
                    "        StHeatHouse.load({    ",
                    "            params: {",
                    "                house_id:value.house_id,",
                    "                what:'TekPokHeatHouse',",
                    "                data:tek_date,",
                    "                dteplomer_id: value.dteplomer_id,                                ",
                    "                login:value.login,",
                    "                password:value.password",
                    "            },",
                    "            callback: function(rec,operation,success){",
                    "                if((success) && (rec.length)){ ",
                    "                    fmHeatHouse.getForm().loadRecord(rec[0]);  ",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        }); ",
                    "        myMask.close();",
                    "        Ext.MessageBox.confirm({",
                    "            title: 'Проверка вводимых данных',",
                    "            msg:data.msg,",
                    "            buttons: Ext.MessageBox.OK,                ",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "    }",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onInsNachGvsHouseClick",
            "designerId": "eb1ae29e-72de-4515-ab21-ae958eca1c2c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "changeDTeplomer",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StDTeplomer = Ext.data.StoreManager.get(\"StDTeplomer\");//QueryTeplomer.getResults",
                    "var StHDTeplomer = Ext.data.StoreManager.get(\"StHDTeplomer\");//QueryTeplomer.getResults",
                    "var StAllPokDTeplomera = Ext.data.StoreManager.get(\"StAllPokDTeplomera\");//QueryTeplomer.getResults  <AllPokDTeplomera>",
                    "var StTekPokDTeplomera = Ext.data.StoreManager.get(\"StTekPokDTeplomera\");//QueryTeplomer.getResults <TekPokDTeplomera>",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    rowind:values.get('rowind'),",
                    "    house_id:values.get('house_id'),",
                    "    dteplomer_id:values.get('dteplomer_id'),",
                    "    what:\"change_DTeplomer\"",
                    "};",
                    "",
                    "//WIN",
                    "",
                    "var winAddDTeplomer = this.getWinAddDTeplomer();",
                    "",
                    "",
                    "//FORMA",
                    "",
                    "var fmDTeplomer = Ext.getCmp('fmDTeplomers');",
                    "var fmAddDTeplomer = Ext.getCmp('fmAddDTeplomer');",
                    "var value = fmAddDTeplomer.getValues();",
                    "",
                    "//GRID",
                    "",
                    "var grDTeplomer = Ext.getCmp('grDteplomers');",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "winAddDTeplomer.close();",
                    "var myMask= Ext.Msg.show({",
                    "    title:'Редактирование записи...',",
                    "    msg: 'Запись отредактированых данных<br> по домовому тепломеру.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "QueryTeplomer.addTeplomer(value,function(results){",
                    "    if (results.success){ ",
                    "",
                    "",
                    "        // setTimeout(function(){",
                    "        StDTeplomer.load({",
                    "            params: {",
                    "                what:'Dteplomer',",
                    "                dteplomer_id: value.dteplomer_id,",
                    "                house_id: value.house_id,",
                    "                login:value.login,",
                    "                password:value.password",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    grDTeplomer.getView().getSelectionModel().select(value.rowind);",
                    "                    Ext.MessageBox.show({",
                    "                        title: 'Замена домового тепломера',",
                    "                        msg: results.msg,",
                    "                        buttons: Ext.MessageBox.OK,",
                    "                        icon: Ext.MessageBox.INFO",
                    "                    });",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "        myMask.close();",
                    "",
                    "    }else{",
                    "        myMask.close();",
                    "",
                    "    }",
                    "});",
                    "",
                    ""
                ]
            },
            "name": "changeDTeplomer",
            "designerId": "158a85f8-fbca-4d80-8d47-d3b2b206e50b"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "addDTeplomer",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StDTeplomer = Ext.data.StoreManager.get(\"StDTeplomer\");//QueryTeplomer.getResults",
                    "var StAllPokDTeplomera = Ext.data.StoreManager.get(\"StAllPokDTeplomera\");//QueryTeplomer.getResults  <AllPokDTeplomera>",
                    "var StTekPokDTeplomera = Ext.data.StoreManager.get(\"StTekPokDTeplomera\");//QueryTeplomer.getResults <TekPokDTeplomera>",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    house_id:values.get('house_id'),",
                    "    what:\"add_DTeplomer\"",
                    "};",
                    "//WIN",
                    "var winAddDTeplomer = this.getWinAddDTeplomer();",
                    "//GRID",
                    "var grDTeplomer = Ext.getCmp('grDteplomers');",
                    "//FORMA",
                    "var fmDTeplomer = Ext.getCmp('fmDTeplomers');",
                    "var fmAddDTeplomer = Ext.getCmp('fmAddDTeplomer');",
                    "var value = fmAddDTeplomer.getValues();",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "winAddDTeplomer.close();",
                    "var myMask= Ext.Msg.show({",
                    "    title:'Добавление записи...',",
                    "    msg: 'Добавление тепломера.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "QueryTeplomer.addTeplomer(value,function(results){",
                    "    if (results.success){ ",
                    "        StDTeplomer.load({",
                    "            params: {",
                    "                what:'Dteplomer',",
                    "                house_id: value.house_id,",
                    "                login:value.login,",
                    "                password:value.password",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    StDTeplomer.each(function(item, index, count){",
                    "                        if (item.data.dteplomer_id === parseInt(results.teplomer_id, 10) ) {  ",
                    "                            grDTeplomer.getView().getSelectionModel().select(index);                            ",
                    "                        }",
                    "                    });",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });     ",
                    "        myMask.close();",
                    "",
                    "    }else{",
                    "        myMask.close();",
                    "",
                    "    }",
                    "});"
                ]
            },
            "name": "addDTeplomer",
            "designerId": "1be7a168-519d-4e03-848f-5b85a0282d11"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "addAktClaim",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StAktClaim = Ext.data.StoreManager.get(\"StAktClaim\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    what:\"getAktClaim\"",
                    "};",
                    "",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QuerySprav.createRecord(value,function(results){",
                    "    if (results){",
                    "        StAktClaim.load({",
                    "            params: {",
                    "                what:'getAktClaim',",
                    "                dteplomer_id: value.dteplomer_id,",
                    "                login:value.login,",
                    "                password:value.password",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    Ext.MessageBox.show({",
                    "                        title: 'Добавление записи',",
                    "                        msg: \"Запись добавлена\",",
                    "                        buttons: Ext.MessageBox.OK,",
                    "                        icon: Ext.MessageBox.INFO",
                    "                    });",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "    }",
                    "});"
                ]
            },
            "name": "addAktClaim",
            "designerId": "2e57d25f-4c9b-49ce-bee5-ec90f8895609"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "editDTeplomer",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StDTeplomer = Ext.data.StoreManager.get(\"StDTeplomer\");//QueryTeplomer.getResults",
                    "var StHDTeplomer = Ext.data.StoreManager.get(\"StHDTeplomer\");//QueryTeplomer.getResults",
                    "var StAllPokDTeplomera = Ext.data.StoreManager.get(\"StAllPokDTeplomera\");//QueryTeplomer.getResults  <AllPokDTeplomera>",
                    "var StTekPokDTeplomera = Ext.data.StoreManager.get(\"StTekPokDTeplomera\");//QueryTeplomer.getResults <TekPokDTeplomera>",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    rowind:values.get('rowind'),",
                    "    house_id:values.get('house_id'),",
                    "    dteplomer_id:values.get('dteplomer_id'),",
                    "    what:\"edit_DTeplomer\"",
                    "};",
                    "//WIN",
                    "var winAddDTeplomer = this.getWinAddDTeplomer();",
                    "//FORMA",
                    "var fmDTeplomer = Ext.getCmp('fmDTeplomers');",
                    "var fmAddDTeplomer = Ext.getCmp('fmAddDTeplomer');",
                    "var value = fmAddDTeplomer.getValues();",
                    "",
                    "//GRID",
                    "var grDTeplomer = Ext.getCmp('grDteplomers');",
                    "//LOGIKA",
                    "Ext.Object.merge(value, params);",
                    "winAddDTeplomer.close();",
                    "var myMask= Ext.Msg.show({",
                    "    title:'Редактирование записи...',",
                    "    msg: 'Запись отредактированых данных<br> по домовому тепломеру.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "QueryTeplomer.addTeplomer(value,function(results){",
                    "    if (results.success){ ",
                    "        StDTeplomer.load({",
                    "            params: {",
                    "                what:'Dteplomer',",
                    "                dteplomer_id: value.dteplomer_id,",
                    "                house_id: value.house_id,",
                    "                login:value.login,",
                    "                password:value.password",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    grDTeplomer.getView().getSelectionModel().select(value.rowind);",
                    "                    Ext.MessageBox.show({",
                    "                        title: 'Замена домового тепломера',",
                    "                        msg: results.msg,",
                    "                        buttons: Ext.MessageBox.OK,",
                    "                        icon: Ext.MessageBox.INFO",
                    "                    });",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "       myMask.close();",
                    "",
                    "    }else{",
                    "        myMask.close();",
                    "",
                    "    }",
                    "});",
                    ""
                ]
            },
            "name": "editDTeplomer",
            "designerId": "391b9a76-7829-46e5-9ee1-8ec618de29fd"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "editAktClaim",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StAktClaim = Ext.data.StoreManager.get(\"StAktClaim\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    what:\"getAktClaim\"",
                    "};",
                    "",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QuerySprav.updateRecords(value,function(results){",
                    "    if (results){",
                    "        StAktClaim.load({",
                    "            params: {",
                    "                what:'getAktClaim',",
                    "                dteplomer_id: value.dteplomer_id,",
                    "                login:value.login,",
                    "                password:value.password",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    Ext.MessageBox.show({",
                    "                        title: 'Обновление записи',",
                    "                        msg: \"Запись обновлена\",",
                    "                        buttons: Ext.MessageBox.OK,",
                    "                        icon: Ext.MessageBox.INFO",
                    "                    });",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "    }",
                    "});"
                ]
            },
            "name": "editAktClaim",
            "designerId": "00f0444e-196f-49c8-961f-e099d17e75fc"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#insPererDTeplomer",
                "designer|targetType": "Ext.button.Button",
                "fn": "onInsPererDTeplomerClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "var chekOut =\"\";",
                    "",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "//FORMA",
                    "var fmDTeplomersPerer = Ext.getCmp('fmDTeplomers');",
                    "",
                    "//LOGIN & PASSWORD",
                    "var value = fmDTeplomersPerer.getValues();",
                    "chekOut =\"PererDteplomer\";",
                    "",
                    "var values =stUser.getAt(0);",
                    "",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    house_id:values.get('house_id'),",
                    "    what:chekOut",
                    "};",
                    "//LOGIKA",
                    "Ext.Object.merge(value, params);",
                    "var newValue = value.gkal_perer;",
                    "if (newValue !== 0){",
                    "    Ext.MessageBox.confirm({",
                    "        title: 'Перерасчет по домовому тепломеру ',",
                    "        msg: 'Перерасчет затронет все обьекты по домовому тепломеру <br>Вы желаете продолжать.',",
                    "        buttons: Ext.MessageBox.OKCANCEL,",
                    "        icon: Ext.MessageBox.ERROR,",
                    "        buttonText:{",
                    "            ok:'Да',",
                    "            cancel:'отмена'",
                    "        },",
                    "        fn:function(btn,newValue){",
                    "            if(btn=='ok'){",
                    "                var myMask= Ext.Msg.show({",
                    "                    title:'Перерасчет...',",
                    "                    msg: 'Перерасчет по домовому тепломеру.Ожидайте...',",
                    "                    buttons: Ext.Msg.CANCEL,",
                    "                    wait: true,",
                    "                    modal: true,",
                    "                    icon: Ext.Msg.INFO",
                    "                });",
                    "                QueryTeplomer.newPokTeplomera(value,function(data){",
                    "                    if (data.success !=='0'){",
                    "                        myMask.close();",
                    "                        Ext.MessageBox.confirm({",
                    "                            title: 'Проверка вводимых данных',",
                    "                            msg: data.msg,",
                    "                            buttons: Ext.MessageBox.OK,",
                    "                            icon: Ext.MessageBox.INFO",
                    "                        });",
                    "                    }else{",
                    "                        myMask.close();",
                    "                    }",
                    "                });",
                    "            }",
                    "        }",
                    "    });",
                    "}",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onInsPererDTeplomerClick",
            "designerId": "7d61e88d-81b3-4295-a7ac-a826e8eaa4ca"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#insPererSquare",
                "designer|targetType": "MyButton",
                "fn": "onInsPererSquareClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "//FORMA",
                    "var fmDTeplomersPerer = Ext.getCmp('fmDTeplomersPerer');",
                    "",
                    "//LOGIN & PASSWORD",
                    "var value = fmDTeplomersPerer.getValues();",
                    "var values =stUser.getAt(0);",
                    "",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    house_id:values.get('house_id'),",
                    "    what:\"PererOtoplenieSquare\"",
                    "};",
                    "//LOGIKA",
                    "Ext.Object.merge(value, params);",
                    "",
                    "    Ext.MessageBox.confirm({",
                    "        title: 'Перерасчет по площади ',",
                    "        msg: 'Перерасчет по площади <br>Вы желаете продолжать.',",
                    "        buttons: Ext.MessageBox.OKCANCEL,",
                    "        icon: Ext.MessageBox.ERROR,",
                    "        buttonText:{",
                    "            ok:'Да',",
                    "            cancel:'отмена'",
                    "        },",
                    "        fn:function(btn,newValue){",
                    "            if(btn=='ok'){",
                    "                var myMask= Ext.Msg.show({",
                    "                    title:'Перерасчет...',",
                    "                    msg: 'Перерасчет по площади.Ожидайте...',",
                    "                    buttons: Ext.Msg.CANCEL,",
                    "                    wait: true,",
                    "                    modal: true,",
                    "                    icon: Ext.Msg.INFO",
                    "                });",
                    "                QueryTeplomer.newPokTeplomera(value,function(data){",
                    "                    if (data.success !=='0'){",
                    "                        myMask.close();",
                    "                        Ext.MessageBox.confirm({",
                    "                            title: 'Проверка вводимых данных',",
                    "                            msg: data.msg,",
                    "                            buttons: Ext.MessageBox.OK,",
                    "                            icon: Ext.MessageBox.INFO",
                    "                        });",
                    "                    }else{",
                    "                        myMask.close();",
                    "                    }",
                    "                });",
                    "            }",
                    "        }",
                    "    });",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onInsPererSquareClick",
            "designerId": "aab982b4-827b-4710-b61a-dc12ec7655c9"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#NachislenieDTeplomer",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.button.Button",
                "fn": "onNachislenieDTeplomerClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StHeatHouse = Ext.data.StoreManager.get(\"StHeatHouse\");//QueryTeplomer.getResults",
                    "var StAllPokDTeplomera = Ext.data.StoreManager.get(\"StAllPokDTeplomera\");//QueryTeplomer.getResults  <AllPokDTeplomera>",
                    "var StTekPokDTeplomera = Ext.data.StoreManager.get(\"StTekPokDTeplomera\");//QueryTeplomer.getResults <TekPokDTeplomera>",
                    "var StOrgByDteplomer = Ext.data.StoreManager.get(\"StOrgByDteplomer\");//QueryTeplomer.getResults",
                    "var StMop = Ext.data.StoreManager.get(\"StMop\");//QueryTeplomer.getResults",
                    "",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    house_id:values.get('house_id'),",
                    "    what:\"NachislenieDteplomer\"",
                    "};",
                    "",
                    "//FORMA",
                    "var fmHeatHouse = Ext.getCmp('fmHeatHouse');",
                    "var fmDTeplomers = Ext.getCmp('fmDTeplomers');",
                    "var value = fmDTeplomers.getValues();",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "",
                    "QueryTeplomer.newPokTeplomera(value,function(data){",
                    "    Ext.MessageBox.confirm({",
                    "        title: 'Проверка вводимых данных',",
                    "        msg:data.msg,",
                    "        buttons: Ext.MessageBox.OK,",
                    "        icon: Ext.MessageBox.INFO",
                    "    });",
                    "    if (data.success){",
                    "        //console.log(data.success);",
                    "        fmDTeplomers.down('#newPokDTeplomera').setValue(0);",
                    "        StTekPokDTeplomera.load({",
                    "            params: {",
                    "                what:'TekPokDTeplomera',",
                    "                dteplomer_id: value.dteplomer_id,",
                    "                login:value.login,",
                    "                password:value.password",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    fmDTeplomers.getForm().loadRecord(records[0]);",
                    "                    StAllPokDTeplomera.load({",
                    "                        params: {",
                    "                            house_id:records[0].data.house_id,",
                    "                            what:'AllPokDTeplomera',",
                    "                            login:value.login,",
                    "                            password:value.password,",
                    "                            dteplomer_id:value.dteplomer_id",
                    "                        },",
                    "                        scope:this",
                    "                    });",
                    "                    StOrgByDteplomer.load({",
                    "                        params: {",
                    "                            login:value.login,",
                    "                            password:value.password,",
                    "                            data:records[0].data.data,",
                    "                            house_id:records[0].data.house_id,",
                    "                            what_id:value.dteplomer_id,",
                    "                            dteplomer_id:value.dteplomer_id",
                    "                        },",
                    "                        scope:this",
                    "                    });",
                    "                    StMop.removeAll();",
                    "                    StMop.load({",
                    "                        params: {",
                    "                            login:value.login,",
                    "                            password:value.password,",
                    "                            data:records[0].data.data,",
                    "                            house_id:records[0].data.house_id,",
                    "                            what_id:value.dteplomer_id,",
                    "                            dteplomer_id:value.dteplomer_id",
                    "                        },",
                    "                        scope:this",
                    "                    });",
                    "                    StHeatHouse.load({",
                    "                        params: {",
                    "                            house_id:records[0].data.house_id,",
                    "                            what:'TekPokHeatHouse',",
                    "                            login:value.login,",
                    "                            password:value.password,",
                    "                            data:records[0].data.data,",
                    "                            dteplomer_id:value.dteplomer_id",
                    "                        },",
                    "                        callback: function(rec,operation,success){",
                    "                            if((success) && (rec.length)){",
                    "                                //console.log(rec[0].data);",
                    "                                fmHeatHouse.getForm().loadRecord(rec[0]);",
                    "                            }",
                    "                        },",
                    "                        scope:this",
                    "                    });",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "    }",
                    "});",
                    "",
                    ""
                ],
                "name": "click"
            },
            "name": "onNachislenieDTeplomerClick",
            "designerId": "f268d7a0-145d-4b81-a199-837639af94cb"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#toolAddTeplomer",
                "designer|params": [
                    "tool",
                    "e",
                    "owner",
                    "eOpts"
                ],
                "designer|targetType": "Ext.panel.Tool",
                "fn": "onToolAddTeplomerClick",
                "implHandler": [
                    "var me = this;",
                    "var winAddDTeplomer = Ext.ClassManager.instantiateByAlias('widget.winadddteplomer');",
                    "//console.log(1);",
                    "//var winAddDTeplomer = this.getWinAddDTeplomer;",
                    "var form = winAddDTeplomer.down('#fmAddDTeplomer');",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "//LOGIKA",
                    "values.set({'vibor':'add_dteplomer'});",
                    "stUser.sync();",
                    "var dt = new Date();",
                    "form.down('#btAddDTeplomer').setText('Додати лічильники тепла');",
                    "winAddDTeplomer.setTitle('Введення нового будинкового лічильника тепла');",
                    "//form.getForm().findField('pdate').setValue(Ext.Date.format(dt, 'Y-m-d'));",
                    "//form.getForm().findField('sdate').setValue(Ext.Date.format(dt, 'Y-m-d'));",
                    "form.getForm().findField('pp').setValue(4);",
                    "form.getForm().findField('fpdate').hide();",
                    "",
                    "winAddDTeplomer.show();"
                ],
                "name": "click"
            },
            "name": "onToolAddTeplomerClick",
            "designerId": "20729fca-148b-46fc-b81c-2e962251a79f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnInsertAktClaim",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtnInsertAktClaimClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "var value = button.findParentByType('form').getValues();",
                    "//console.log(value);",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var vibor = values.get('vibor');",
                    "this.getWinAddAktClaim().close();",
                    "",
                    "switch (vibor){",
                    "    case 'addAktClaim':  // ВЫБРАНА КВАРТИРА",
                    "        me.addAktClaim(value);",
                    "        break;",
                    "    case 'editAktClaim':  // ВЫБРАНА КВАРТИРА",
                    "        me.editAktClaim(value);",
                    "        break;",
                    "",
                    "}"
                ],
                "name": "click"
            },
            "name": "onBtnInsertAktClaimClick",
            "designerId": "f23e97aa-579a-4389-8d9a-0be6819a7f1c"
        }
    ]
}