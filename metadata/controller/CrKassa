{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": "crKassa",
        "designer|userClassName": "CrKassa",
        "models": [
            "MdLgotnik"
        ],
        "stores": [
            "StTekNach",
            "StUser",
            "StLogin",
            "StLgotnik"
        ],
        "views": [
            "VpKommuna",
            "menu.TabPnCenter"
        ]
    },
    "designerId": "1f20f6be-710b-401c-a1f0-8335cb265ad1",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabKassa",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabKassaActivate",
                "implHandler": [
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var password = values.get('password');",
                    "var address_id = values.get('address_id');",
                    "var raion_id = values.get('raion_id');",
                    "var address = values.get('address');",
                    "var house_id = values.get('house_id');",
                    "var prixod_id = values.get('prixod_id');",
                    "var fmTekNachKassa = Ext.getCmp('fmTekNachKassa');",
                    "var fmTekNachKassa1 = Ext.getCmp('fmTekNachKassa1');",
                    "var fmTekNachKassa2 = Ext.getCmp('fmTekNachKassa2');",
                    "var fmInfoApp = Ext.getCmp('fmInfoApp');",
                    "var fsDolgMgkc = Ext.getCmp('fsDolgMgkc');",
                    "var fsDolgDobrobut = Ext.getCmp('fsDolgDobrobut');",
                    "var stAppartment = Ext.data.StoreManager.get(\"StAppartment\");",
                    "var stLgotnik = Ext.data.StoreManager.get(\"StLgotnik\");",
                    "var stTekNachKassa = Ext.data.StoreManager.get(\"StTekNachKassa\");",
                    "var stTekOplata = Ext.data.StoreManager.get(\"StTekOplata\");",
                    "var stVodomerKassa = Ext.data.StoreManager.get(\"StVodomerKassa\");",
                    "var stWater = Ext.data.StoreManager.get(\"StWater\");",
                    "stWater.removeAll();",
                    "stAppartment.load({",
                    "    params: {",
                    "        what_id:address_id,",
                    "        address_id: address_id,",
                    "        what:'Appartment',",
                    "        login:login,",
                    "        password:password",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            if (records.length) {",
                    "                fmInfoApp.getForm().loadRecord(records[0]);",
                    "                var adrec = fmInfoApp.getForm().findField('address').getValue();",
                    "                var fio = fmInfoApp.getForm().findField('nanim').getValue();",
                    "                var kod = fmInfoApp.getForm().findField('address_id').getValue();",
                    "",
                    "                fmInfoApp.setTitle('<font size=\"4\"> ид&nbsp;&nbsp;'+ kod + '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' +",
                    "                                   '&nbsp;&nbsp;&nbsp;' + adrec + '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'+",
                    "                                   '&nbsp;&nbsp;&nbsp;&nbsp;' +  fio + '</font>');",
                    "            }",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});",
                    "stVodomerKassa.load({",
                    "    params: {",
                    "        what:'AppVodomerKassa',",
                    "        what_id: address_id,",
                    "        address_id: address_id,",
                    "        login:login,",
                    "        password:password",
                    "    },",
                    "    scope:this",
                    "});",
                    "stTekNachKassa.removeAll();",
                    "fmTekNachKassa.getForm().reset();",
                    "fmInfoApp.getForm().reset();",
                    "stTekNachKassa.load({",
                    "    params: {",
                    "        login:login,",
                    "        password:password,",
                    "        what_id:address_id,",
                    "        house_id:house_id,",
                    "        address_id: address_id,",
                    "        raion_id:raion_id,",
                    "        what:'TekNachAllApp'",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if (success)  {",
                    "            fmTekNachKassa.getForm().findField('date_oplata').setValue(Ext.Date.format(new Date(), 'Y-m-d'));",
                    "            fmTekNachKassa.getForm().findField('prixod_id').setValue(prixod_id);",
                    "            fmTekNachKassa.getForm().findField('cbNext1').setValue(false);",
                    "            fmTekNachKassa.getForm().findField('cbNext2').setValue(false);",
                    "            fmTekNachKassa.getForm().findField('cbNext3').setValue(false);",
                    "            fmTekNachKassa.getForm().findField('cbNext4').setValue(false);",
                    "            fmTekNachKassa.getForm().findField('cbNext5').setValue(false);",
                    "            fmTekNachKassa.getForm().findField('cbNext6').setValue(false);",
                    "            fmTekNachKassa.getForm().findField('cbNext7').setValue(false);",
                    "            fmTekNachKassa.getForm().findField('cbNext8').setValue(false);",
                    "            fmTekNachKassa.getForm().findField('cbDo1').setValue(false);",
                    "            fmTekNachKassa.getForm().findField('cbDo2').setValue(false);",
                    "            fmTekNachKassa.getForm().findField('cbDo3').setValue(false);",
                    "            fmTekNachKassa.getForm().findField('cbDo4').setValue(false);",
                    "            fmTekNachKassa.getForm().findField('cbDo5').setValue(false);",
                    "            fmTekNachKassa.getForm().findField('cbDo6').setValue(false);",
                    "            fmTekNachKassa.getForm().findField('cbDo7').setValue(false);",
                    "            fmTekNachKassa.getForm().findField('cbDo8').setValue(false);",
                    "            fmTekNachKassa.getForm().findField('cbDo1').setDisabled(false);",
                    "            fmTekNachKassa.getForm().findField('cbDo2').setDisabled(false);",
                    "            fmTekNachKassa.getForm().findField('cbDo3').setDisabled(false);",
                    "            fmTekNachKassa.getForm().findField('cbDo4').setDisabled(false);",
                    "            fmTekNachKassa.getForm().findField('cbDo5').setDisabled(false);",
                    "            fmTekNachKassa.getForm().findField('cbDo6').setDisabled(false);",
                    "            fmTekNachKassa.getForm().findField('cbDo7').setDisabled(false);",
                    "            fmTekNachKassa.getForm().findField('cbDo8').setDisabled(false);",
                    "            fmTekNachKassa.getForm().findField('cbNext1').setDisabled(false);",
                    "            fmTekNachKassa.getForm().findField('cbNext2').setDisabled(false);",
                    "            fmTekNachKassa.getForm().findField('cbNext3').setDisabled(false);",
                    "            fmTekNachKassa.getForm().findField('cbNext4').setDisabled(false);",
                    "            fmTekNachKassa.getForm().findField('cbNext5').setDisabled(false);",
                    "            fmTekNachKassa.getForm().findField('cbNext6').setDisabled(false);",
                    "            fmTekNachKassa.getForm().findField('cbNext7').setDisabled(false);",
                    "            fmTekNachKassa.getForm().findField('cbNext8').setDisabled(false);",
                    "            fmTekNachKassa.down('#insTekPokKassa').setDisabled(true);",
                    "            fmTekNachKassa.down('#DoAll').setDisabled(false);",
                    "            fmTekNachKassa.down('#DoAllReset').setDisabled(false);",
                    "            fmTekNachKassa.down('#NextAllReset').setDisabled(false);",
                    "            fmTekNachKassa.down('#NextAll').setDisabled(false);",
                    "            if (records.length) {",
                    "                fmTekNachKassa.getForm().loadRecord(records[0]);",
                    "                var  dolgMgkc = fmTekNachKassa.getForm().findField('dolg9').getValue();",
                    "                var  dolgDobrobut = fmTekNachKassa.getForm().findField('dolg10').getValue();",
                    "                if (dolgMgkc !== 0) {",
                    "                    if (fsDolgMgkc.isHidden()){fsDolgMgkc.show();}",
                    "                } else {",
                    "                    if (!fsDolgMgkc.isHidden()){fsDolgMgkc.hide();}",
                    "                }",
                    "                if (dolgDobrobut !== 0) {",
                    "                    if (fsDolgDobrobut.isHidden()){fsDolgDobrobut.show();}",
                    "                } else {",
                    "                    if (!fsDolgDobrobut.isHidden()){fsDolgDobrobut.hide();}",
                    "",
                    "                }",
                    "            }",
                    "        }",
                    "",
                    "    },",
                    "    scope:this",
                    "});",
                    "fmTekNachKassa1.getForm().reset();",
                    "stTekNachKassa.removeAll();",
                    "stTekNachKassa.load({",
                    "    params: {",
                    "        login:login,",
                    "        password:password,",
                    "        what_id:address_id,",
                    "        address_id: address_id,",
                    "        house_id:house_id,",
                    "        raion_id:raion_id,",
                    "        what:'TekNachAllApp1'",
                    "    },",
                    "    callback: function(records1,operation,success){",
                    "        if (success)  {",
                    "            if (records1.length) {",
                    "                fmTekNachKassa1.getForm().loadRecord(records1[0]);",
                    "            }",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});",
                    "fmTekNachKassa2.getForm().reset();",
                    "stTekNachKassa.removeAll();",
                    "stTekNachKassa.load({",
                    "    params: {",
                    "        login:login,",
                    "        password:password,",
                    "        what_id:address_id,",
                    "        house_id:house_id,",
                    "        address_id: address_id,",
                    "        raion_id:raion_id,",
                    "        what:'TekNachAllApp2'",
                    "    },",
                    "    callback: function(records2,operation,success){",
                    "        if (success)  {",
                    "            if (records2.length) {",
                    "                fmTekNachKassa2.getForm().loadRecord(records2[0]);",
                    "            }",
                    "        }",
                    "",
                    "    },",
                    "    scope:this",
                    "});",
                    "stLgotnik.removeAll();",
                    "stLgotnik.load({",
                    "    params: {",
                    "        what_id:address_id,",
                    "        address_id: address_id,",
                    "        what:'Lgotnik',",
                    "        login:login,",
                    "        password:password",
                    "    },",
                    "    scope:this",
                    "});",
                    "",
                    "stTekOplata.load({",
                    "    params: {",
                    "        what:'AppTekOplata',",
                    "        what_id: address_id,",
                    "        address_id: address_id,",
                    "        login:login,",
                    "        password:password",
                    "    },",
                    "    scope:this",
                    "});"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabKassaActivate",
            "designerId": "4a6ed0eb-de9d-4457-a6e9-6f83fed8d28f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabSearchCitizen",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabSearchCitizenActivate",
                "implHandler": [
                    "//in use",
                    "",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var password = values.get('password');",
                    "var address_id = values.get('address_id');",
                    "",
                    "//STORE",
                    "var stApp = Ext.data.StoreManager.get(\"StApp\");//QueryAddress.getResults <Appartment>",
                    "",
                    "stApp.load({",
                    "    params: {",
                    "        what:'SearchCitizen',",
                    "        login:login,",
                    "        password:password",
                    "    },",
                    "",
                    "    scope:this",
                    "});",
                    "//tabKassa",
                    ""
                ],
                "name": "activate"
            },
            "name": "onTabSearchCitizenActivate",
            "designerId": "66c5fedf-5483-4c80-9e83-2f5cac16992e"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "GrTekPokVodomerov",
                "selector": "#grTekPokVodomerov"
            },
            "name": "GrTekPokVodomerov",
            "designerId": "dc095564-92b7-4dc5-98bf-732f70d41c4c"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "TabPnCenter",
                "selector": "tabPnCenter",
                "xtype": "tabpncenter"
            },
            "name": "TabPnCenter",
            "designerId": "1039bbd6-53d7-4306-91fe-f581157cfffd"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grAppVodomerKassa",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrAppVodomerKassaSelectionChange",
                "implHandler": [
                    "//in use",
                    "var me =this;",
                    "",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stTekPokVodomera = Ext.data.StoreManager.get(\"StTekPokVodomera\");//QueryVodomer.getResults <TekPokVodomera>",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var password = values.get('password');",
                    "var address_id = values.get('address_id');",
                    "var house_id = values.get('house_id');",
                    "",
                    "//FORMA",
                    "",
                    "var fmInfoApp = Ext.getCmp('fmInfoApp');",
                    "//var fs = fmInfoApp.down('#fsInsPokVodMiddle');",
                    "",
                    "",
                    "//LOGIKA",
                    "",
                    "//console.log(fs);",
                    "",
                    "if (selected.length){",
                    "",
                    "    stTekPokVodomera.load({",
                    "        params: {",
                    "            login:login,",
                    "            password:password,",
                    "            address_id: address_id,",
                    "            what:'TekPokVodomera',",
                    "            what_id: selected[0].data.address_id,",
                    "            vodomer_id: selected[0].data.vodomer_id",
                    "        },",
                    "        callback: function(records,operation,success){",
                    "            if(success){",
                    "                //  console.log(records[0]);",
                    "                fmInfoApp.getForm().findField('tek').setValue(records[0].get('tek'));",
                    "                fmInfoApp.getForm().findField('pred').setValue(records[0].get('pred'));",
                    "                fmInfoApp.getForm().findField('kub').setValue(records[0].get('kub'));",
                    "                fmInfoApp.getForm().findField('fdate').setValue(records[0].get('data'));",
                    "                fmInfoApp.getForm().findField('pok_id').setValue(records[0].get('pok_id'));",
                    "                fmInfoApp.getForm().findField('type').setValue(records[0].get('type'));",
                    "                fmInfoApp.getForm().findField('vodomer_id').setValue(records[0].get('vodomer_id'));",
                    "                fmInfoApp.getForm().findField('place').setValue(records[0].get('place'));",
                    "                fmInfoApp.down('#delTekPokVodKassa').setDisabled(false);",
                    "                fmInfoApp.getForm().findField('newValue').setValue(\"0\").focus();",
                    "                //   fmInfoApp.getForm().findField('newValue').focus();",
                    "                // fmInfoApp.doLayout();",
                    "",
                    "            }",
                    "        },",
                    "        scope:this",
                    "    });",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrAppVodomerKassaSelectionChange",
            "designerId": "206fad18-be60-4e8a-a7b6-fbda83d4b85b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#insTekPokVodKassa",
                "designer|targetType": "Ext.button.Button",
                "fn": "onInsTekPokVodKassaClick",
                "implHandler": [
                    "this.InsTekPokVodomera();"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onInsTekPokVodKassaClick",
            "designerId": "8b89d3c7-d89a-4615-b1d9-8c3f36313994"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#delTekPokVodKassa",
                "designer|targetType": "Ext.button.Button",
                "fn": "onDelTekPokVodKassaClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stTekPokVodomera = Ext.data.StoreManager.get(\"StTekPokVodomera\");//QueryVodomer.getResults <TekPokVodomera>",
                    "var stTekNachKassa = Ext.data.StoreManager.get(\"StTekNachKassa\");",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    house_id:values.get('house_id'),",
                    "    raion_id:values.get('raion_id'),",
                    "    what:'AVodomer'",
                    "",
                    "};",
                    "",
                    "//FORMA",
                    "var fmTekNachKassa = Ext.getCmp('fmTekNachKassa');",
                    "var fmInfoApp = Ext.getCmp('fmInfoApp');",
                    "var value = fmInfoApp.getValues();",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "//console.log(value);",
                    "Ext.MessageBox.confirm({",
                    "    title: 'Удаление последних показаний счетчика воды',",
                    "    msg: 'Вы удаляете последнее показание по счетчику <br>тип воды <b>'+value.type+",
                    "    '</b> <br>Место установки <b>'+value.place+'</b><br>Показание<b>'+value.tek+",
                    "    '</b><br>Подтвердите или отмените свои действия.',",
                    "    buttons: Ext.MessageBox.OKCANCEL,",
                    "    icon: Ext.MessageBox.ERROR,",
                    "    buttonText:{",
                    "        ok:'подтвеждаю',",
                    "        cancel:'отмена'",
                    "    },",
                    "    fn:function(btn,newValue){",
                    "        if(btn=='ok'){",
                    "            QueryVodomer.delPokVodomera(value,function(results){",
                    "                if (results.success === \"1\"){                     ",
                    "                    Ext.MessageBox.show({title: 'Удаление последних показаний ',",
                    "                        msg: results.msg,",
                    "                        buttons: Ext.MessageBox.OK,",
                    "                        icon: Ext.MessageBox.INFO",
                    "                    }); ",
                    "                    stTekNachKassa.load({",
                    "                        params: {",
                    "                            login:value.login,",
                    "                            password:value.password,",
                    "                            raion_id: value.raion_id,",
                    "                            what_id: value.address_id,",
                    "                            address_id: value.address_id,",
                    "                            what:'TekNachAllApp'      ",
                    "                        },",
                    "                        callback: function(rec,operation,succ){",
                    "                            if(succ){",
                    "                                fmTekNachKassa.getForm().loadRecord(rec[0]);",
                    "                            }                               ",
                    "                        },",
                    "                        scope:this",
                    "                    });",
                    "",
                    "                    stTekPokVodomera.load({",
                    "                        params: {",
                    "                            what:'TekPokVodomera',",
                    "                            what_id: value.address_id,",
                    "                            address_id: value.address_id,",
                    "                            vodomer_id: value.vodomer_id,",
                    "                            password:value.password,",
                    "                            login:value.login",
                    "                        },",
                    "                        callback: function(records,operation,success){",
                    "                            if(success){",
                    "                                fmInfoApp.getForm().findField('tek').setValue(records[0].get('tek'));",
                    "                                fmInfoApp.getForm().findField('pred').setValue(records[0].get('pred'));",
                    "                                fmInfoApp.getForm().findField('kub').setValue(records[0].get('kub'));",
                    "                                fmInfoApp.getForm().findField('fdate').setValue(records[0].get('data'));",
                    "                                fmInfoApp.getForm().findField('pok_id').setValue(records[0].get('pok_id'));",
                    "                                fmInfoApp.getForm().findField('type').setValue(records[0].get('type'));",
                    "                                fmInfoApp.getForm().findField('vodomer_id').setValue(records[0].get('vodomer_id'));",
                    "                                fmInfoApp.getForm().findField('place').setValue(records[0].get('place'));",
                    "                                fmInfoApp.down('#delTekPokVodKassa').setDisabled(true);",
                    "",
                    "",
                    "                            }",
                    "                        },",
                    "                        scope:this",
                    "                    });",
                    "                    Ext.MessageBox.show({title: 'Удаление последних показаний ',",
                    "                        msg: results.msg,",
                    "                        buttons: Ext.MessageBox.OK,",
                    "                        icon: Ext.MessageBox.INFO",
                    "                    });",
                    "                    me.resetFmKassa();                    ",
                    "                    fmInfoApp.getForm().findField('newValue').setValue(0).focus();",
                    "",
                    "                }else{",
                    "                    Ext.MessageBox.show({title: 'Удаление последних показаний счетчика воды',",
                    "                        msg: results.msg,",
                    "                        buttons: Ext.MessageBox.OK,",
                    "                        icon: Ext.MessageBox.ERROR",
                    "                    }); ",
                    "                    fmInfoApp.getForm().findField('newValue').setValue(0).focus();",
                    "",
                    "                }",
                    "            });",
                    "        }",
                    "    }",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onDelTekPokVodKassaClick",
            "designerId": "e45ae5a5-b0bc-49ae-9f86-9fec140e3493"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#insTekPokKassa",
                "designer|targetType": "Ext.button.Button",
                "fn": "onInsTekPokKassaClick",
                "implHandler": [
                    "// in use",
                    "this.insNewOplata();"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onInsTekPokKassaClick",
            "designerId": "348beaec-de87-4207-90cb-49dcc937de6b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#newValueVodomer",
                "designer|targetType": "Ext.form.field.Number",
                "fn": "onNewPokVodomeraSpecialkey",
                "implHandler": [
                    "// in use",
                    "var value = field.getValue();",
                    "if ( e.getKey() === e.ENTER && !Ext.isEmpty(value) && value > 0) {",
                    "    this.InsTekPokVodomera();",
                    "}"
                ],
                "name": "specialkey",
                "scope": "me"
            },
            "name": "onNewPokVodomeraSpecialkey",
            "designerId": "cc77a223-b107-44da-a4ed-d4ed03c6c79e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "InsTekPokVodomera",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//console.log(me);",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stTekNachKassa = Ext.data.StoreManager.get(\"StTekNachKassa\");",
                    "var stTekPokVodomera = Ext.data.StoreManager.get(\"StTekPokVodomera\");//QueryVodomer.getResults <TekPokVodomera>",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    house_id:values.get('house_id'),",
                    "    raion_id:values.get('raion_id'),",
                    "    what:'AVodomerK'",
                    "",
                    "};",
                    "//console.log(values);",
                    "//FORMA",
                    "var fmTekNachKassa = Ext.getCmp('fmTekNachKassa');",
                    "var fmInfoApp = Ext.getCmp('fmInfoApp');",
                    "var value = fmInfoApp.getValues();",
                    "",
                    "//LOGIKA",
                    "",
                    "",
                    "Ext.Object.merge(value, params);",
                    "var newValue = value.newValue;",
                    "var max =newValue - value.tek;",
                    "if (max<=0){",
                    "    Ext.MessageBox.show({",
                    "        title: 'Проверка вводимых данных',",
                    "        msg: 'Текущие показания <b>'+value.tek+'</b><br>Новые показания <b>'+newValue+'</b><br>Введите правильные показания !.',",
                    "        buttons: Ext.MessageBox.CANCEL,",
                    "        icon: Ext.MessageBox.ERROR,",
                    "        buttonText:{",
                    "            cancel:'отмена'",
                    "        },",
                    "        fn:function(btn,newValue){",
                    "            if(btn=='cancel'){",
                    "                fmInfoApp.getForm().findField('newValue').focus();",
                    "                return false;",
                    "            }",
                    "        }",
                    "    });",
                    "} else if(max > 20) {",
                    "    Ext.MessageBox.confirm({",
                    "        title: 'Проверка вводимых данных',",
                    "        msg: 'Вводимые показания <b>'+newValue+'</b> очень большие <b>'+ max +'</b> куб(a)<br>Подтвердите или отмените вводимые показания.',",
                    "        buttons: Ext.MessageBox.OKCANCEL,",
                    "        icon: Ext.MessageBox.ERROR,",
                    "        buttonText:{",
                    "            ok:'подтвеждаю',",
                    "            cancel:'отмена'",
                    "        },",
                    "        fn:function(btn,newValue){",
                    "            if(btn=='cancel'){",
                    "                fmInfoApp.getForm().findField('newValue').focus();",
                    "                return false;",
                    "            }else{",
                    "                fmInfoApp.getForm().findField('newValue').setValue(0).focus();",
                    "                QueryVodomer.newPokVodomera(value,function(results){",
                    "                    if (results.success === \"1\"){",
                    "",
                    "                        stTekNachKassa.load({",
                    "                            params: {",
                    "                                login:value.login,",
                    "                                password:value.password,",
                    "                                what_id: value.address_id,",
                    "                                address_id: value.address_id,",
                    "                                raion_id: value.raion_id,",
                    "                                what:'TekNachAllApp'",
                    "                            },",
                    "                            callback: function(rec,operation,succ){",
                    "                                if(succ){",
                    "                                    me.resetFmKassa();",
                    "                                    fmTekNachKassa.getForm().loadRecord(rec[0]);",
                    "                                }",
                    "                            },",
                    "                            scope:this",
                    "                        });",
                    "",
                    "                        stTekPokVodomera.load({",
                    "                            params: {",
                    "                                what:'TekPokVodomera',",
                    "                                what_id: value.address_id,",
                    "                                address_id: value.address_id,",
                    "                                vodomer_id: value.vodomer_id,",
                    "                                login:value.login,",
                    "                                password:value.password",
                    "                            },",
                    "                            callback: function(records,operation,success){",
                    "                                if(success){",
                    "                                    fmInfoApp.getForm().findField('tek').setValue(records[0].get('tek'));",
                    "                                    fmInfoApp.getForm().findField('pred').setValue(records[0].get('pred'));",
                    "                                    fmInfoApp.getForm().findField('kub').setValue(records[0].get('kub'));",
                    "                                    fmInfoApp.getForm().findField('fdate').setValue(records[0].get('data'));",
                    "                                    fmInfoApp.getForm().findField('pok_id').setValue(records[0].get('pok_id'));",
                    "                                    fmInfoApp.getForm().findField('type').setValue(records[0].get('type'));",
                    "                                    fmInfoApp.getForm().findField('vodomer_id').setValue(records[0].get('vodomer_id'));",
                    "                                    fmInfoApp.getForm().findField('place').setValue(records[0].get('place'));",
                    "                                }",
                    "                            },",
                    "                            scope:this",
                    "                        });",
                    "                        Ext.MessageBox.show({title: 'Ввод текущих показаний водомера ',",
                    "                                             msg: results.msg,",
                    "                                             buttons: Ext.MessageBox.OK,",
                    "                                             icon: Ext.MessageBox.INFO",
                    "                                            });",
                    "                        me.resetFmKassa();",
                    "                        fmInfoApp.getForm().findField('newValue').setValue(0).focus();",
                    "",
                    "",
                    "                    }else{",
                    "                        Ext.MessageBox.show({title: 'Ввод текущих показаний водомера ',",
                    "                                             msg: results.msg,",
                    "                                             buttons: Ext.MessageBox.OK,",
                    "                                             icon: Ext.MessageBox.ERROR",
                    "                                            });",
                    "                        fmInfoApp.getForm().findField('newValue').setValue(0).focus();",
                    "",
                    "                    }",
                    "                });",
                    "            }",
                    "        }",
                    "    });",
                    "",
                    "",
                    "} else {",
                    "    fmInfoApp.getForm().findField('newValue').setValue(0);",
                    "    QueryVodomer.newPokVodomera(value,function(results){",
                    "        if (results.success==='1'){",
                    "            stTekNachKassa.load({",
                    "                params: {",
                    "                    login:value.login,",
                    "                    password:value.password,",
                    "                    what_id: value.address_id,",
                    "                    address_id: value.address_id,",
                    "                    raion_id: value.raion_id,",
                    "                    what:'TekNachAllApp'",
                    "                },",
                    "                callback: function(rec,operation,succ){",
                    "                    if(succ){",
                    "",
                    "                        fmTekNachKassa.getForm().loadRecord(rec[0]);",
                    "                    }",
                    "                },",
                    "                scope:this",
                    "            });",
                    "",
                    "            stTekPokVodomera.load({",
                    "                params: {",
                    "                    what:'TekPokVodomera',",
                    "                    what_id: value.address_id,",
                    "                    address_id: value.address_id,",
                    "                    vodomer_id: value.vodomer_id,",
                    "                    login:value.login,",
                    "                    password:value.password",
                    "                },",
                    "                callback: function(records,operation,success){",
                    "                    if(success){",
                    "                        // console.log(records);",
                    "",
                    "                        fmInfoApp.getForm().findField('tek').setValue(records[0].get('tek'));",
                    "                        fmInfoApp.getForm().findField('pred').setValue(records[0].get('pred'));",
                    "                        fmInfoApp.getForm().findField('kub').setValue(records[0].get('kub'));",
                    "                        fmInfoApp.getForm().findField('fdate').setValue(records[0].get('data'));",
                    "                        fmInfoApp.getForm().findField('pok_id').setValue(records[0].get('pok_id'));",
                    "                        fmInfoApp.getForm().findField('type').setValue(records[0].get('type'));",
                    "                        fmInfoApp.getForm().findField('place').setValue(records[0].get('place'));",
                    "                        fmInfoApp.getForm().findField('vodomer_id').setValue(records[0].get('vodomer_id'));",
                    "                    }",
                    "                },",
                    "                scope:this",
                    "            });",
                    "            Ext.MessageBox.show({title: 'Ввод текущих показаний водомера ',",
                    "                                 msg: results.msg,",
                    "                                 buttons: Ext.MessageBox.OK,",
                    "                                 icon: Ext.MessageBox.INFO",
                    "                                });",
                    "            me.resetFmKassa();",
                    "            fmInfoApp.getForm().findField('newValue').setValue(0);",
                    "",
                    "        }else{",
                    "            Ext.MessageBox.show({title: 'Ввод текущих показаний водомера',",
                    "                                 msg: results.msg,",
                    "                                 buttons: Ext.MessageBox.OK,",
                    "                                 icon: Ext.MessageBox.ERROR",
                    "                                });",
                    "            fmInfoApp.getForm().findField('newValue').setValue(0).focus();",
                    "",
                    "        }",
                    "    });",
                    "}",
                    ""
                ]
            },
            "name": "InsTekPokVodomera",
            "designerId": "f05a5e87-c86e-4ff8-a1d6-1530e502cf4d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "insNewOplata",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stTekNachKassa = Ext.data.StoreManager.get(\"StTekNachKassa\");",
                    "var stTekOplata = Ext.data.StoreManager.get(\"StTekOplata\");//QueryKassa.getResults",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    house_id:values.get('house_id'),",
                    "    user_id:values.get('user_id'),",
                    "    raion_id:values.get('raion_id'),",
                    "    kassa_id:values.get('prixod_id'),",
                    "    what:'AppTekOplata'",
                    "",
                    "};",
                    "",
                    "//FORMA",
                    "var fmTekNachKassa = Ext.getCmp('fmTekNachKassa');",
                    "var value = fmTekNachKassa.getValues();",
                    "fmTekNachKassa.down('#insTekPokKassa').setDisabled(true);",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "//console.log(value);",
                    "",
                    "",
                    "",
                    "QueryKassa.newOplata(value,function(results){",
                    "    if (results.success === \"1\"){",
                    "        stTekOplata.load({",
                    "            params: {",
                    "                what:'AppTekOplata',",
                    "                login:value.login,",
                    "                password:value.password,",
                    "                what_id: value.address_id,",
                    "                address_id: value.address_id",
                    "            },",
                    "            scope:this",
                    "        });",
                    "        stTekNachKassa.load({",
                    "            params: {",
                    "                login:value.login,",
                    "                password:value.password,",
                    "                what_id: value.address_id,",
                    "                address_id: value.address_id,",
                    "                raion_id: value.raion_id,",
                    "                what:'TekNachAllApp'",
                    "            },",
                    "            callback: function(rec,operation,succ){",
                    "                if(succ){",
                    "                    fmTekNachKassa.down('#printRaschListok').setDisabled(false);",
                    "                    fmTekNachKassa.down('#DoAll').setDisabled(false);",
                    "                    fmTekNachKassa.down('#DoAllReset').setDisabled(false);",
                    "                    fmTekNachKassa.down('#NextAllReset').setDisabled(false);",
                    "                    fmTekNachKassa.down('#NextAll').setDisabled(false);",
                    "                    fmTekNachKassa.getForm().loadRecord(rec[0]);",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "        Ext.MessageBox.show({title: 'Ввод оплаты ',",
                    "                             msg: results.msg,",
                    "                             buttons: Ext.MessageBox.OK,",
                    "                             icon: Ext.MessageBox.INFO",
                    "                            });",
                    "        me.resetFmKassa();",
                    "",
                    "",
                    "    }else{",
                    "        Ext.MessageBox.show({title: 'Ввод оплаты',",
                    "                             msg: results.msg,",
                    "                             buttons: Ext.MessageBox.OK,",
                    "                             icon: Ext.MessageBox.ERROR",
                    "                            });",
                    "        fmTekNachKassa.getForm().findField('newOplata').setValue(0).focus();",
                    "",
                    "    }",
                    "});",
                    ""
                ]
            },
            "name": "insNewOplata",
            "designerId": "a92aae8c-886e-4c1d-823b-4935ea747b58"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#newOplataKassa",
                "designer|targetType": "Ext.form.field.Number",
                "fn": "onNewOplataKassaSpecialkey",
                "implHandler": [
                    "// in use",
                    "//console.log(field.getFocusEl());",
                    "var value = field.getValue();",
                    "if ( e.getKey() === e.ENTER && !Ext.isEmpty(value) && value > 0) {",
                    "    this.insNewOplata();",
                    "}"
                ],
                "name": "specialkey",
                "scope": "me"
            },
            "name": "onNewOplataKassaSpecialkey",
            "designerId": "e2eea3d8-cf6b-4555-a37a-472405ff4aca"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#NextAllReset",
                "designer|targetType": "Ext.button.Button",
                "fn": "onNextAllResetClick",
                "implHandler": [
                    "this.resetFmKassa();"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onNextAllResetClick",
            "designerId": "99a753be-6b93-4fed-a624-b45705adca5b"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "resetFmKassa",
                "implHandler": [
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var prixod_id =values.get('prixod_id');",
                    "//console.log(prixod_id);",
                    "",
                    "var form = Ext.getCmp('fmTekNachKassa');",
                    "form.down('#DoAll').setDisabled(false);",
                    "form.down('#DoAllReset').setDisabled(true);",
                    "form.down('#NextAllReset').setDisabled(true);",
                    "form.down('#NextAll').setDisabled(false);",
                    "form.getForm().findField('cbNext1').setDisabled(false).setValue(false);",
                    "form.getForm().findField('cbNext2').setDisabled(false).setValue(false);",
                    "form.getForm().findField('cbNext3').setDisabled(false).setValue(false);",
                    "form.getForm().findField('cbNext4').setDisabled(false).setValue(false);",
                    "form.getForm().findField('cbNext5').setDisabled(false).setValue(false);",
                    "form.getForm().findField('cbNext6').setDisabled(false).setValue(false);",
                    "form.getForm().findField('cbNext7').setDisabled(false).setValue(false);",
                    "form.getForm().findField('cbNext8').setDisabled(false).setValue(false);",
                    "",
                    "form.getForm().findField('cbDo1').setDisabled(false).setValue(false);",
                    "form.getForm().findField('cbDo2').setDisabled(false).setValue(false);",
                    "form.getForm().findField('cbDo3').setDisabled(false).setValue(false);",
                    "form.getForm().findField('cbDo4').setDisabled(false).setValue(false);",
                    "form.getForm().findField('cbDo5').setDisabled(false).setValue(false);",
                    "form.getForm().findField('cbDo6').setDisabled(false).setValue(false);",
                    "form.getForm().findField('cbDo7').setDisabled(false).setValue(false);",
                    "form.getForm().findField('cbDo8').setDisabled(false).setValue(false);",
                    "",
                    "form.getForm().findField('zadol1').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('period1').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('nachisleno1').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('budjet1').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('oplacheno1').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('dolg1').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('zadol2').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('period2').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('nachisleno2').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('budjet2').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('oplacheno2').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('dolg2').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('zadol3').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('period3').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('nachisleno3').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('budjet3').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('oplacheno3').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('dolg3').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('zadol4').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('period4').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('nachisleno4').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('budjet4').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('oplacheno4').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('dolg4').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('zadol5').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('period5').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('nachisleno5').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('budjet5').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('oplacheno5').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('dolg5').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('zadol6').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('period6').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('nachisleno6').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('budjet6').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('oplacheno6').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('dolg6').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('zadol7').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('period7').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('nachisleno7').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('budjet7').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('oplacheno7').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('dolg7').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('zadol8').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('period8').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('nachisleno8').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('budjet8').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('oplacheno8').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('dolg8').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('subsidia1').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('subsidia2').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('subsidia3').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('subsidia4').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('subsidia5').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('subsidia6').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('subsidia7').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('subsidia8').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "",
                    "form.getForm().findField('subs1').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('subs2').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('subs3').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('subs4').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('subs5').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('subs6').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('subs7').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "form.getForm().findField('subs8').setFieldStyle('background-color: #F0F8FF; background-image: none;');",
                    "",
                    "",
                    "",
                    "",
                    "var newOplata = form.getForm().findField('newOplata').setValue(0);",
                    ""
                ]
            },
            "name": "resetFmKassa",
            "designerId": "beeaff68-f72f-4487-8280-c3d27ff5fef8"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#DoAllReset",
                "designer|targetType": "Ext.button.Button",
                "fn": "onDoAllResetClick",
                "implHandler": [
                    "this.resetFmKassa();"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onDoAllResetClick",
            "designerId": "8ca716da-50a7-4354-ba94-24bf4281bd7f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#printRaschListok",
                "designer|targetType": "Ext.button.Button",
                "fn": "onPrintRasListok",
                "implHandler": [
                    "//in use",
                    "var me = this;",
                    "var StUser = Ext.data.StoreManager.get(\"StUser\");",
                    "//var StReport = Ext.data.StoreManager.get(\"StReport\");",
                    "var values =StUser.getAt(0);",
                    "var address_id = values.data.address_id;",
                    "var raion_id = values.data.raion_id;",
                    "//console.log(values);",
                    "var usertype = 1;",
                    "",
                    "var tabPnCenter =  Ext.getCmp('tabPnCenter');//me.getTabPnCenter();",
                    "if (address_id) {",
                    "    var report = 'raspechatkaOplataApp';",
                    "    var namereport = 'Расчетка';",
                    "    var value = {",
                    "        login:values.get('login'),",
                    "        password:values.get('password'),",
                    "        report:report,",
                    "        what:report,",
                    "        raion_id: raion_id,",
                    "        address_id: address_id",
                    "    };",
                    "    var tab = tabPnCenter.child('#'+report);",
                    "    if (!tab) {",
                    "        tab  = tabPnCenter.add({",
                    "            xtype:'tabreportorg',",
                    "            title:namereport,",
                    "            id:''+report+''",
                    "        });",
                    "",
                    "    }",
                    "    tabPnCenter.setActiveTab(tab);",
                    "    var reppan = tab.getComponent(0);",
                    "    // Basic mask:",
                    "    var myMask = Ext.Msg.show({",
                    "        title:'Расчетный листок...',",
                    "        msg: 'Загрузка ...',",
                    "        buttons: Ext.Msg.CANCEL,",
                    "        wait: true,",
                    "        modal: true,",
                    "        icon: Ext.Msg.INFO",
                    "    });",
                    "    // var myMask = new Ext.LoadMask(reppan, {msg:\"Загрузка ...\"});",
                    "    // myMask.show();",
                    "    QueryKassa.getRaspechatka(value,function(data){",
                    "        if (data){",
                    "            reppan.update(data.content);",
                    "            Ext.REPORTCONTENT =data.content;",
                    "            Ext.REPORTSQL =data.sql;",
                    "            Ext.REPORTTITLE =report;",
                    "            myMask.close();",
                    "",
                    "            //myMask.hide();",
                    "            //  var win = window.open('','printwin');",
                    "            //  win.document.write(data.content);",
                    "            // win.document.close();",
                    "            // if(Ext.isIE){",
                    "            //   window.print();",
                    "            //} else {",
                    "            //  win.print();",
                    "            //  }",
                    "        } else {",
                    "            myMask.close();",
                    "            Ext.MessageBox.show({",
                    "                title: 'Ошибка ',",
                    "                msg: 'Документ не создан',",
                    "                buttons: Ext.MessageBox.OK,",
                    "                icon: Ext.MessageBox.ERROR",
                    "            });",
                    "        }",
                    "    });",
                    "",
                    "",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onPrintRasListok",
            "designerId": "4459126b-6d1c-498f-b764-f976076bb3cc"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#insDolgMgkc",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.button.Button",
                "fn": "onInsDolgMgkcClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stTekNachKassa = Ext.data.StoreManager.get(\"StTekNachKassa\");",
                    "var stTekOplata = Ext.data.StoreManager.get(\"StTekOplata\");//QueryKassa.getResults",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    house_id:values.get('house_id'),",
                    "    user_id:values.get('user_id'),",
                    "    raion_id:values.get('raion_id'),",
                    "    kassa_id:values.get('prixod_id'),",
                    "    what:'OplataDolgMgkc'",
                    "",
                    "};",
                    "",
                    "//FORMA",
                    "var fmTekNachKassa = Ext.getCmp('fmTekNachKassa');",
                    "var fdolg = fmTekNachKassa.getForm().findField('fdolg').getValue();",
                    "var value = fmTekNachKassa.getValues();",
                    "fmTekNachKassa.down('#insTekPokKassa').setDisabled(true);",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "//console.log(value);",
                    "",
                    "",
                    "",
                    "QueryKassa.newOplata(value,function(results){",
                    "    if (results.success === \"1\"){",
                    "        stTekOplata.load({",
                    "            params: {",
                    "                what:'AppTekOplata',",
                    "                login:value.login,",
                    "                password:value.password,",
                    "                what_id: value.address_id,",
                    "                address_id: value.address_id",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "        stTekNachKassa.load({",
                    "            params: {",
                    "                login:value.login,",
                    "                password:value.password,",
                    "                what_id: value.address_id,",
                    "                address_id: value.address_id,",
                    "                raion_id: value.raion_id,",
                    "                what:'TekNachAllApp'",
                    "            },",
                    "",
                    "            callback: function(rec,operation,succ){",
                    "                if(succ){",
                    "                    fmTekNachKassa.down('#printRaschListok').setDisabled(false);",
                    "                    fmTekNachKassa.down('#DoAll').setDisabled(false);",
                    "                    fmTekNachKassa.down('#DoAllReset').setDisabled(false);",
                    "                    fmTekNachKassa.down('#NextAllReset').setDisabled(false);",
                    "                    fmTekNachKassa.down('#NextAll').setDisabled(false);",
                    "                    fmTekNachKassa.getForm().loadRecord(rec[0]);",
                    "                }",
                    "            },",
                    "",
                    "            scope:this",
                    "        });",
                    "",
                    "        Ext.MessageBox.show({title: 'Ввод оплаты ',",
                    "                             msg: results.msg,",
                    "                             buttons: Ext.MessageBox.OK,",
                    "                             icon: Ext.MessageBox.INFO",
                    "                            });",
                    "        me.resetFmKassa();",
                    "",
                    "",
                    "    }else{",
                    "        Ext.MessageBox.show({title: 'Ввод оплаты',",
                    "                             msg: results.msg,",
                    "                             buttons: Ext.MessageBox.OK,",
                    "                             icon: Ext.MessageBox.ERROR",
                    "                            });",
                    "        fmTekNachKassa.getForm().findField('dolg9').setValue(fdolg).focus();",
                    "",
                    "    }",
                    "});",
                    ""
                ],
                "name": "click"
            },
            "name": "onInsDolgMgkcClick",
            "designerId": "b4d936bd-8b3f-43c2-9a79-9ec78da4b6fb"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#printRaschDolgMgkc",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.button.Button",
                "fn": "onPrintRaschDolgMgkcClick",
                "implHandler": [
                    "//in use",
                    "var me = this;",
                    "var StUser = Ext.data.StoreManager.get(\"StUser\");",
                    "//var StReport = Ext.data.StoreManager.get(\"StReport\");",
                    "var values =StUser.getAt(0);",
                    "var address_id = values.data.address_id;",
                    "var raion_id = values.data.raion_id;",
                    "//console.log(values);",
                    "var usertype = 1;",
                    "",
                    "var tabPnCenter =  Ext.getCmp('tabPnCenter');//me.getTabPnCenter();",
                    "if (address_id) {",
                    "    var report = 'raspechatkaOplataDolgMgkc';",
                    "    var namereport = 'Расчетка';",
                    "    var value = {",
                    "        login:values.get('login'),",
                    "        password:values.get('password'),",
                    "        report:report,",
                    "        what:report,",
                    "        raion_id: raion_id,",
                    "        address_id: address_id",
                    "    };",
                    "    var tab = tabPnCenter.child('#'+report);",
                    "    if (!tab) {",
                    "        tab  = tabPnCenter.add({",
                    "            xtype:'tabreportorg',",
                    "            title:namereport,",
                    "            id:''+report+''",
                    "        });",
                    "",
                    "    }",
                    "    tabPnCenter.setActiveTab(tab);",
                    "    var reppan = tab.getComponent(0);",
                    "    // Basic mask:",
                    "    var myMask = Ext.Msg.show({",
                    "        title:'Расчетный листок...',",
                    "        msg: 'Загрузка ...',",
                    "        buttons: Ext.Msg.CANCEL,",
                    "        wait: true,",
                    "        modal: true,",
                    "        icon: Ext.Msg.INFO",
                    "    });",
                    "    ",
                    "    QueryKassa.getRaspechatka(value,function(data){",
                    "        if (data){",
                    "            reppan.update(data.content);",
                    "            Ext.REPORTCONTENT =data.content;",
                    "            Ext.REPORTSQL =data.sql;",
                    "            Ext.REPORTTITLE =report;",
                    "            myMask.close();",
                    "",
                    "        } else {",
                    "            myMask.close();",
                    "            Ext.MessageBox.show({",
                    "                title: 'Ошибка ',",
                    "                msg: 'Документ не создан',",
                    "                buttons: Ext.MessageBox.OK,",
                    "                icon: Ext.MessageBox.ERROR",
                    "            });",
                    "        }",
                    "    });",
                    "",
                    "",
                    "}"
                ],
                "name": "click"
            },
            "name": "onPrintRaschDolgMgkcClick",
            "designerId": "23364898-2bc3-4193-9edb-53ff4303cf80"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#insDolgDobrobut",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.button.Button",
                "fn": "onInsDolgDobrobutClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stTekNachKassa = Ext.data.StoreManager.get(\"StTekNachKassa\");",
                    "var stTekOplata = Ext.data.StoreManager.get(\"StTekOplata\");//QueryKassa.getResults",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    house_id:values.get('house_id'),",
                    "    user_id:values.get('user_id'),",
                    "    raion_id:values.get('raion_id'),",
                    "    kassa_id:values.get('prixod_id'),",
                    "    what:'OplataDolgDobrobut'",
                    "",
                    "};",
                    "",
                    "//FORMA",
                    "var fmTekNachKassa = Ext.getCmp('fmTekNachKassa');",
                    "var ddolg = fmTekNachKassa.getForm().findField('ddolg').getValue();",
                    "var value = fmTekNachKassa.getValues();",
                    "fmTekNachKassa.down('#insTekPokKassa').setDisabled(true);",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "//console.log(value);",
                    "",
                    "",
                    "",
                    "QueryKassa.newOplata(value,function(results){",
                    "    if (results.success === \"1\"){",
                    "        stTekOplata.load({",
                    "            params: {",
                    "                what:'AppTekOplata',",
                    "                login:value.login,",
                    "                password:value.password,",
                    "                what_id: value.address_id,",
                    "                address_id: value.address_id",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "        stTekNachKassa.load({",
                    "            params: {",
                    "                login:value.login,",
                    "                password:value.password,",
                    "                what_id: value.address_id,",
                    "                address_id: value.address_id,",
                    "                raion_id: value.raion_id,",
                    "                what:'TekNachAllApp'",
                    "            },",
                    "",
                    "            callback: function(rec,operation,succ){",
                    "                if(succ){",
                    "                    fmTekNachKassa.down('#printRaschListok').setDisabled(false);",
                    "                    fmTekNachKassa.down('#DoAll').setDisabled(false);",
                    "                    fmTekNachKassa.down('#DoAllReset').setDisabled(false);",
                    "                    fmTekNachKassa.down('#NextAllReset').setDisabled(false);",
                    "                    fmTekNachKassa.down('#NextAll').setDisabled(false);",
                    "                    fmTekNachKassa.getForm().loadRecord(rec[0]);",
                    "                }",
                    "            },",
                    "",
                    "            scope:this",
                    "        });",
                    "",
                    "        Ext.MessageBox.show({title: 'Ввод оплаты ',",
                    "                             msg: results.msg,",
                    "                             buttons: Ext.MessageBox.OK,",
                    "                             icon: Ext.MessageBox.INFO",
                    "                            });",
                    "        me.resetFmKassa();",
                    "",
                    "",
                    "    }else{",
                    "        Ext.MessageBox.show({title: 'Ввод оплаты',",
                    "                             msg: results.msg,",
                    "                             buttons: Ext.MessageBox.OK,",
                    "                             icon: Ext.MessageBox.ERROR",
                    "                            });",
                    "        fmTekNachKassa.getForm().findField('dolg10').setValue(ddolg).focus();",
                    "",
                    "    }",
                    "});",
                    ""
                ],
                "name": "click"
            },
            "name": "onInsDolgDobrobutClick",
            "designerId": "2cb506c6-8cd4-4203-bf1d-4f6885d67bda"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#printRaschDolgDobrobut",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.button.Button",
                "fn": "onPrintRaschDolgDobrobutClick",
                "implHandler": [
                    "//in use",
                    "var me = this;",
                    "var StUser = Ext.data.StoreManager.get(\"StUser\");",
                    "//var StReport = Ext.data.StoreManager.get(\"StReport\");",
                    "var values =StUser.getAt(0);",
                    "var address_id = values.data.address_id;",
                    "var raion_id = values.data.raion_id;",
                    "//console.log(values);",
                    "var usertype = 1;",
                    "",
                    "var tabPnCenter =  Ext.getCmp('tabPnCenter');//me.getTabPnCenter();",
                    "if (address_id) {",
                    "    var report = 'raspechatkaOplataDolgDobrobut';",
                    "    var namereport = 'Расчетка';",
                    "    var value = {",
                    "        login:values.get('login'),",
                    "        password:values.get('password'),",
                    "        report:report,",
                    "        what:report,",
                    "        raion_id: raion_id,",
                    "        address_id: address_id",
                    "    };",
                    "    var tab = tabPnCenter.child('#'+report);",
                    "    if (!tab) {",
                    "        tab  = tabPnCenter.add({",
                    "            xtype:'tabreportorg',",
                    "            title:namereport,",
                    "            id:''+report+''",
                    "        });",
                    "",
                    "    }",
                    "    tabPnCenter.setActiveTab(tab);",
                    "    var reppan = tab.getComponent(0);",
                    "    // Basic mask:",
                    "    var myMask = Ext.Msg.show({",
                    "        title:'Расчетный листок...',",
                    "        msg: 'Загрузка ...',",
                    "        buttons: Ext.Msg.CANCEL,",
                    "        wait: true,",
                    "        modal: true,",
                    "        icon: Ext.Msg.INFO",
                    "    });",
                    "",
                    "    QueryKassa.getRaspechatka(value,function(data){",
                    "        if (data){",
                    "            reppan.update(data.content);",
                    "            Ext.REPORTCONTENT =data.content;",
                    "            Ext.REPORTSQL =data.sql;",
                    "            Ext.REPORTTITLE =report;",
                    "            myMask.close();",
                    "",
                    "        } else {",
                    "            myMask.close();",
                    "            Ext.MessageBox.show({",
                    "                title: 'Ошибка ',",
                    "                msg: 'Документ не создан',",
                    "                buttons: Ext.MessageBox.OK,",
                    "                icon: Ext.MessageBox.ERROR",
                    "            });",
                    "        }",
                    "    });",
                    "",
                    "",
                    "}"
                ],
                "name": "click"
            },
            "name": "onPrintRaschDolgDobrobutClick",
            "designerId": "502f0dd5-2183-4e39-9032-b60dd842d1b3"
        }
    ]
}