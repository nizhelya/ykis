{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": "crBti",
        "designer|userClassName": "CrBti"
    },
    "designerId": "2579519e-2b34-4369-b7f5-62ac222a123d",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabDogovor",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabDogovorActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var StDogovor = Ext.data.StoreManager.get(\"StDogovor\");",
                    "var StCompany = Ext.data.StoreManager.get(\"StCompany\");",
                    "",
                    "switch (values.get('role')){",
                    "    case \"2\":",
                    "    case \"5\":",
                    "    case \"3\":",
                    "    case \"4\":",
                    "        StCompany.load({",
                    "            params: {",
                    "                what:'companyOne',",
                    "                role:values.get('role'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            scope:this",
                    "        });",
                    "        break;",
                    "    case \"7\":",
                    "        StCompany.load({",
                    "            params: {",
                    "                what:'company',",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            scope:this",
                    "        });",
                    "        break;",
                    "    default:",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ошибка ',",
                    "            msg: 'У Вас нет прав открывать базу договоров',",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "",
                    "}",
                    "",
                    "",
                    ""
                ],
                "name": "activate"
            },
            "name": "onTabDogovorActivate",
            "designerId": "7db5ba99-4243-4e74-bd74-7bf2a0b0f30f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabAppBti",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabAppBtiActivate",
                "implHandler": [
                    "//in use",
                    "",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var password = values.get('password');",
                    "var address_id = values.get('address_id');",
                    "var raion_id = values.get('raion_id');",
                    "var address = values.get('address');",
                    "var house_id = values.get('house_id');",
                    "var prixod_id = values.get('prixod_id');",
                    "",
                    "//LOGIKA",
                    "",
                    "var fmAppartment = Ext.getCmp('fmAppartment');",
                    "",
                    "",
                    "//STORE",
                    "",
                    "var stAppartment = Ext.data.StoreManager.get(\"StAppartment\");",
                    "var stHAppartment = Ext.data.StoreManager.get(\"StHAppartment\");",
                    "var stFamaly = Ext.data.StoreManager.get(\"StFamaly\");",
                    "",
                    "",
                    "",
                    "stAppartment.load({",
                    "    params: {",
                    "        what_id:address_id,",
                    "        address_id: address_id,",
                    "        what:'Appartment',",
                    "        login:login,",
                    "        password:password",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "",
                    "        //   console.log(records);",
                    "",
                    "        if(success){",
                    "            stFamaly.removeAll();",
                    "            stFamaly.load({",
                    "                params: {",
                    "                    what_id:address_id,",
                    "                    address_id: address_id,",
                    "                    what:'Famaly',",
                    "                    login:login,",
                    "                    password:password",
                    "                },",
                    "                scope:this",
                    "            });",
                    "            stHAppartment.load({",
                    "                params: {",
                    "                    what_id:address_id,",
                    "                    address_id: address_id,",
                    "                    what:'HistoryAppartment',",
                    "                    login:login,",
                    "                    password:password",
                    "                },",
                    "                scope:this",
                    "            });",
                    "            if (records.length) {",
                    "                fmAppartment.getForm().loadRecord(records[0]);",
                    "",
                    "                var data_change = fmAppartment.getForm().findField('data_change').getValue();",
                    "                var what_change = fmAppartment.getForm().findField('what_change').getValue();",
                    "",
                    "                fmAppartment.getForm().findField('chdata').setValue(data_change);",
                    "                fmAppartment.getForm().findField('info').setValue(what_change);",
                    "            }",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});",
                    "",
                    ""
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabAppBtiActivate",
            "designerId": "5704f84f-06c1-441c-aa9b-a15d4649704f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#winBtnAddLgotnik",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.button.Button",
                "fn": "onWinBtnAddLgotnikClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//CONTROLLER",
                    "",
                    "var value = button.findParentByType('form').getValues();",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var vibor = values.get('vibor');",
                    "this.getWinLgotnik().close();",
                    "switch (vibor){",
                    "    case 'addLgotnik':",
                    "        me.addLgotnik(value);",
                    "        break;",
                    "    case 'editLgotnik':",
                    "        me.editLgotnik(value);",
                    "        break;",
                    "    case 'editTabLgotnik':",
                    "        me.editTabLgotnik(value);",
                    "        break;",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onWinBtnAddLgotnikClick",
            "designerId": "009978d3-a5b0-40c2-8c18-08af662aa69e"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "autoCreate": null,
                "ref": "WinDogovor",
                "selector": "#winDogovor",
                "xtype": null
            },
            "name": "WinDogovor",
            "designerId": "5f4ae8cc-0f15-4023-9046-8925fcb3991d"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "autoCreate": null,
                "ref": "WinDogovorRestr",
                "selector": "#winDogovorRestr",
                "xtype": null
            },
            "name": "WinDogovorRestr",
            "designerId": "05eb94df-80fa-469f-a224-332711fa19f5"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "addLgotnik",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stLgotnik = Ext.data.StoreManager.get(\"StLgotnik\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:\"addLgotnik\"",
                    "};",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if (results.success==='1'){",
                    "        stLgotnik.removeAll();",
                    "        stLgotnik.load({",
                    "            params: {",
                    "                what_id:value.address_id,",
                    "                address_id: value.address_id,",
                    "                what:'Lgotnik',",
                    "                login:value.login,",
                    "                password:value.password",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    Ext.MessageBox.show({",
                    "                        title: 'Добавление льготника',",
                    "                        msg: results.msg,",
                    "                        buttons: Ext.MessageBox.OK,",
                    "                        icon: Ext.MessageBox.INFO",
                    "                    });",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Добавление льготника',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "});",
                    ""
                ]
            },
            "name": "addLgotnik",
            "designerId": "ffc5dca9-0347-4d80-9a9d-96932adfb276"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "addCitizen",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StFamaly = Ext.data.StoreManager.get(\"StFamaly\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:\"addCitizen\"",
                    "};",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if (results.success==='1'){",
                    "        StFamaly.removeAll();",
                    "        StFamaly.load({",
                    "            params: {",
                    "                what_id:value.address_id,",
                    "                address_id: value.address_id,",
                    "                what:'Famaly',",
                    "                login:value.login,",
                    "                password:value.password",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    Ext.MessageBox.show({",
                    "                        title: 'Добавление льготника',",
                    "                        msg: results.msg,",
                    "                        buttons: Ext.MessageBox.OK,",
                    "                        icon: Ext.MessageBox.INFO",
                    "                    });",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Добавление квартиросьемщика',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "});",
                    ""
                ]
            },
            "name": "addCitizen",
            "designerId": "9118b52e-3419-47ab-a65f-364e7164754d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "DogovorVik",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stDogovor = Ext.data.StoreManager.get(\"StDogovor\");",
                    "//var stAppartment = Ext.data.StoreManager.get(\"StAppartment\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:values.get('vibor')",
                    "};",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if (results.success==='1'){",
                    "",
                    "        stDogovor.removeAll();",
                    "        stDogovor.load({",
                    "            params: {",
                    "                dog_id:value.dog_id,",
                    "                address_id: value.address_id,",
                    "                what:'getDogovorVik',",
                    "                login:value.login,",
                    "                password:value.password",
                    "            },",
                    "                        scope:this",
                    "",
                    "        });",
                    "         Ext.MessageBox.show({",
                    "            title: 'Договора',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        me.onTabAppBtiActivate();",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Договора',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "});",
                    "",
                    ""
                ]
            },
            "name": "DogovorVik",
            "designerId": "7a04cdfa-cc39-4d63-829e-16ad264e189f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "DogRestrVik",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stDogovor = Ext.data.StoreManager.get(\"StDogovor\");",
                    "//var stAppartment = Ext.data.StoreManager.get(\"StAppartment\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:values.get('vibor')",
                    "};",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if (results.success==='1'){",
                    "",
                    "        stDogovor.removeAll();",
                    "        stDogovor.load({",
                    "            params: {",
                    "                dog_id:value.dog_id,",
                    "                address_id: value.address_id,",
                    "                what:'getDogRestrVik',",
                    "                login:value.login,",
                    "                password:value.password",
                    "            },",
                    "            scope:this",
                    "",
                    "        });",
                    "        Ext.MessageBox.show({",
                    "            title: 'Договора',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        me.onTabAppBtiActivate();",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Договора',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "});",
                    "",
                    ""
                ]
            },
            "name": "DogRestrVik",
            "designerId": "14d67e89-0fc7-4055-b7a9-8c60978c7485"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "DogovorYtke",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stDogovor = Ext.data.StoreManager.get(\"StDogovor\");",
                    "//var stAppartment = Ext.data.StoreManager.get(\"StAppartment\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:values.get('vibor')",
                    "};",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if (results.success==='1'){",
                    "",
                    "        stDogovor.removeAll();",
                    "        stDogovor.load({",
                    "            params: {",
                    "                dog_id:value.dog_id,",
                    "                address_id: value.address_id,",
                    "                what:'getDogovorYtke',",
                    "                login:value.login,",
                    "                password:value.password",
                    "                },",
                    "            scope:this",
                    "            ",
                    "        });",
                    "        me.onTabAppBtiActivate();",
                    "         Ext.MessageBox.show({",
                    "            title: 'Договора',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Договора',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "});"
                ]
            },
            "name": "DogovorYtke",
            "designerId": "c6ee67a1-216e-485e-8d7a-25f752aa5ef0"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "editLgotnik",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stLgotnik = Ext.data.StoreManager.get(\"StLgotnik\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:\"editLgotnik\"",
                    "};",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if (results.success==='1'){",
                    "        stLgotnik.removeAll();",
                    "        stLgotnik.load({",
                    "            params: {",
                    "                what_id:value.address_id,",
                    "                address_id: value.address_id,",
                    "                what:'Lgotnik',",
                    "                login:value.login,",
                    "                password:value.password",
                    "            },           ",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    Ext.MessageBox.show({",
                    "                        title: 'Редактирование данных по льготнику',",
                    "                        msg: results.msg,",
                    "                        buttons: Ext.MessageBox.OK,",
                    "                        icon: Ext.MessageBox.INFO",
                    "                    });",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Редактирование данных по льготнику',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "});",
                    ""
                ]
            },
            "name": "editLgotnik",
            "designerId": "82a29ff8-8415-40ce-8260-23c86385412e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "editCitizen",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StFamaly = Ext.data.StoreManager.get(\"StFamaly\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:\"editCitizen\"",
                    "};",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if (results.success==='1'){",
                    "        StFamaly.removeAll();",
                    "        StFamaly.load({",
                    "            params: {",
                    "                what_id:value.address_id,",
                    "                address_id: value.address_id,",
                    "                what:'Famaly',",
                    "                login:value.login,",
                    "                password:value.password",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    Ext.MessageBox.show({",
                    "                        title: 'Редактирование данных по квартиросьемщику',",
                    "                        msg: results.msg,",
                    "                        buttons: Ext.MessageBox.OK,",
                    "                        icon: Ext.MessageBox.INFO",
                    "                    });",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Редактирование данных по квартиросьемщику',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "});",
                    ""
                ]
            },
            "name": "editCitizen",
            "designerId": "f1b43add-4b7f-40a8-b8f8-dde6ccaa7981"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grAppHistory",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrAppHistorySelectionChange",
                "implHandler": [
                    "",
                    "//console.log(selected[0]);",
                    "//LOGIN & PASSWORD",
                    "var form = Ext.getCmp('fmAppartment');",
                    "if (selected.length > 0) {",
                    "    form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);",
                    "}",
                    ""
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrAppHistorySelectionChange",
            "designerId": "c37fd35a-8003-4f3c-9385-6928f5ca0da7"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "editTabLgotnik",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stLgotnik = Ext.data.StoreManager.get(\"StLgotnikTab\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:\"editLgotnik\"",
                    "};",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if (results.success==='1'){",
                    "        stLgotnik.removeAll();",
                    "        stLgotnik.load({",
                    "            params: {",
                    "                house_id: value.house_id,",
                    "                what:value.report,",
                    "                login:value.login,",
                    "                password:value.password",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    Ext.MessageBox.show({",
                    "                        title: 'Редактирование данных по льготнику',",
                    "                        msg: results.msg,",
                    "                        buttons: Ext.MessageBox.OK,",
                    "                        icon: Ext.MessageBox.INFO",
                    "                    });",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Редактирование данных по льготнику',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "});",
                    ""
                ]
            },
            "name": "editTabLgotnik",
            "designerId": "b4654d7d-81ed-44f6-ac84-da4805a75cf7"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btAddAddress",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtAddAddressClick",
                "implHandler": [
                    "// in use",
                    "var form = button.findParentByType('form');",
                    "var value = form.getValues();",
                    "",
                    "var  cbAddress = form.getForm().findField('address');",
                    "",
                    "//console.log(value);",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StAddress = Ext.data.StoreManager.get(\"StAddressOrg\");",
                    "",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    what:\"newAddress\"",
                    "};",
                    "",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "//LOGIKA",
                    "",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if(results.success===\"1\"){",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод нового адреса',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        StAddress.removeAll();",
                    "        cbAddress.clearValue();",
                    "        cbAddress.setDisabled(false);",
                    "",
                    "        StAddress.load({",
                    "            params: {",
                    "                what:'AddressFromHouses',",
                    "                what_id: value.house_id",
                    "            },",
                    "            scope: this",
                    "        });",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод нового адреса',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtAddAddressClick",
            "designerId": "a62d7881-63fe-44f6-a3e8-c0832a979816"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnDeleteAddress",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtnDeleteAddressClick",
                "implHandler": [
                    "// in use",
                    "var form = button.findParentByType('form');",
                    "var value = form.getValues();",
                    "var  cbAddress = Ext.getCmp('cbAddress');",
                    "var  chbDeleteAddress = Ext.getCmp('chbDeleteAddress');",
                    "var  fmDeleteAddress = Ext.getCmp('fmDeleteAddress');",
                    "//console.log(value);",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StAddress = Ext.data.StoreManager.get(\"StAddressOrg\");",
                    "",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    what:\"delAddress\"",
                    "};",
                    "",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "//LOGIKA",
                    "",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if(results.success===\"1\"){",
                    "        Ext.MessageBox.show({",
                    "            title: 'Удаление адреса',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "",
                    "        chbDeleteAddress.setVisible(false);",
                    "        fmDeleteAddress.setVisible(false);",
                    "        StAddress.removeAll();",
                    "        cbAddress.clearValue();",
                    "        cbAddress.setDisabled(false);",
                    "",
                    "        StAddress.load({",
                    "            params: {",
                    "                what:'AddressFromHouses',",
                    "                what_id: value.delHouseId",
                    "            },",
                    "            scope: this",
                    "        });",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Удаление адреса',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnDeleteAddressClick",
            "designerId": "e06b3e8e-983f-4292-a080-ce5f67c13d2c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#winBtnAddDogovor",
                "designer|targetType": "Ext.button.Button",
                "fn": "onWinBtnAddDogovorClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//CONTROLLER",
                    "",
                    "var value = button.findParentByType('form').getValues();",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var vibor = values.get('vibor');",
                    "this.getWinDogovor().close();",
                    "switch (vibor){",
                    "    case 'addDogovorVik':",
                    "        me.DogovorVik(value);",
                    "        break;",
                    "    case 'editDogovorVik':",
                    "        me.DogovorVik(value);",
                    "        break;",
                    "           case 'addDogovorYtke':",
                    "        me.DogovorYtke(value);",
                    "        break;",
                    "    case 'editDogovorYtke':",
                    "        me.DogovorYtke(value);",
                    "        break;",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onWinBtnAddDogovorClick",
            "designerId": "94826598-3d5f-4bc0-81e7-2017d68ee98a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btAddOsmd",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtAddOsmdClick",
                "name": "click"
            },
            "name": "onBtAddOsmdClick",
            "designerId": "3fdc6e14-0f49-4ae8-b308-f2063705dbe3"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "WinLgotnik",
                "selector": "#winLgotnik"
            },
            "name": "WinLgotnik",
            "designerId": "80b5fdb4-4a87-46ef-9163-40c0b9030fc3"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "WinFamaly",
                "selector": "#winFamaly"
            },
            "name": "WinFamaly",
            "designerId": "7666b002-9d54-43b1-9697-e67571600c09"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#winBtnAddCitizen",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.button.Button",
                "fn": "onWinBtnAddCitizenClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//CONTROLLER",
                    "",
                    "var value = button.findParentByType('form').getValues();",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var vibor = values.get('vibor');",
                    "//console.log(vibor);",
                    "",
                    "this.getWinFamaly().close();",
                    "switch (vibor){",
                    "    case 'addCitizen':",
                    "        me.addCitizen(value);",
                    "        break;",
                    "    case 'editCitizen':",
                    "        me.editCitizen(value);",
                    "        break;",
                    "",
                    "}"
                ],
                "name": "click"
            },
            "name": "onWinBtnAddCitizenClick",
            "designerId": "5d42c71b-66cb-4e57-a4c9-824e2bb54352"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#winBtnAddDogovorRestr",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.button.Button",
                "fn": "onWinBtnAddDogovorRestrClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//CONTROLLER",
                    "",
                    "var value = button.findParentByType('form').getValues();",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var vibor = values.get('vibor');",
                    "this.getWinDogovorRestr().close();",
                    "switch (vibor){",
                    "    case 'addDogRestrVik':",
                    "        me.DogRestrVik(value);",
                    "        break;",
                    "    case 'editDogRestrVik':",
                    "        me.DogRestrVik(value);",
                    "        break;",
                    "",
                    "}"
                ],
                "name": "click"
            },
            "name": "onWinBtnAddDogovorRestrClick",
            "designerId": "de122f56-1c18-4159-a753-c222b26caca9"
        }
    ]
}