{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": "crOrg",
        "designer|userClassName": "CrOrg",
        "models": [
            "MdFilial",
            "MdLogin",
            "MdUser",
            "MdAddress",
            "MdTreeOrg",
            "MdOrgPhones"
        ],
        "stores": [
            "StFilial",
            "StLogin",
            "StUser",
            "StAddress",
            "StTreeOrg",
            "StOrgPhones"
        ],
        "views": [
            "menu.TabPnCenter"
        ]
    },
    "designerId": "4b663c0b-5f72-49b7-92b8-4526e50d50a9",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabSchetVik",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "org.TabSchetVik",
                "fn": "onTabSchetVikActivate",
                "implHandler": [
                    "",
                    "//STORE",
                    "var dataNachSchetVik = Ext.getCmp('dataNachSchetVik');",
                    "var dt = new Date() ;",
                    "var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StSchetVik = Ext.data.StoreManager.get(\"StSchetVik\");",
                    "dataNachSchetVik.setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "",
                    "StSchetVik.load({",
                    "    params: {",
                    "        what:'getSchetVik',",
                    "        data: firstDay,",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    scope:this",
                    "});",
                    ""
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabSchetVikActivate",
            "designerId": "591b8223-529a-4256-a36d-ea201a147cc1"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabOplataOrg",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "org.TabOplataOrg",
                "fn": "onTabOplataOrgActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "//console.log(stUser);",
                    "",
                    "var StOplataOrg = Ext.data.StoreManager.get(\"StOplataOrg\");",
                    "var dataNach = Ext.getCmp('dataNachOplataOrg');",
                    "",
                    "var dt = new Date() ;",
                    "//var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;",
                    "dataNach.setValue(Ext.Date.format(dt, 'Y-m-d'));",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "",
                    "StOplataOrg.load({",
                    "    params: {",
                    "        what:'getOplataOrg',",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    }",
                    "});",
                    ""
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabOplataOrgActivate",
            "designerId": "509d7bfd-f778-439a-8f5f-ea92168d181a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabFmPererOtopl",
                "designer|targetType": "Ext.form.Panel",
                "fn": "onTabFmPererOtoplActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNach\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "// FORM",
                    "var form = component;",
                    "// DATA",
                    "var data = Ext.getCmp('dataPererOrg').getValue();",
                    "",
                    "//LOGIKA",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'OtoplenieOrg',",
                    "        filial_id: values.get('filial_id'),",
                    "        data: data,",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            form.getForm().reset();",
                    "            form.getForm().loadRecord(records[0]);",
                    "            form.doLayout();",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabFmPererOtoplActivate",
            "designerId": "d369b7f9-50c0-41da-876a-8cb39f6ca41f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabFmPererStoki",
                "designer|targetType": "Ext.form.Panel",
                "fn": "onTabFmPererStokiActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNach\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "// FORM",
                    "var form = component;",
                    "// DATA",
                    "var data = Ext.getCmp('dataPererOrg').getValue();",
                    "",
                    "//LOGIKA ",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'StokiOrg',",
                    "        filial_id: values.get('filial_id'),",
                    "        data: data,       ",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    }, ",
                    "    callback: function(records,operation,success){       ",
                    "        if(success){",
                    "            form.getForm().reset();",
                    "            form.getForm().loadRecord(records[0]);",
                    "            form.doLayout();",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this  ",
                    "});"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabFmPererStokiActivate",
            "designerId": "fe6fed0e-c017-4628-8723-dea8f0c9f9fc"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabFmPererVoda",
                "designer|targetType": "Ext.form.Panel",
                "fn": "onTabFmPererVodaActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNach\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "// FORM",
                    "var form = component;",
                    "// DATA",
                    "var data = Ext.getCmp('dataPererOrg').getValue();",
                    "",
                    "//LOGIKA ",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'VodaOrg',",
                    "        filial_id: values.get('filial_id'),",
                    "        data: data,       ",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    }, ",
                    "    callback: function(records,operation,success){       ",
                    "        if(success){",
                    "            //    console.log(records[0]);",
                    "            form.getForm().reset();",
                    "            //   console.log(form.getForm());",
                    "            form.getForm().loadRecord(records[0]);",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this  ",
                    "});"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabFmPererVodaActivate",
            "designerId": "56dd56bf-29c2-41ed-bab4-487e7ae8acfd"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabFmPererPodogrev",
                "designer|targetType": "Ext.form.Panel",
                "fn": "onTabFmPererPodogrevActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNach\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "// FORM",
                    "var form = component;",
                    "// DATA",
                    "var data = Ext.getCmp('dataPererOrg').getValue();",
                    "",
                    "//LOGIKA ",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'PodogrevOrg',",
                    "        filial_id: values.get('filial_id'),",
                    "        data: data,       ",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    }, ",
                    "    callback: function(records,operation,success){       ",
                    "        if(success){",
                    "            //  console.log(records[0]);",
                    "            form.getForm().reset();",
                    "            //   console.log(form.getForm());",
                    "            form.getForm().loadRecord(records[0]);",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this  ",
                    "});"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabFmPererPodogrevActivate",
            "designerId": "2762aed6-eb1c-459c-8e15-d3a9d67b74a8"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabLgotaUtszn",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabLgotaUtsznActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var StCompany = Ext.data.StoreManager.get(\"StCompany\");",
                    "",
                    "switch (values.get('role')){",
                    "    case \"1\":",
                    "    case \"2\":",
                    "    case \"5\":",
                    "    case \"3\":",
                    "    case \"4\":",
                    "        StCompany.load({",
                    "            params: {",
                    "                what:'companyOne',",
                    "                role:values.get('role'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            scope:this",
                    "        });",
                    "        break;",
                    "    case \"7\":",
                    "        StCompany.load({",
                    "            params: {",
                    "                what:'company',",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            scope:this",
                    "        });",
                    "        break;",
                    "    default:",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ошибка ',",
                    "            msg: 'У Вас нет прав открывать базу РКО',",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "",
                    "}"
                ],
                "name": "activate"
            },
            "name": "onTabLgotaUtsznActivate",
            "designerId": "60a70d94-eeef-431b-9ce7-d67c60443b4a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabOrgPerer",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabPererActivate",
                "implHandler": [
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stTekNachFilial = Ext.data.StoreManager.get(\"StTekNachFilial\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var stFilial = stTekNachFilial.getAt(0);",
                    "var data = Ext.getCmp('dataPererOrg').setValue(Ext.Date.getFirstDateOfMonth(new Date()) );",
                    "",
                    "var tabPnCenter = Ext.getCmp('tabPnFilialPerer');  ",
                    "",
                    "tabPnCenter.child('#tabFmPererOtopl').tab.hide(); ",
                    "tabPnCenter.child('#tabFmPererPodogrev').tab.hide();    ",
                    "tabPnCenter.child('#tabFmPererVoda').tab.hide();",
                    "tabPnCenter.child('#tabFmPererStoki').tab.hide();",
                    "tabPnCenter.child('#tabInitPererOrg').tab.show(); ",
                    "tabPnCenter.setActiveTab('tabInitPererOrg'); ",
                    "",
                    "if(stTekNachFilial.data.length === 0){",
                    "    stTekNachFilial.load({",
                    "        params: {",
                    "            what:'TekNachFilial',",
                    "            filial_id:values.get('filial_id'),",
                    "            login:values.get('login'),",
                    "            password:values.get('password')",
                    "        },",
                    "        scope:this",
                    "    }); ",
                    "}"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabPererActivate",
            "designerId": "030e087e-3b05-4116-a44e-7fff6ce6e48f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabSubsUtszn",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabSubsUtsznActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var StCompany = Ext.data.StoreManager.get(\"StCompany\");",
                    "//var gridAll = Ext.getCmp('grHousesOsmdAll');",
                    "//var storeAll = gridAll.getStore();",
                    "//var gridRko = Ext.getCmp('grHousesOsmdRko');",
                    "//var storeRko = gridRko.getStore();",
                    "//toreAll.removeAll();",
                    "//storeRko.removeAll();",
                    "//console.log(values.get('role'));",
                    "switch (values.get('role')){",
                    "    case \"1\":",
                    "    case \"2\":",
                    "    case \"5\":",
                    "    case \"3\":",
                    "    case \"4\":",
                    "        StCompany.load({",
                    "            params: {",
                    "                what:'companyOne',",
                    "                role:values.get('role'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            scope:this",
                    "        });",
                    "        break;",
                    "    case \"7\":",
                    "        StCompany.load({",
                    "            params: {",
                    "                what:'company',",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            scope:this",
                    "        });",
                    "        break;",
                    "    default:",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ошибка ',",
                    "            msg: 'У Вас нет прав открывать базу РКО',",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "",
                    "}"
                ],
                "name": "activate"
            },
            "name": "onTabSubsUtsznActivate",
            "designerId": "45a0e53f-c142-4d53-9b92-4bf9f17314a8"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabOsmdHouses",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabOsmdHousesActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var StCompany = Ext.data.StoreManager.get(\"StCompany\");",
                    "//var gridAll = Ext.getCmp('grHousesOsmdAll');",
                    "//var storeAll = gridAll.getStore();",
                    "//var gridRko = Ext.getCmp('grHousesOsmdRko');",
                    "//var storeRko = gridRko.getStore();",
                    "//toreAll.removeAll();",
                    "//storeRko.removeAll();",
                    "//console.log(values.get('role'));",
                    "switch (values.get('role')){",
                    "    case \"1\":",
                    "    case \"2\":",
                    "    case \"5\":",
                    "    case \"3\":",
                    "    case \"4\":",
                    "        StCompany.load({",
                    "            params: {",
                    "                what:'companyOne',",
                    "                role:values.get('role'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            scope:this",
                    "        });",
                    "        break;",
                    "    case \"7\":",
                    "        StCompany.load({",
                    "            params: {",
                    "                what:'company',",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            scope:this",
                    "        });",
                    "        break;",
                    "    default:",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ошибка ',",
                    "            msg: 'У Вас нет прав открывать базу РКО',",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "",
                    "}"
                ],
                "name": "activate"
            },
            "name": "onTabOsmdHousesActivate",
            "designerId": "4bf5f13b-5a20-471d-959f-9fc3fe297d6e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabHouseResidents",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabHouseResidentsActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var StCompany = Ext.data.StoreManager.get(\"StCompany\");",
                    "var stHAppartment = Ext.data.StoreManager.get(\"StHAppartment\");",
                    "var form =  Ext.getCmp('fmHouseResidents');",
                    "var  cbHouse = form.getForm().findField('house_id');",
                    "",
                    "stHAppartment.removeAll();",
                    "cbHouse.clearValue();",
                    "switch (values.get('role')){",
                    "    case \"1\":",
                    "    case \"2\":",
                    "    case \"5\":",
                    "    case \"3\":",
                    "    case \"4\":",
                    "        StCompany.load({",
                    "            params: {",
                    "                what:'companyOne',",
                    "                role:values.get('role'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            scope:this",
                    "        });",
                    "        break;",
                    "    case \"7\":",
                    "        StCompany.load({",
                    "            params: {",
                    "                what:'company',",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            scope:this",
                    "        });",
                    "        break;",
                    "    default:",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ошибка ',",
                    "            msg: 'У Вас нет прав открывать базу ',",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "",
                    "}"
                ],
                "name": "activate"
            },
            "name": "onTabHouseResidentsActivate",
            "designerId": "9251ddf7-69fa-4eee-9a12-72b8bcc4d4fb"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#pnTekNachFilial",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onPnTekNachFilialExpand",
                "implHandler": [
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stTekNachFilial = Ext.data.StoreManager.get(\"StTekNachFilial\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var stFilial = stTekNachFilial.getAt(0);",
                    "if(stTekNachFilial.data.length === 0){",
                    "    stTekNachFilial.load({",
                    "        params: {",
                    "            what:'TekNachFilial',",
                    "            filial_id:values.get('filial_id'),",
                    "            login:values.get('login'),",
                    "            password:values.get('password')",
                    "        },",
                    "        scope:this",
                    "    }); ",
                    "} else {",
                    "    if( values.get('filial_id') !=stFilial_id.get('filial_id')){ ",
                    "        stTekNachFilial.load({",
                    "            params: {",
                    "                what:'TekNachFilial',",
                    "                filial_id:values.get('filial_id'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            scope:this",
                    "        }); ",
                    "",
                    "    }",
                    "}"
                ],
                "name": "expand",
                "scope": "me"
            },
            "name": "onPnTekNachFilialExpand",
            "designerId": "c19e70a7-22cb-49dc-900a-7efcd01734c3"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#dataPererOrg",
                "designer|targetType": "Ext.form.field.Date",
                "fn": "onDataPererOrgSelect",
                "implHandler": [
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stTekNachFilial = Ext.data.StoreManager.get(\"StTekNachFilial\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var tabPnCenter = Ext.getCmp('tabPnFilialPerer');",
                    "",
                    "//LOGIKA",
                    "/*",
                    "tabPnCenter.child('#tabFmPererOtopl').tab.hide(); ",
                    "tabPnCenter.child('#tabFmPererPodogr').tab.hide();    ",
                    "tabPnCenter.child('#tabFmPererVoda').tab.hide();",
                    "tabPnCenter.child('#tabFmPererStoki').tab.hide();",
                    "tabPnCenter.child('#tabInitPererOrg').tab.show(); ",
                    "tabPnCenter.setActiveTab('tabInitPererOrg'); ",
                    "*/",
                    "stTekNachFilial.load({",
                    "    params: {",
                    "        what:'TekNachFilial',",
                    "        data:value,",
                    "        filial_id:values.get('filial_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    scope:this",
                    "}); ",
                    ""
                ],
                "name": "select",
                "scope": "me"
            },
            "name": "onDataPererOrgSelect",
            "designerId": "093c6736-687a-4909-a433-57bec8cc78f0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grTekNachFilialPerer",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrTekNachFilialPererSelect",
                "implHandler": [
                    "var me = this;",
                    "//console.log(index);",
                    "if (index < 4) {",
                    "    var tabPnCenter = Ext.getCmp('tabPnFilialPerer');",
                    "",
                    "    switch (record.get('usluga')) {",
                    "        case 'отопл':        ",
                    "        tabPnCenter.child('#tabFmPererOtopl').tab.show(); ",
                    "        tabPnCenter.child('#tabFmPererPodogrev').tab.hide();    ",
                    "        tabPnCenter.child('#tabFmPererVoda').tab.hide();",
                    "        tabPnCenter.child('#tabFmPererStoki').tab.hide();",
                    "        tabPnCenter.child('#tabInitPererOrg').tab.hide(); ",
                    "        tabPnCenter.setActiveTab('tabFmPererOtopl'); ",
                    "        break;",
                    "        case 'подог':",
                    "        tabPnCenter.child('#tabFmPererOtopl').tab.hide(); ",
                    "        tabPnCenter.child('#tabFmPererPodogrev').tab.show();    ",
                    "        tabPnCenter.child('#tabFmPererVoda').tab.hide();",
                    "        tabPnCenter.child('#tabFmPererStoki').tab.hide(); ",
                    "        tabPnCenter.child('#tabInitPererOrg').tab.hide(); ",
                    "        tabPnCenter.setActiveTab('tabFmPererPodogrev'); ",
                    "        break;",
                    "        case 'вода':",
                    "        tabPnCenter.child('#tabFmPererOtopl').tab.hide(); ",
                    "        tabPnCenter.child('#tabFmPererPodogrev').tab.hide();    ",
                    "        tabPnCenter.child('#tabFmPererVoda').tab.show();",
                    "        tabPnCenter.child('#tabFmPererStoki').tab.hide();  ",
                    "        tabPnCenter.child('#tabInitPererOrg').tab.hide(); ",
                    "        tabPnCenter.setActiveTab('tabFmPererVoda'); ",
                    "        break;",
                    "        case 'стоки':",
                    "        tabPnCenter.child('#tabFmPererOtopl').tab.hide(); ",
                    "        tabPnCenter.child('#tabFmPererPodogrev').tab.hide();    ",
                    "        tabPnCenter.child('#tabFmPererVoda').tab.hide();",
                    "        tabPnCenter.child('#tabFmPererStoki').tab.show();    ",
                    "        tabPnCenter.child('#tabInitPererOrg').tab.hide(); ",
                    "        tabPnCenter.setActiveTab('tabFmPererStoki'); ",
                    "        break;",
                    "    }",
                    "}"
                ],
                "name": "select",
                "scope": "me"
            },
            "name": "onGrTekNachFilialPererSelect",
            "designerId": "7486b8b8-0ea0-4c94-96a2-b6a53e305b91"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btFilialUpdate",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtFilialUpdateClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stFilial = Ext.data.StoreManager.get(\"StFilial\");//QueryOrg.getResults  <FmFilial>",
                    "//var stTekNachFilial = Ext.data.StoreManager.get(\"StTekNachFilial\");",
                    "",
                    "//LOGIN & PASSWORD & ID",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    org_id:values.get('org_id'),",
                    "    filial_id:values.get('filial_id'),",
                    "    filial:values.get('filial'),",
                    "    what:'updateFilial'",
                    "",
                    "};",
                    "",
                    "//FORMA",
                    "",
                    "var fmFilial = Ext.getCmp('fmFilial');",
                    "var value = fmFilial.getValues();",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "",
                    "QueryOrg.Filial(value,function(results){",
                    "    Ext.MessageBox.show({",
                    "        title: 'Обновление данных по обьекту!',",
                    "        msg: results.msg,",
                    "        buttons: Ext.MessageBox.OK,",
                    "        buttonText:{ ",
                    "            ok: \"Закрыть!\"               ",
                    "        },",
                    "        icon: Ext.MessageBox.INFO",
                    "    });",
                    "    if (results.success !=='0'){        ",
                    "        stFilial.load({",
                    "            params: {",
                    "                what:'FmFilial',",
                    "                filial_id: results.filial_id,",
                    "                login:value.login,",
                    "                password:value.password",
                    "            },",
                    "",
                    "            callback: function(records,operation,success){",
                    "                if(success){    ",
                    "                    fmFilial.getForm().loadRecord(records[0]);",
                    "                }",
                    "            },",
                    "",
                    "            scope:this",
                    "        });",
                    "    }",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtFilialUpdateClick",
            "designerId": "eafe3f5f-1c20-4472-b968-ab30abfae68c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnUpdateOrg",
                "designer|targetType": "Ext.button.Button",
                "fn": "onbtnUpdateOrgClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stOrg = Ext.data.StoreManager.get(\"StOrg\");//QueryOrg.getResults  <FmFilial>",
                    "",
                    "//LOGIN & PASSWORD & ID",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    org_id:values.get('org_id'),",
                    "    what:'updateOrg'",
                    "",
                    "};",
                    "",
                    "//FORMA",
                    "",
                    "var fmOrg = Ext.getCmp('fmOrg');",
                    "var value = fmOrg.getValues();",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "",
                    "QueryOrg.Org(value,function(results){",
                    "    if (results.success){",
                    "        Ext.MessageBox.show({",
                    "            title: 'Оновление данных по организации!',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            buttonText:{",
                    "                ok: \"Закрыть!\"",
                    "            },",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        stOrg.removeAll();",
                    "        stOrg.load({",
                    "            params: {",
                    "                what:'FmOrgInfo',",
                    "                org_id: results.org_id,",
                    "                login:value.login,",
                    "                password:value.password",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    fmOrg.getForm().loadRecord(records[0]);",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "    }",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onbtnUpdateOrgClick",
            "designerId": "81489751-20bb-4f1c-9f8e-ab9f5d0e2a52"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "WinAddOplataOrg",
                "selector": "#winAddOplataOrg",
                "xtype": "winaddoplataorg"
            },
            "name": "WinAddOplataOrg",
            "designerId": "d2d604d7-cd1a-4df3-b321-fee6223f4c3e"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "GrTreeOrg",
                "selector": "#grTreeOrg",
                "xtype": null
            },
            "name": "GrTreeOrg",
            "designerId": "e0f3e0c8-93bb-4e10-9d0f-bfb9e4142d9b"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "FmOrgInfo",
                "selector": "#fmOrgInfo",
                "xtype": null
            },
            "name": "FmOrgInfo",
            "designerId": "58bb005e-a5f2-4d55-9a93-8098b3489379"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnDeleteOrg",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtnDeleteOrgClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "",
                    "//CONTROLER",
                    "",
                    "var crLeftMenu = this.application.getController('CrLeftMenu');",
                    "",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stOrg = Ext.data.StoreManager.get(\"StOrg\");//QueryOrg.getResults  <FmFilial>",
                    "var StTreeOrg = Ext.data.StoreManager.get(\"StTreeOrg\");//QueryVodomer.getResults <TekPokVodomera>",
                    "",
                    "//TAB",
                    "var tabPnCenter = me.getTabPnCenter();",
                    "",
                    "//LOGIN & PASSWORD & ID",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    org_id:values.get('org_id'),",
                    "    what:'deleteOrg'",
                    "",
                    "};",
                    "",
                    "//GRID",
                    "",
                    "var tree = Ext.getCmp('grTreeOrg');",
                    "",
                    "//FORMA",
                    "",
                    "var fmOrg = Ext.getCmp('fmOrg');",
                    "var value = fmOrg.getValues();",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "//console.log(value);",
                    "",
                    "",
                    "Ext.MessageBox.show({",
                    "    title: 'Внимание!',",
                    "    msg: 'Организация и все связанные с ними данные будут удалены безвозвратно!',",
                    "    buttons: Ext.MessageBox.OKCANCEL,",
                    "    buttonText:{ ",
                    "        ok: \"Удалить\" ,   ",
                    "        cancel: \"Отмена\"           ",
                    "    },",
                    "    icon: Ext.MessageBox.WARNING,",
                    "    fn:function(btn){",
                    "        if(btn=='ok'){",
                    "            QueryOrg.Org(value,function(results){",
                    "                if (results.success){ ",
                    "                    StTreeOrg.load();",
                    "                    Ext.MessageBox.show({",
                    "                        title: 'Удаление организации!',",
                    "                        msg: results.msg,",
                    "                        buttons: Ext.MessageBox.OK,",
                    "                        buttonText:{ ",
                    "                            ok: \"Закрыть!\"               ",
                    "                        },",
                    "                        icon: Ext.MessageBox.WARNING",
                    "                    });",
                    "",
                    "                    stOrg.removeAll();",
                    "                    tabPnCenter.setActiveTab(0);",
                    "                }",
                    "",
                    "            });",
                    "        }",
                    "    }",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnDeleteOrgClick",
            "designerId": "38ce71ce-a689-4a06-b587-bb3d23e84e87"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btFilialDelete",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtFilialDeleteClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "",
                    "//CONTROLER",
                    "",
                    "var crLeftMenu = this.application.getController('CrLeftMenu');",
                    "var tree = Ext.getCmp('grTreeOrg');",
                    "var dataview = tree.getView();",
                    "",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stFilial = Ext.data.StoreManager.get(\"StFilial\");//QueryOrg.getResults  <FmFilial>",
                    "var StTreeOrg = Ext.data.StoreManager.get(\"StTreeOrg\");//QueryVodomer.getResults <TekPokVodomera>",
                    "",
                    "",
                    "//LOGIN & PASSWORD & ID",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    org_id:values.get('org_id'),",
                    "    filial_id:values.get('filial_id'),",
                    "    filial:values.get('filial'),",
                    "    what:'deleteFilial'",
                    "",
                    "};",
                    "",
                    "//GRID",
                    "",
                    "var tree = Ext.getCmp('grTreeOrg');",
                    "",
                    "",
                    "//FORMA",
                    "",
                    "var fmFilial = Ext.getCmp('fmFilial');",
                    "var value = fmFilial.getValues();",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "//console.log(value);",
                    "",
                    "",
                    "Ext.MessageBox.show({",
                    "    title: 'Внимание!',",
                    "    msg: 'Филиал и все связанные с ним данные будут удалены безвозвратно!',",
                    "    buttons: Ext.MessageBox.OKCANCEL,",
                    "    buttonText:{",
                    "        ok: \"Удалить\" ,",
                    "        cancel: \"Отмена\"",
                    "    },",
                    "    icon: Ext.MessageBox.WARNING,",
                    "    fn:function(btn){",
                    "        if(btn=='ok'){",
                    "            QueryOrg.Filial(value,function(results){",
                    "                if (results.success){",
                    "                    Ext.MessageBox.show({",
                    "                        title: 'Удаление Филиала!',",
                    "                        msg: results.msg,",
                    "                        buttons: Ext.MessageBox.OK,",
                    "                        buttonText:{",
                    "                            ok: \"Закрыть!\"",
                    "                        },",
                    "                        icon: Ext.MessageBox.WARNING",
                    "                    });",
                    "",
                    "                   stFilial.removeAll();",
                    "                    StTreeOrg.load({",
                    "                        params: {",
                    "                            org_id:value.org_id,",
                    "                            login:value.login,",
                    "                            password:value.password",
                    "                        },",
                    "                        callback: function(record,eOpts,success) {",
                    "                             if(success){",
                    "                                 tree.expandAll();",
                    "                                 var TreeNodeId = record[0].get('orig_id');",
                    "                                 var rec = tree.getRootNode().findChild(\"orig_id\",TreeNodeId, true);",
                    "                                 dataview.getSelectionModel().select(rec);",
                    "                                 crLeftMenu.onGrTreeOrgItemClick(dataview,rec);",
                    "",
                    "                             }",
                    "                        },",
                    "                        scope: this",
                    "                    });",
                    "                   // crLeftMenu.loadOrg();",
                    "",
                    "                }",
                    "",
                    "            });",
                    "        }",
                    "    }",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtFilialDeleteClick",
            "designerId": "e75fe8c8-9fd9-49c1-b73a-44303b5bd2f8"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "FmFilial",
                "selector": "#fmFilial",
                "xtype": null
            },
            "name": "FmFilial",
            "designerId": "cc7a4082-2385-481a-afb3-7cd612537ca7"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "CbFilAddress",
                "selector": "#cbFilAddress"
            },
            "name": "CbFilAddress",
            "designerId": "93ac639b-3b55-43d3-8d39-78aa3f9a3c92"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "TabPnCenter",
                "selector": "#tabPnCenter"
            },
            "name": "TabPnCenter",
            "designerId": "22343c1c-87c7-4209-858d-7b503cae40f2"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "GrOgrDog",
                "selector": "#grOgrDog"
            },
            "name": "GrOgrDog",
            "designerId": "30751613-f51b-4d58-9e91-e0ad57bb13fd"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "TbDogOrgInsert",
                "selector": "#tbDogOrgInsert"
            },
            "name": "TbDogOrgInsert",
            "designerId": "0a065aba-ac96-4052-a853-86d5b57b60fa"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "CbRaionOrg",
                "selector": "#cbRaionOrg"
            },
            "name": "CbRaionOrg",
            "designerId": "fc463bb9-0c82-49b4-ae0c-2170bf0e3352"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "CbStreetOrg",
                "selector": "#cbStreetOrg"
            },
            "name": "CbStreetOrg",
            "designerId": "7737cbd3-b065-4eaa-8b66-50ca7819614a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btFilialGvsNach",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtFilialGvsNachClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stFilial = Ext.data.StoreManager.get(\"StFilial\");//QueryOrg.getResults  <FmFilial>",
                    "var stTekNachFilial = Ext.data.StoreManager.get(\"StTekNachFilial\");//QueryOrgVodomer.getResults  <TekPokVodomerov>",
                    "",
                    "//LOGIN & PASSWORD & ID",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    org_id:values.get('org_id'),",
                    "    filial_id:values.get('filial_id'),",
                    "    filial:values.get('filial'),",
                    "    what:'nachGvsFilial'",
                    "",
                    "};",
                    "//FORMA",
                    "",
                    "var fmFilial = Ext.getCmp('fmFilial');",
                    "var value = fmFilial.getValues();",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "",
                    "QueryOrg.Filial(value,function(results){",
                    "    Ext.MessageBox.show({",
                    "        title: 'Начисление ГВС по обьекту!',",
                    "        msg: results.msg,",
                    "        buttons: Ext.MessageBox.OK,",
                    "        buttonText:{ ",
                    "            ok: \"Закрыть!\"               ",
                    "        },",
                    "        icon: Ext.MessageBox.INFO",
                    "    });",
                    "    if (results.success !=='0'){  ",
                    "        stFilial.removeAll();",
                    "        stTekNachFilial.load({",
                    "            params: {",
                    "                what:'TekNachFilial',",
                    "                filial_id: filial_id,",
                    "                login:login,",
                    "                password:password",
                    "            },",
                    "            scope:this",
                    "        }); ",
                    "    }",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtFilialGvsNachClick",
            "designerId": "d0d964a7-b639-4b26-85bc-a173e1c1a0ba"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnSaldoOrgOtop",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtnSaldoOrgOtopClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "",
                    "//STORE",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNach\");",
                    "var stTekNachFilial = Ext.data.StoreManager.get(\"StTekNachFilial\");",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    org_id:values.get('org_id'),",
                    "    filial_id:values.get('filial_id'),",
                    "    what:'SaldoOtoplOrg'",
                    "};",
                    "//console.log(values.data.login);",
                    "//FORMA",
                    "var form = Ext.getCmp('tabFmPererOtopl');",
                    "var value = form.getForm().getValues();",
                    "//LOGIKA",
                    "Ext.Object.merge(value, params);",
                    "",
                    "QueryTeplomer.newPokTeplomera(value,function(results){",
                    "",
                    "    StTekNach.load({",
                    "        params: {",
                    "            what:'OtoplenieOrg',",
                    "            filial_id: value.filial_id,",
                    "            data: value.data,       ",
                    "            login:value.login,",
                    "            password:value.password",
                    "        }, ",
                    "        callback: function(records,operation,success){       ",
                    "            if(success){",
                    "                form.getForm().reset();",
                    "                form.getForm().loadRecord(records[0]);",
                    "                form.doLayout();",
                    "            }else{",
                    "                form.getForm().reset();",
                    "            }",
                    "        },",
                    "        scope:this  ",
                    "    });",
                    "",
                    "    stTekNachFilial.load({",
                    "        params: {",
                    "            what:'TekNachFilial',",
                    "            data: value.data,",
                    "            filial_id:value.filial_id,",
                    "            login:value.login,",
                    "            password:value.password",
                    "        },",
                    "        scope:this",
                    "    });     ",
                    "",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnSaldoOrgOtopClick",
            "designerId": "96f7c25b-495a-4d5c-933d-83d8aa6c3701"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnPererOrgDt",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtnPererOrgDtClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "",
                    "//STORE",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNach\");",
                    "var stTekNachFilial = Ext.data.StoreManager.get(\"StTekNachFilial\");",
                    "var stFilial = Ext.data.StoreManager.get(\"StFilial\");",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var dteplomer_id = stFilial.getAt(0).get('dteplomer_id');",
                    "var house_id = stFilial.getAt(0).get('house_id');",
                    "",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    org_id:values.get('org_id'),",
                    "    filial_id:values.get('filial_id'),",
                    "    dteplomer_id : dteplomer_id,",
                    "    house_id : house_id,",
                    "    what:'PererOrgDt'",
                    "};",
                    "",
                    "//console.log(dteplomer_id);",
                    "//FORMA",
                    "var form = Ext.getCmp('tabFmPererOtopl');",
                    "var value = form.getForm().getValues();",
                    "//LOGIKA",
                    "Ext.Object.merge(value, params);",
                    "//console.log(value);",
                    "",
                    "if (dteplomer_id) {",
                    "    Ext.MessageBox.confirm({",
                    "        title: 'Перерасчет по организации ',",
                    "        msg: 'Перерасчет затронет все обьекты по домовому тепломеру <br>Вы желаете продолжать.',",
                    "        buttons: Ext.MessageBox.OKCANCEL,",
                    "        icon: Ext.MessageBox.ERROR,",
                    "        buttonText:{",
                    "            ok:'Да',",
                    "            cancel:'отмена'",
                    "        },",
                    "        fn:function(btn,newValue){",
                    "            if(btn=='ok'){",
                    "                QueryTeplomer.newPokTeplomera(value,function(results){",
                    "                    StTekNach.load({",
                    "                        params: {",
                    "                            what:'Otoplenie',",
                    "                            filial_id: value.filial_id,",
                    "                            data: Ext.Date.getFirstDateOfMonth(new Date()), ",
                    "                            login:value.login,",
                    "                            password:value.password",
                    "                        }, ",
                    "                        callback: function(records,operation,success){       ",
                    "                            if(success){",
                    "                                form.getForm().reset();",
                    "                                form.getForm().loadRecord(records[0]);",
                    "                                form.doLayout();",
                    "                            }else{",
                    "                                form.getForm().reset();",
                    "                            }",
                    "                        },",
                    "                        scope:this  ",
                    "                    });",
                    "                    stTekNachFilial.load({",
                    "                        params: {",
                    "                            what:'TekNachFilial',",
                    "                            filial_id:value.filial_id,",
                    "                            data: Ext.Date.getFirstDateOfMonth(new Date()), ",
                    "                            login:value.login,",
                    "                            password:value.password",
                    "                        },",
                    "                        scope:this",
                    "                    });     ",
                    "                });",
                    "            }",
                    "        }     ",
                    "",
                    "    });",
                    "} "
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnPererOrgDtClick",
            "designerId": "a38f72de-653c-44ba-baf0-929cb546b75f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnPererOrg",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtnPererOrgClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "",
                    "//STORE",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNach\");",
                    "var stTekNachFilial = Ext.data.StoreManager.get(\"StTekNachFilial\");",
                    "//var StDTeplomerCb = Ext.data.StoreManager.get(\"StDTeplomerCb\");",
                    "var stFilial = Ext.data.StoreManager.get(\"StFilial\");",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var dteplomer_id = stFilial.getAt(0).get('dteplomer_id');",
                    "//var out = StDTeplomerCb.getAt(0).get('out');",
                    "var house_id = stFilial.getAt(0).get('house_id');",
                    "",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    org_id:values.get('org_id'),",
                    "    filial_id:values.get('filial_id'),",
                    "    dteplomer_id : dteplomer_id,",
                    "    //   out:out,   ",
                    "    house_id : house_id,",
                    "    what:'PererOrgGkal'",
                    "};",
                    "",
                    "//console.log(dteplomer_id);",
                    "//FORMA",
                    "var form = Ext.getCmp('tabFmPererOtopl');",
                    "var value = form.getForm().getValues();",
                    "console.log(value);",
                    "//LOGIKA",
                    "Ext.Object.merge(value, params);",
                    "",
                    "Ext.MessageBox.confirm({",
                    "    title: 'Перерасчет по организации ',",
                    "    msg: 'Перерасчет по организации <br>Вы желаете продолжать.',",
                    "    buttons: Ext.MessageBox.OKCANCEL,",
                    "    icon: Ext.MessageBox.ERROR,",
                    "    buttonText:{",
                    "        ok:'Да',",
                    "        cancel:'отмена'",
                    "    },",
                    "    fn:function(btn,newValue){",
                    "        if(btn=='ok'){",
                    "            QueryTeplomer.newPokTeplomera(value,function(results){",
                    "                StTekNach.load({",
                    "                    params: {",
                    "                        what:'Otoplenie',",
                    "                        filial_id: value.filial_id,",
                    "                        data: Ext.Date.getFirstDateOfMonth(new Date()), ",
                    "                        login:value.login,",
                    "                        password:value.password",
                    "                    }, ",
                    "                    callback: function(records,operation,success){       ",
                    "                        if(success){",
                    "                            form.getForm().reset();",
                    "                            form.getForm().loadRecord(records[0]);",
                    "                            form.doLayout();",
                    "                        }else{",
                    "                            form.getForm().reset();",
                    "                        }",
                    "                    },",
                    "                    scope:this  ",
                    "                });",
                    "                stTekNachFilial.load({",
                    "                    params: {",
                    "                        what:'TekNachFilial',",
                    "                        filial_id:value.filial_id,",
                    "                        data: Ext.Date.getFirstDateOfMonth(new Date()), ",
                    "                        login:value.login,",
                    "                        password:value.password",
                    "                    },",
                    "                    scope:this",
                    "                });     ",
                    "            });",
                    "        }",
                    "    }     ",
                    "",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnPererOrgClick",
            "designerId": "2ad44492-a46b-4c5e-9ab1-d534ab8090ce"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnPodogrevOrgIns",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtnPodogrevOrgInsClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "",
                    "//STORE",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNach\");",
                    "var stTekNachFilial = Ext.data.StoreManager.get(\"StTekNachFilial\");",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    org_id:values.get('org_id'),",
                    "    filial_id:values.get('filial_id'),",
                    "    what:'OrgPodogrevIns'",
                    "};",
                    "//console.log(values.data.login);",
                    "//FORMA",
                    "var form = Ext.getCmp('tabFmPererPodogrev');",
                    "var value = form.getForm().getValues();",
                    "//LOGIKA",
                    "Ext.Object.merge(value, params);",
                    "",
                    "QueryOrg.updateRecords(value,function(results){",
                    "",
                    "    StTekNach.load({",
                    "        params: {",
                    "            what:'PodogrevOrg',",
                    "            filial_id: value.filial_id,",
                    "            data: value.data,       ",
                    "            login:value.login,",
                    "            password:value.password",
                    "        }, ",
                    "        callback: function(records,operation,success){       ",
                    "            if(success){",
                    "                form.getForm().reset();",
                    "                form.getForm().loadRecord(records[0]);",
                    "                form.doLayout();",
                    "            }else{",
                    "                form.getForm().reset();",
                    "            }",
                    "        },",
                    "        scope:this  ",
                    "    });",
                    "",
                    "    stTekNachFilial.load({",
                    "        params: {",
                    "            what:'TekNachFilial',",
                    "            data: value.data,",
                    "            filial_id:value.filial_id,",
                    "            login:value.login,",
                    "            password:value.password",
                    "        },",
                    "        scope:this",
                    "    });     ",
                    "",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnPodogrevOrgInsClick",
            "designerId": "74ccedf5-923a-4384-9c84-d1f0013856e2"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnStokiLoadOrg",
                "designer|targetType": "MyButton81",
                "fn": "onBtnStokiLoadOrgClick",
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnStokiLoadOrgClick",
            "designerId": "dc33f3ea-1e04-4081-af38-8c17c74c6f7d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnVodaLoadOrg",
                "designer|targetType": "MyButton81",
                "fn": "onBtnVodaLoadOrgClick",
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnVodaLoadOrgClick",
            "designerId": "2f27714c-53e1-4e99-8eb3-676c3db2170c"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "GrTreeOrg",
                "selector": "#grTreeOrg",
                "xtype": null
            },
            "name": "GrTreeOrg",
            "designerId": "c076bf5a-2dd3-455b-b5e9-9f2e408093ec"
        }
    ]
}