{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "crOrgNach"
    },
    "designerId": "b7551ec2-d909-4eea-8232-891e68390c0b",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabFmOrgOtoplenie",
                "designer|targetType": "Ext.form.Panel",
                "fn": "onTabFmOrgOtoplenieActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachOrg\");",
                    "var gridNachisl = Ext.getCmp('grNachOtoplenieOrg');",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "// FORM",
                    "var form = component;",
                    "//LOGIKA",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'OtoplenieOrg',",
                    "        org_id: values.get('org_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            form.getForm().reset();",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabFmOrgOtoplenieActivate",
            "designerId": "687faf9f-448e-4ad1-a524-6d9460b38cfd"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabFmOrgStoki",
                "designer|targetType": "Ext.form.Panel",
                "fn": "onTabFmOrgStokiActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachOrg\");",
                    "var gridNachisl = Ext.getCmp('grNachStokiOrg');",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "// FORM",
                    "var form = component;",
                    "//LOGIKA",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'StokiOrg',",
                    "        org_id: values.get('org_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            form.getForm().reset();",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabFmOrgStokiActivate",
            "designerId": "87f82e62-4fa6-433f-8ff3-8726958ab888"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabFmOrgPodogrev",
                "designer|targetType": "Ext.form.Panel",
                "fn": "onTabFmOrgPodogrevActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachOrg\");",
                    "var gridNachisl = Ext.getCmp('grNachPodogrevOrg');",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "// FORM",
                    "var form = component;",
                    "//LOGIKA",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'PodogrevOrg',",
                    "        org_id: values.get('org_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            form.getForm().reset();",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabFmOrgPodogrevActivate",
            "designerId": "0cd22031-be45-4e6c-986b-f55259ee6b0c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabFmOrgVoda",
                "designer|targetType": "Ext.form.Panel",
                "fn": "onTabFmOrgVodaActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachOrg\");",
                    "var gridNachisl = Ext.getCmp('grNachVodaOrg');",
                    "console.log(gridNachisl);",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "// FORM",
                    "var form = Ext.getCmp('tabFmOrgVoda');",
                    "//LOGIKA",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'VodaOrg',",
                    "        org_id: values.get('org_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            form.getForm().reset();",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabFmOrgVodaActivate",
            "designerId": "2a93858c-e188-40ec-8191-35124fdc2adf"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabNachFilial",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabNachFilialActivate",
                "implHandler": [
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StOplata = Ext.data.StoreManager.get(\"StOplataFilial\");",
                    "var stTekNachKassa = Ext.data.StoreManager.get(\"StTekNachKassaOrg\");",
                    "var StFilial = Ext.data.StoreManager.get(\"StFilial\");",
                    "var fmInfoNachFilial = Ext.getCmp('fmInfoNachFilial');",
                    "var fmTekNachKassa = Ext.getCmp('fmTekNachKassaOrg');",
                    "var fmTekNachKassa1 = Ext.getCmp('fmTekNachKassaOrg1');",
                    "var fmTekNachKassa2 = Ext.getCmp('fmTekNachKassaOrg2');",
                    "var fmTekNachKassaOrg = Ext.getCmp('fmTekNachKassaOrg');",
                    "",
                    "",
                    "var tabPnNachOrg = Ext.getCmp('tabPnNachFilial');",
                    "var norma = Ext.getCmp('btnNormaFilialUpdate');",
                    "var voda = Ext.getCmp('btnVodaFilialUpdate');",
                    "var filial = Ext.getCmp('btnFilialUpdate');",
                    "",
                    "//console.log(tabPnNachApp);",
                    "tabPnNachOrg.setActiveTab(0);",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var fmFilialrecord =StFilial.getAt(0);",
                    "fmInfoNachFilial.getForm().loadRecord(fmFilialrecord);",
                    "",
                    "",
                    "norma.setDisabled(true);",
                    "voda.setDisabled(true);",
                    "filial.setDisabled(true);",
                    "stTekNachKassa.removeAll();",
                    "fmTekNachKassa.getForm().reset();",
                    "stTekNachKassa.load({",
                    "    params: {",
                    "        login:values.get('login'),",
                    "        password:values.get('password'),",
                    "        filial_id: values.get('filial_id'),",
                    "        what:'TekNachAllOrg'",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        //  console.log('1');",
                    "",
                    "        if (success)  {",
                    "            fmTekNachKassa.getForm().findField('date_oplata').setValue(Ext.Date.format(new Date(), 'Y-m-d'));",
                    "            fmTekNachKassa.getForm().findField('prixod_id').setValue(\"14\");",
                    "            fmTekNachKassa.getForm().findField('cbNext1').setValue(false);",
                    "            fmTekNachKassa.getForm().findField('cbNext2').setValue(false);",
                    "            fmTekNachKassa.getForm().findField('cbNext3').setValue(false);",
                    "            fmTekNachKassa.getForm().findField('cbNext4').setValue(false);",
                    "",
                    "            fmTekNachKassa.getForm().findField('cbDo1').setValue(false);",
                    "            fmTekNachKassa.getForm().findField('cbDo2').setValue(false);",
                    "            fmTekNachKassa.getForm().findField('cbDo3').setValue(false);",
                    "            fmTekNachKassa.getForm().findField('cbDo4').setValue(false);",
                    "",
                    "            fmTekNachKassa.getForm().findField('cbDo1').setDisabled(false);",
                    "            fmTekNachKassa.getForm().findField('cbDo2').setDisabled(false);",
                    "            fmTekNachKassa.getForm().findField('cbDo3').setDisabled(false);",
                    "            fmTekNachKassa.getForm().findField('cbDo4').setDisabled(false);",
                    "",
                    "            fmTekNachKassa.getForm().findField('cbNext1').setDisabled(false);",
                    "            fmTekNachKassa.getForm().findField('cbNext2').setDisabled(false);",
                    "            fmTekNachKassa.getForm().findField('cbNext3').setDisabled(false);",
                    "            fmTekNachKassa.getForm().findField('cbNext4').setDisabled(false);",
                    "",
                    "            fmTekNachKassa.down('#insTekPokKassaOrg').setDisabled(true);",
                    "            fmTekNachKassa.down('#DoAllOrg').setDisabled(false);",
                    "            fmTekNachKassa.down('#DoAllResetOrg').setDisabled(false);",
                    "            fmTekNachKassa.down('#NextAllResetOrg').setDisabled(false);",
                    "            fmTekNachKassa.down('#NextAllOrg').setDisabled(false);",
                    "",
                    "            if (records.length) {",
                    "                fmTekNachKassa.getForm().loadRecord(records[0]);",
                    "            }",
                    "        }",
                    "",
                    "    },",
                    "    scope:this",
                    "});",
                    "StOplata.load({",
                    "    params: {",
                    "        what:'OplataFilial',",
                    "        filial_id: values.get('filial_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    scope:this",
                    "});",
                    "fmTekNachKassa1.getForm().reset();",
                    "stTekNachKassa.removeAll();",
                    "stTekNachKassa.load({",
                    "    params: {",
                    "        login:values.get('login'),",
                    "        password:values.get('password'),",
                    "        filial_id: values.get('filial_id'),",
                    "        what:'TekNachAllOrg1'",
                    "    },",
                    "    callback: function(records1,operation,success){",
                    "        //  console.log('1');",
                    "",
                    "        if (success)  {",
                    "",
                    "            if (records1.length) {",
                    "                fmTekNachKassa1.getForm().loadRecord(records1[0]);",
                    "            }",
                    "        }",
                    "",
                    "    },",
                    "    scope:this",
                    "});",
                    "fmTekNachKassa2.getForm().reset();",
                    "stTekNachKassa.removeAll();",
                    "stTekNachKassa.load({",
                    "    params: {",
                    "        login:values.get('login'),",
                    "        password:values.get('password'),",
                    "        filial_id: values.get('filial_id'),",
                    "        what:'TekNachAllOrg2'",
                    "    },",
                    "    callback: function(records2,operation,success){",
                    "        //  console.log('1');",
                    "",
                    "        if (success)  {",
                    "",
                    "            if (records2.length) {",
                    "                fmTekNachKassa2.getForm().loadRecord(records2[0]);",
                    "            }",
                    "        }",
                    "",
                    "    },",
                    "    scope:this",
                    "});",
                    ""
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabNachFilialActivate",
            "designerId": "369ee99f-d36c-4328-8308-24eacd3b9b3d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabFmFilialOtoplenie",
                "designer|targetType": "Ext.form.Panel",
                "fn": "onTabFmFilialOtoplenieActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachFilial\");",
                    "var gridNachisl = Ext.getCmp('grNachOtoplenieFilial');",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "// FORM",
                    "var form = component;",
                    "//LOGIKA",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'OtoplenieFilial',",
                    "        filial_id: values.get('filial_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            form.getForm().reset();",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabFmFilialOtoplenieActivate",
            "designerId": "9baaabaa-e448-417c-a6e0-3d9bfe5e86c8"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabFmFilialStoki",
                "designer|targetType": "Ext.form.Panel",
                "fn": "onTabFmFilialStokiActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachFilial\");",
                    "var gridNachisl = Ext.getCmp('grNachStokiFilial');",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "// FORM",
                    "var form = component;",
                    "var norma = Ext.getCmp('btnNormaFilialUpdate');",
                    "var voda = Ext.getCmp('btnVodaFilialUpdate');",
                    "var filial = Ext.getCmp('btnFilialUpdate');",
                    "norma.setDisabled(true);",
                    "voda.setDisabled(true);",
                    "filial.setDisabled(true);",
                    "//LOGIKA",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'StokiFilial',",
                    "        filial_id: values.get('filial_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            form.getForm().reset();",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabFmFilialStokiActivate",
            "designerId": "8ab2f9e7-52de-4ed0-bacc-f072fe0b56fa"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabFmFilialPodogrev",
                "designer|targetType": "Ext.form.Panel",
                "fn": "onTabFmFilialPodogrevActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachFilial\");",
                    "var gridNachisl = Ext.getCmp('grNachPodogrevFilial');",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "// FORM",
                    "var form = component;",
                    "var norma = Ext.getCmp('btnNormaFilialUpdate');",
                    "var voda = Ext.getCmp('btnVodaFilialUpdate');",
                    "var filial = Ext.getCmp('btnFilialUpdate');",
                    "norma.setDisabled(true);",
                    "voda.setDisabled(true);",
                    "filial.setDisabled(true);",
                    "",
                    "//LOGIKA",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'PodogrevFilial',",
                    "        filial_id: values.get('filial_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            form.getForm().reset();",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabFmFilialPodogrevActivate",
            "designerId": "57114ebf-8c39-4ab6-8c87-54c739a68e5f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabFmFilialVoda",
                "designer|targetType": "Ext.form.Panel",
                "fn": "onTabFmFilialVodaActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachFilial\");",
                    "var gridNachisl = Ext.getCmp('grNachVodaFilial');",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "//console.log(values.get('golovnoe'));",
                    "",
                    "// FORM",
                    "var formFilial = Ext.getCmp('fmInfoNachFilial');",
                    "var form = Ext.getCmp('tabFmFilialVoda');",
                    "var norma = Ext.getCmp('btnNormaFilialUpdate');",
                    "var voda = Ext.getCmp('btnVodaFilialUpdate');",
                    "var filial = Ext.getCmp('btnFilialUpdate');",
                    "var btnAktSverkiFilialVik = Ext.getCmp('btnAktSverkiFilialVik');",
                    "",
                    "",
                    "",
                    "if(values.get('golovnoe')===1 || values.get('ind')===1){",
                    "    norma.setDisabled(false);",
                    "    voda.setDisabled(false);",
                    "    filial.setDisabled(false);",
                    "    btnAktSverkiFilialVik.setDisabled(false);",
                    "",
                    "",
                    "} else {",
                    "    norma.setDisabled(true);",
                    "    voda.setDisabled(true);",
                    "    filial.setDisabled(true);",
                    "    btnAktSverkiFilialVik.setDisabled(true);",
                    "",
                    "",
                    "}",
                    "//LOGIKA",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'VodaFilial',",
                    "        filial_id: values.get('filial_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            form.getForm().reset();",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "        }else{",
                    "            form.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabFmFilialVodaActivate",
            "designerId": "75ff72a3-90e3-4666-94a7-dc533f46ad82"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnVodaFilialUpdate",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtnVodaFilialUpdateClick",
                "implHandler": [
                    "//in use",
                    "",
                    "//STORE",
                    "var me = this;",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var grid = Ext.getCmp(\"grNachVodaFilial\");",
                    "var gridRowSelectedRecords  = grid.getView().getSelectionModel().getSelection();",
                    "//console.log(gridRowSelectedRecords);",
                    "var data = gridRowSelectedRecords[0].data.data;",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    house_id:values.get('house_id'),",
                    "    filial_id:values.get('filial_id'),",
                    "    data:data,",
                    "    what:\"update_pokaz_ovodomer_filial\"",
                    "};",
                    "",
                    "//LOGIKA",
                    "QueryVodomer.updateVodomer(params,function(results){",
                    "    if (results.success){",
                    "        Ext.MessageBox.show({",
                    "            title: 'Обновление  баз начислений по показаниям водосчетчиков',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        me.onTabFmFilialVodaActivate();",
                    "        /*",
                    "        StWaterHouse.load({",
                    "            params: {",
                    "                what:'AllWaterHouse',",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            scope:this",
                    "        });",
                    "        */",
                    "    }",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnVodaFilialUpdateClick",
            "designerId": "0782aa1b-5a5c-4255-afa4-9d57103fde0f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnNormaFilialUpdate",
                "designer|targetType": "MyButton68",
                "fn": "onBtnNormaFilialUpdateClick",
                "implHandler": [
                    "//in use",
                    "",
                    "//STORE",
                    "var me = this;",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var grid = Ext.getCmp(\"grNachVodaFilial\");",
                    "var gridRowSelectedRecords  = grid.getView().getSelectionModel().getSelection();",
                    "//console.log(gridRowSelectedRecords);",
                    "var data = gridRowSelectedRecords[0].data.data;",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    house_id:values.get('house_id'),",
                    "    filial_id:values.get('filial_id'),",
                    "    data:data,",
                    "    what:\"update_norma_voda_filial\"",
                    "};",
                    "",
                    "//LOGIKA",
                    "QueryVodomer.updateVodomer(params,function(results){",
                    "    if (results.success){",
                    "        Ext.MessageBox.show({",
                    "            title: 'Обновление  баз начислений по норме',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        me.onTabFmFilialVodaActivate();",
                    "",
                    "    }",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnNormaFilialUpdateClick",
            "designerId": "97621afe-2dae-4505-81da-563b9ae1f705"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnFilialUpdate",
                "designer|targetType": "MyButton69",
                "fn": "onBtnFilialUpdateClick",
                "implHandler": [
                    "//in use",
                    "",
                    "//STORE",
                    "var me = this;",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var grid = Ext.getCmp(\"grNachVodaFilial\");",
                    "var gridRowSelectedRecords  = grid.getView().getSelectionModel().getSelection();",
                    "var data = gridRowSelectedRecords[0].data.data;",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    house_id:values.get('house_id'),",
                    "    filial_id:values.get('filial_id'),",
                    "    data:data,",
                    "    what:\"update_nachislenie_filial\"",
                    "};",
                    "",
                    "//LOGIKA",
                    "QueryVodomer.updateVodomer(params,function(results){",
                    "    if (results.success){",
                    "        Ext.MessageBox.show({",
                    "            title: 'Свод данных по обьектам организации ',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        me.onTabFmFilialVodaActivate();",
                    "",
                    "    }",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnFilialUpdateClick",
            "designerId": "ab8a9a45-fcc0-41a7-9bb6-ed3a55072ce1"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grNachVodaOrg",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrNachVodaOrgSelectionChange",
                "implHandler": [
                    "var form = Ext.getCmp('tabFmOrgVoda');",
                    "",
                    "if (selected.length > 0) {",
                    "    form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);   ",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrNachVodaOrgSelectionChange",
            "designerId": "147f5315-a35a-4b10-936f-9119a8437257"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grNachStokiOrg",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrNachStokiOrgSelectionChange",
                "implHandler": [
                    "var form = Ext.getCmp('tabFmOrgStoki');",
                    "",
                    "if (selected.length > 0) {",
                    "    form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);   ",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrNachStokiOrgSelectionChange",
            "designerId": "b636b571-d53b-4d42-9e88-ef0611e44373"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grNachPodogrevOrg",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrNachPodogrevOrgSelectionChange",
                "implHandler": [
                    "var form = Ext.getCmp('tabFmOrgPodogrev');",
                    "",
                    "if (selected.length > 0) {",
                    "    form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);   ",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrNachPodogrevOrgSelectionChange",
            "designerId": "1dc2a3f1-8020-4f74-a245-1943c0140d18"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grNachOtoplenieOrg",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrNachOtoplenieOrgSelectionChange",
                "implHandler": [
                    "var form = Ext.getCmp('tabFmOrgOtoplenie');",
                    "",
                    "if (selected.length > 0) {",
                    "    form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);   ",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrNachOtoplenieOrgSelectionChange",
            "designerId": "6e9f2982-f8c8-4574-87e2-2fc6d2e1eba2"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grNachVodaFilial",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrNachVodaFilialSelectionChange",
                "implHandler": [
                    "var form = Ext.getCmp('tabFmFilialVoda');",
                    "",
                    "if (selected.length > 0) {",
                    "    form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrNachVodaFilialSelectionChange",
            "designerId": "a8dc6848-c754-4d67-8747-c950df6bdb02"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grNachStokiFilial",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrNachStokiFilialSelectionChange",
                "implHandler": [
                    "var form = Ext.getCmp('tabFmFilialStoki');",
                    "",
                    "if (selected.length > 0) {",
                    "    form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrNachStokiFilialSelectionChange",
            "designerId": "bea4ac21-b7a1-4225-830a-1ed6a67a0334"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grNachPodogrevFilial",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrNachPodogrevFilialSelectionChange",
                "implHandler": [
                    "var form = Ext.getCmp('tabFmFilialPodogrev');",
                    "",
                    "if (selected.length > 0) {",
                    "    form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrNachPodogrevFilialSelectionChange",
            "designerId": "ff4d25f5-c966-4bc6-92af-555c8c995487"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grNachOtoplenieFilial",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrNachOtoplenieFilialSelectionChange",
                "implHandler": [
                    "var form = Ext.getCmp('tabFmFilialOtoplenie');",
                    "",
                    "if (selected.length > 0) {",
                    "    form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrNachOtoplenieFilialSelectionChange",
            "designerId": "76fd1cdd-3ab1-4549-9957-ce279adb1cce"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnVikFilialAccount",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "MyButton76",
                "fn": "onBtnVikFilialAccountClick",
                "implHandler": [
                    "//in use",
                    "var me = this;",
                    "",
                    "// STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "",
                    "//Component",
                    "",
                    "var winReport = me.getWinReport();",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var password = values.get('password');",
                    "",
                    "//LOGIKA",
                    "var id = 'AktPrintVoda';",
                    "var text = 'Счет Вода';",
                    "var qtip = 'Счет Вода';",
                    "",
                    "values.set({",
                    "    'report':id,",
                    "    'namereport':text,",
                    "    'reportheader':text",
                    "});",
                    "",
                    "winReport.show();",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnVikFilialAccountClick",
            "designerId": "427a8076-0534-4e33-9846-6ca4f5ed3a0e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btEditOplataOrg",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtEditOplataOrgClick",
                "implHandler": [
                    "/// in use",
                    "//CONTROLLER",
                    "var value = button.findParentByType('form').getValues();",
                    "var form = button.findParentByType('form');",
                    "var oplata = 0;",
                    "var otoplenie = form.getForm().findField('otoplenie').getValue();",
                    "var podogrev = form.getForm().findField('podogrev').getValue();",
                    "var voda = form.getForm().findField('voda').getValue();",
                    "var stoki = form.getForm().findField('stoki').getValue();",
                    "var summa = parseFloat(form.getForm().findField('summa').getValue()).toFixed(2);",
                    "oplata =parseFloat(otoplenie + podogrev + voda + stoki ).toFixed(2);",
                    "//console.log(summa);",
                    "//console.log(oplata);",
                    "",
                    "if(summa === oplata) {",
                    "    if (summa !== \"0\") {",
                    "        var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "        var values =stUser.getAt(0);",
                    "        var vibor = values.get('vibor');",
                    "        this.getWinEditOplataOrg().close();",
                    "        this.editOplataOrg(value);",
                    "",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Контроль данных',",
                    "            msg: 'Оплата равна 0',",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "} else {",
                    "    Ext.MessageBox.show({",
                    "        title: 'Контроль данных',",
                    "        msg: 'Не совпадают правая и левая части оплаты',",
                    "        buttons: Ext.MessageBox.OK,",
                    "        icon: Ext.MessageBox.ERROR",
                    "    });",
                    "}"
                ],
                "name": "click"
            },
            "name": "onBtEditOplataOrgClick",
            "designerId": "cc660a74-50e5-415d-b02f-12cb03ea6611"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "editOplataOrg",
                "implHandler": [
                    "// in use",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StOplataFilial = Ext.data.StoreManager.get(\"StOplataFilial\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    what:\"editOplataOrg\"",
                    "};",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if(results.success===\"1\"){",
                    "        Ext.MessageBox.show({",
                    "            title: 'Редактирование записи  по оплате',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        StOplataFilial.load({",
                    "            params: {",
                    "                what:'OplataFilial',",
                    "                filial_id: values.get('filial_id'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            scope:this",
                    "        });",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Редактирование записи  по оплате',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});",
                    ""
                ]
            },
            "name": "editOplataOrg",
            "designerId": "836bf430-d894-47f2-bac0-88d7fda24c2a"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "WinEditOplataOrg",
                "selector": "#winEditOplataOrg",
                "xtype": null
            },
            "name": "WinEditOplataOrg",
            "designerId": "bc2db865-6527-41fb-a8d5-db8c76ece5f3"
        }
    ]
}